<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OPS.Obfuscator.Editor</name>
    </assembly>
    <members>
        <member name="T:OPS.Editor.Gui.AContainer">
            <summary>
            Abstract base class for UI containers in the obfuscator editor.
            Provides a structured layout with header, description, and content sections.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContainer.#ctor(OPS.Editor.Gui.AHeader,OPS.Editor.Gui.ADescription,OPS.Editor.Gui.AContent)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.AContainer"/> class.
            </summary>
            <param name="_Header">The header section of the container.</param>
            <param name="_Description">The description section of the container.</param>
            <param name="_Content">The content section of the container.</param>
        </member>
        <member name="P:OPS.Editor.Gui.AContainer.Header">
            <summary>
            Render the header.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.AContainer.ShowHeader">
            <summary>
            Render the header or dont.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.AContainer.EnableHeader">
            <summary>
            Enable the header or dont.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.AContainer.Description">
            <summary>
            Render the description.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.AContainer.ShowDescription">
            <summary>
            Render the description or dont.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.AContainer.EnableDescription">
            <summary>
            Enable the description or dont.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.AContainer.Content">
            <summary>
            Render the content.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.AContainer.ShowContent">
            <summary>
            Render the content or dont.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.AContainer.EnableContent">
            <summary>
            Enable the content or dont.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContainer.Gui">
            <summary>
            Rendering of the gui.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContainer.GuiHeader">
            <summary>
            Renders the header section of the container.
            Can be overridden in derived classes to customize header rendering.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContainer.GuiDescription">
            <summary>
            Renders the description section of the container.
            Can be overridden in derived classes to customize description rendering.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContainer.GuiContent">
            <summary>
            Renders the content section of the container.
            Can be overridden in derived classes to customize content rendering.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.Checkbox">
            <summary>
            Custom checkbox UI element for the obfuscator editor.
            Provides a styled checkbox with on/off states and custom textures.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Checkbox.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.Checkbox"/> class.
            </summary>
            <param name="_Header">Determines if this checkbox is used in a header (affects sizing).</param>
        </member>
        <member name="F:OPS.Editor.Gui.Checkbox.header">
            <summary>
            Indicates whether this checkbox is used in a header.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.Checkbox.texture_On">
            <summary>
            Texture used for the checkbox's "on" state.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.Checkbox.texture_Off">
            <summary>
            Texture used for the checkbox's "off" state.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.Checkbox.width">
            <summary>
            Width of the checkbox in pixels.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.Checkbox.height">
            <summary>
            Height of the checkbox in pixels.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Checkbox.SetupGui">
            <summary>
            Initializes the GUI elements for the checkbox.
            Sets up textures and dimensions based on whether it's a header checkbox.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.Checkbox.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Checkbox.OnGui(System.Boolean)">
            <summary>
            Renders the checkbox and handles user interaction.
            </summary>
            <param name="_CurrentValue">The current state of the checkbox.</param>
            <returns>The new state of the checkbox after user interaction.</returns>
        </member>
        <member name="T:OPS.Editor.Gui.AContent">
            <summary>
            Abstract base class for content sections in the obfuscator editor UI.
            Manages a collection of UI rows and handles their rendering.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.AContent"/> class.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.AContent.RowList">
            <summary>
            Renderer rows in the content.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContent.AddRow(OPS.Editor.Gui.IRow)">
            <summary>
             Adds the _Row to the row list.
            </summary>
            <param name="_Row"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.AContent.OnAddRow(OPS.Editor.Gui.IRow)">
            <summary>
            Called after _Row got add to the row list.
            </summary>
            <param name="_Row"></param>
        </member>
        <member name="M:OPS.Editor.Gui.AContent.SetupGui">
            <summary>
            Setup the content.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContent.OnSetupGui">
            <summary>
            Override for custom content setup.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.AContent.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContent.Gui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AContent.OnGui">
            <summary>
            Custom rendering of the gui.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.DefaultContent">
            <summary>
            Default implementation of the content section in the obfuscator editor UI.
            Provides a standard layout for displaying rows of UI elements with proper spacing and borders.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.DefaultContent.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.DefaultContent.Border">
            <summary>
            Border around the content.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.DefaultContent.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.DefaultContainer">
            <summary>
            Default implementation of the container UI element.
            Provides a standard container with header, description, and content sections.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.DefaultContainer.#ctor(OPS.Editor.Gui.AHeader,OPS.Editor.Gui.ADescription,OPS.Editor.Gui.AContent)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.DefaultContainer"/> class.
            </summary>
            <param name="_Header">The header section of the container.</param>
            <param name="_Description">The description section of the container.</param>
            <param name="_Content">The content section of the container.</param>
        </member>
        <member name="T:OPS.Editor.Gui.ADescription">
            <summary>
            Abstract base class for description sections in the obfuscator editor UI.
            Provides functionality for rendering descriptive text or elements.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.ADescription.SetupGui">
            <summary>
            Setup the content.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.ADescription.OnSetupGui">
            <summary>
            Override for custom content setup.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.ADescription.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.ADescription.Gui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.ADescription.OnGui">
            <summary>
            Custom rendering of the gui.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.DefaultDescription">
            <summary>
            Default implementation of the description section in the obfuscator editor UI.
            Displays a text description with proper styling and layout.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.DefaultDescription.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.DefaultDescription"/> class.
            </summary>
            <param name="_Text">The descriptive text to display.</param>
        </member>
        <member name="P:OPS.Editor.Gui.DefaultDescription.Text">
            <summary>
            Gets the descriptive text to display.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.DefaultDescription.Height">
            <summary>
            Gets the height of the description area in pixels.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.DefaultDescription.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.DefaultDescription.Border">
            <summary>
            Border around the content.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.DefaultDescription.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.EmptyDescription">
            <summary>
            An empty implementation of the description section that renders nothing.
            Used when a description is required by the container but should not be visible.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.EmptyDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.EmptyDescription"/> class.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.EmptyDescription.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.AHeader">
            <summary>
            Abstract base class for header sections in the obfuscator editor UI.
            Provides functionality for rendering header elements like titles and controls.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AHeader.SetupGui">
            <summary>
            Setup the content.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AHeader.OnSetupGui">
            <summary>
            Override for custom content setup.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.AHeader.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AHeader.Gui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.AHeader.OnGui">
            <summary>
            Custom rendering of the gui.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.DefaultHeader">
            <summary>
            Default implementation of the header section in the obfuscator editor UI.
            Displays a title text with proper styling and layout.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.DefaultHeader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.DefaultHeader"/> class.
            </summary>
            <param name="_HeaderText">The text to display in the header.</param>
        </member>
        <member name="P:OPS.Editor.Gui.DefaultHeader.HeaderText">
            <summary>
            Text the header shows.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.DefaultHeader.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.DefaultHeader.Height">
            <summary>
            Height of the header.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.DefaultHeader.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.EmptyHeader">
            <summary>
            An empty implementation of the header section that renders nothing.
            Used when a header is required by the container but should not be visible.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.EmptyHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.EmptyHeader"/> class.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.EmptyHeader.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.ARow`1">
            <summary>
            Abstract base class for row elements in the obfuscator editor UI.
            Provides common functionality for displaying and managing row content of type T.
            </summary>
            <typeparam name="T">The type of content this row will manage.</typeparam>
        </member>
        <member name="M:OPS.Editor.Gui.ARow`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.ARow`1"/> class with direct content.
            </summary>
            <param name="_Text">The descriptive text for this row.</param>
            <param name="_RowContent">The content to display and manage in this row.</param>
        </member>
        <member name="M:OPS.Editor.Gui.ARow`1.#ctor(System.String,OPS.Editor.Settings.File.ASettings)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Gui.ARow`1"/> class with content from settings.
            </summary>
            <param name="_Text">The descriptive text for this row.</param>
            <param name="_Settings">The settings object to load/save row content from/to.</param>
        </member>
        <member name="F:OPS.Editor.Gui.ARow`1.settings">
            <summary>
            The settings object used to load and save row content.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.ARow`1.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            If no row content got assigned, but a setting, you can use it here to load the row content.
            </summary>
            <param name="_Settings"></param>
        </member>
        <member name="M:OPS.Editor.Gui.ARow`1.Save(OPS.Editor.Settings.File.ASettings,`0)">
            <summary>
            Store row content to settings.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="P:OPS.Editor.Gui.ARow`1.Enabled">
            <summary>
            Is this Row enabled or disabled.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.ARow`1.Notification_Error">
            <summary>
            Error notification.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.ARow`1.Notification_Warning">
            <summary>
            Warning notification.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.ARow`1.Notification_Info">
            <summary>
            Info notification.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.ARow`1.MinHeight">
            <summary>
            Min Height of this row.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.ARow`1.SetupGui">
            <summary>
            Setup the row.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.ARow`1.OnSetupGui">
            <summary>
            Override for custom row setup.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.ARow`1.Text">
            <summary>
            Gets the text describing the row.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.ARow`1.Bold">
            <summary>
            Gets or sets a value indicating whether the text should be displayed in bold.
            When true, the text will use the larger, bold label style.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.ARow`1.OPS#Editor#Gui#IRow#RowContent">
            <summary>
            The row content.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.ARow`1.RowContent">
            <summary>
            The row content as T.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.ARow`1.firstCall_Gui">
            <summary>
            Flag to track if this is the first time the GUI is being rendered.
            Used to trigger one-time setup operations.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.ARow`1.Gui(System.Int32)">
            <summary>
            Render the row with _RowIndex.
            </summary>
            <param name="_RowIndex"></param>
        </member>
        <member name="M:OPS.Editor.Gui.ARow`1.OnGui(System.Int32)">
            <summary>
            Override to change how the row content will be rendered.
            </summary>
            <param name="_RowIndex"></param>
        </member>
        <member name="T:OPS.Editor.Gui.IRow">
            <summary>
            Interface for row elements in the obfuscator editor UI.
            Defines the contract for all row types that can be displayed in content sections.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.IRow.Enabled">
            <summary>
            Is this Row enabled or disabled.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.IRow.RowContent">
            <summary>
            The row content.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.IRow.Gui(System.Int32)">
            <summary>
            Render the row with the specified index.
            </summary>
            <param name="_RowIndex">The index of the row in its parent container, used for alternating background colors.</param>
        </member>
        <member name="F:OPS.Editor.Gui.Row_Array.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_Array.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as array.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.Row_Array.Save(OPS.Editor.Settings.File.ASettings,System.String[])">
            <summary>
            Store in settings as array.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="F:OPS.Editor.Gui.Row_Boolean.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_Boolean.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as bool.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.Row_Boolean.Save(OPS.Editor.Settings.File.ASettings,System.Boolean)">
            <summary>
            Store in settings as bool.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="F:OPS.Editor.Gui.Row_DropDown.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_DropDown.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as string.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.Row_DropDown.Save(OPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Store in settings as string.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="P:OPS.Editor.Gui.Row_DropDown.Selected">
            <summary>
            Selected Index in DropDownValues.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Row_DropDown.DropDownValues">
            <summary>
            Valid options for the DropDown.
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.Row_DropDown.onValueChanged">
            <summary>
            Action when the drop down value changed.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_DropDown.CallOnValueChanged">
            <summary>
            Call onValueChanged if it is not null!
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.Row_DropDown_Enum`1.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_DropDown_Enum`1.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as enum.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.Row_DropDown_Enum`1.Save(OPS.Editor.Settings.File.ASettings,`0)">
            <summary>
            Store in settings as enum.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="F:OPS.Editor.Gui.Row_DropDown_Enum`1.onValueChanged">
            <summary>
            Action when the drop down value changed.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_DropDown_Enum`1.CallOnValueChanged">
            <summary>
            Call onValueChanged if it is not null!
            </summary>
        </member>
        <member name="F:OPS.Editor.Gui.Row_Multi_Boolean.settingsElementKey_Array">
            <summary>
            Key array for the settings elements.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_Multi_Boolean.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as string to bool array.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.Row_Multi_Boolean.Save(OPS.Editor.Settings.File.ASettings,System.Boolean[])">
            <summary>
            Store in settings as string to bool array.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="F:OPS.Editor.Gui.Row_OpenFileSelect.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_OpenFileSelect.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as string.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.Row_OpenFileSelect.Save(OPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Store in settings as string.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="F:OPS.Editor.Gui.Row_SaveFileSelect.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_SaveFileSelect.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as string.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.Row_SaveFileSelect.Save(OPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Store in settings as string.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="F:OPS.Editor.Gui.Row_TextArea.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_TextArea.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as string.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.Row_TextArea.Save(OPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Store in settings as string.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="F:OPS.Editor.Gui.Row_TextBox.settingsElementKey">
            <summary>
            Key for the settings element.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.Row_TextBox.Load(OPS.Editor.Settings.File.ASettings)">
            <summary>
            Load from settings as string.
            </summary>
            <param name="_Settings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Gui.Row_TextBox.Save(OPS.Editor.Settings.File.ASettings,System.String)">
            <summary>
            Store in settings as string.
            </summary>
            <param name="_Settings"></param>
            <param name="_RowContent"></param>
        </member>
        <member name="T:OPS.Editor.Gui.TextureHelper">
            <summary>
            Helper class providing utility methods for texture generation and manipulation.
            </summary>
        </member>
        <member name="M:OPS.Editor.Gui.TextureHelper.MakeTexture(System.Int32,System.Int32,UnityEngine.Color)">
            <summary>
            Creates a solid color texture with the specified dimensions and color.
            </summary>
            <param name="_Width">Width of the texture in pixels.</param>
            <param name="_Height">Height of the texture in pixels.</param>
            <param name="_Color">Color to fill the texture with.</param>
            <returns>A new Texture2D filled with the specified color.</returns>
        </member>
        <member name="T:OPS.Editor.Gui.Style.AGuiStyle">
            <summary>
            Abstract base class defining the GUI styling system for the obfuscator editor.
            Provides access to all UI element styles used throughout the application.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.ActiveStyle">
            <summary>
            Gets or sets the currently active GUI style implementation.
            Defaults to DefaultStyle.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Container_Header_Background">
            <summary>
            Gets the background style for container headers.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Container_Header_Label">
            <summary>
            Gets the label style for container headers.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Container_Description_Background">
            <summary>
            Gets the background style for container descriptions.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Container_Description_Label">
            <summary>
            Gets the label style for container descriptions.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Container_Content_Background">
            <summary>
            Gets the background style for container content areas.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Container_Content_Label">
            <summary>
            Gets the label style for container content text.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Row_Background_Light">
            <summary>
            Gets the light background style for rows.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Row_Background_Dark">
            <summary>
            Gets the dark background style for rows.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Row_Label">
            <summary>
            Gets the standard label style for rows.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Row_Label_Big">
            <summary>
            Gets the larger label style for rows.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Button">
            <summary>
            Gets the style for buttons.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.Toolbar">
            <summary>
            Gets the style for toolbar elements.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.CheckBox_On">
            <summary>
            Gets the texture for checked checkboxes.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.CheckBox_Off">
            <summary>
            Gets the texture for unchecked checkboxes.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.FoldOut_In">
            <summary>
            Gets the texture for folded-in (collapsed) foldout controls.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.AGuiStyle.FoldOut_Out">
            <summary>
            Gets the texture for folded-out (expanded) foldout controls.
            </summary>
        </member>
        <member name="T:OPS.Editor.Gui.Style.DefaultStyle">
            <summary>
            Default implementation of the GUI styling system.
            Provides standard styling for all UI elements in the obfuscator editor.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Container_Header_Background">
            <summary>
            Gets the background style for container headers.
            Creates a semi-transparent white background.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Container_Header_Label">
            <summary>
            Gets the label style for container headers.
            Creates a label with increased font size.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Container_Description_Background">
            <summary>
            Gets the background style for container descriptions.
            Creates a semi-transparent white background.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Container_Description_Label">
            <summary>
            Gets the label style for container descriptions.
            Creates a label with medium-large font size.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Container_Content_Background">
            <summary>
            Gets the background style for container content areas.
            Creates a semi-transparent white background.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Container_Content_Label">
            <summary>
            Gets the label style for container content text.
            Creates a standard-sized label.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Row_Background_Light">
            <summary>
            Gets the light background style for rows.
            Creates a slightly transparent white background.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Row_Background_Dark">
            <summary>
            Gets the dark background style for rows.
            Creates a more opaque white background than the light version.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Row_Label">
            <summary>
            Gets the standard label style for rows.
            Creates a standard-sized label.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Row_Label_Big">
            <summary>
            Gets the larger label style for rows.
            Creates a bold, larger-sized label.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Button">
            <summary>
            Gets the style for buttons.
            Creates a button that looks like a label with no background.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.Toolbar">
            <summary>
            Gets the style for toolbar elements.
            Creates a large button suitable for toolbar usage.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.CheckBox_On">
            <summary>
            Gets the texture for checked checkboxes.
            Loads the custom "On" button texture from resources.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.CheckBox_Off">
            <summary>
            Gets the texture for unchecked checkboxes.
            Loads the custom "Off" button texture from resources.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.FoldOut_In">
            <summary>
            Gets the texture for folded-in (collapsed) foldout controls.
            Loads the custom foldout collapsed state texture from resources.
            </summary>
        </member>
        <member name="P:OPS.Editor.Gui.Style.DefaultStyle.FoldOut_Out">
            <summary>
            Gets the texture for folded-out (expanded) foldout controls.
            Loads the custom foldout expanded state texture from resources.
            </summary>
        </member>
        <member name="T:OPS.Editor.IO.FileHelper">
            <summary>
            Provides utilities for working with the file system.
            </summary>
        </member>
        <member name="M:OPS.Editor.IO.FileHelper.GetAllRelativePaths(System.String)">
            <summary>
            Recursively retrieves all directories and files under the specified root path,
            and returns their paths relative to the root.
            </summary>
            <param name="_RootPath">The root directory to search.</param>
            <returns>
            A list of relative paths (to the rootPath) including all subdirectories and files.
            </returns>
            <exception cref="T:System.ArgumentException">Thrown when the rootPath is null or empty.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">Thrown when the specified rootPath does not exist.</exception>
        </member>
        <member name="M:OPS.Editor.IO.FileHelper.GetRelativePath(System.String,System.String)">
            <summary>
            Converts an absolute path to a relative path based on the specified base path.
            </summary>
            <param name="_BasePath">The base path to which the path should be made relative.</param>
            <param name="_Path">The full path to convert.</param>
            <returns>The relative path from the basePath to the specified path.</returns>
        </member>
        <member name="T:OPS.Editor.IO.File.IFileReference">
            <summary>
            Represents a reference to a file in the file system.
            This interface provides a standardized way to access file paths across the obfuscator.
            </summary>
        </member>
        <member name="P:OPS.Editor.IO.File.IFileReference.FilePath">
            <summary>
            Gets the path to the referenced file. 
            This can be either a relative or absolute path depending on the implementation.
            </summary>
        </member>
        <member name="T:OPS.Editor.IO.Version.IVersionAble">
            <summary>
            Make a class version able and allow to load from a different version.
            </summary>
        </member>
        <member name="P:OPS.Editor.IO.Version.IVersionAble.Version">
            <summary>
            The version of this object.
            </summary>
        </member>
        <member name="M:OPS.Editor.IO.Version.IVersionAble.LoadFromVersion``1(``0)">
            <summary>
            Loads data from a different version of the same object type into the current object.
            Implementations should handle version differences and migrate data appropriately.
            </summary>
            <typeparam name="TVersionAble">The type of the versioned object to load from.</typeparam>
            <param name="_VersionAble">The versioned object instance to load data from.</param>
            <returns>True if the data was successfully loaded and migrated; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Editor.Project.AProject">
            <summary>
            Base implementation of the <see cref="T:OPS.Editor.Project.IProject"/> interface.
            Provides functionality for executing a sequence of steps, passing output from one step as input to the next,
            and tracking the overall execution status.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.AProject.ActiveReport">
            <summary>
            Gets or sets the active report for the project.
            This report is used for logging information, warnings, and errors during project execution.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.AProject.SomeStepFailed">
            <summary>
            Gets a value indicating whether any of the executed steps have failed.
            This flag is set to true when any step in the project execution sequence returns a failure status.
            </summary>
        </member>
        <member name="F:OPS.Editor.Project.AProject.lastStepOutput">
            <summary>
            Stores the output from the most recently executed step.
            This output is passed as input to the next step in the sequence.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.AProject.RunStep(OPS.Editor.Project.Step.IStep)">
            <summary>
            Executes a single step in the project.
            Handles the complete lifecycle of the step: loading, processing, and unloading.
            Stores the step's output to pass as input to the next step.
            Updates the SomeStepFailed flag if any part of the step execution fails.
            </summary>
            <param name="_Step">The step to execute.</param>
            <returns>True if the step executed successfully; false if it failed.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _Step is null.</exception>
        </member>
        <member name="T:OPS.Editor.Project.Component.IComponent">
            <summary>
            Defines the basic contract for components in the obfuscator project system.
            Components are identifiable elements with descriptive information that can be used in various parts of the project.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Component.IComponent.Name">
            <summary>
            Gets the name of the component.
            Used for identification and display purposes.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Component.IComponent.Description">
            <summary>
            Gets the detailed description of the component.
            Provides comprehensive information about the component's purpose and functionality.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Component.IComponent.ShortDescription">
            <summary>
            Gets a brief description of the component.
            Used for tooltips, summaries, and other contexts where space is limited.
            </summary>
        </member>
        <member name="T:OPS.Editor.Project.DataContainer.ADataContainer">
            <summary>
            Concrete implementation of the <see cref="T:OPS.Editor.Project.DataContainer.IDataContainer"/> interface.
            Provides a dictionary-based storage for key-value pairs with support for different data types.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.DataContainer.ADataContainer.Data">
            <summary>
            Gets the underlying dictionary that stores the container's data.
            Keys are strings and values can be any object type.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.DataContainer.ADataContainer.Has(System.String)">
            <summary>
            Determines whether the container has data associated with the specified key.
            </summary>
            <param name="_Key">The key to check for existence.</param>
            <returns>True if data exists for the specified key; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Editor.Project.DataContainer.ADataContainer.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Adds or updates data in the container for the specified key.
            </summary>
            <typeparam name="TDataType">The type of data to store.</typeparam>
            <param name="_Key">The key to associate with the data.</param>
            <param name="_Data">The data to store.</param>
            <param name="_Override">When true, overwrites any existing data with the same key; when false, preserves existing data.</param>
            <returns>True if the data was successfully added or updated; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Editor.Project.DataContainer.ADataContainer.Get``1(System.String,``0)">
            <summary>
            Retrieves data associated with the specified key.
            </summary>
            <typeparam name="TDataType">The expected type of the data.</typeparam>
            <param name="_Key">The key of the data to retrieve.</param>
            <param name="_Default">The default value to return if the key is not found or the data cannot be cast to the expected type.</param>
            <returns>The data associated with the key if found and of the correct type; otherwise, the default value.</returns>
        </member>
        <member name="T:OPS.Editor.Project.DataContainer.IDataContainer">
            <summary>
            Defines a generic key-value data storage container for the obfuscator project system.
            Provides methods to store, retrieve, and check for the existence of typed data values.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.DataContainer.IDataContainer.Has(System.String)">
            <summary>
            Determines whether the container has data associated with the specified key.
            </summary>
            <param name="_Key">The key to check for existence.</param>
            <returns>True if data exists for the specified key; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Editor.Project.DataContainer.IDataContainer.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Adds or updates data in the container for the specified key.
            </summary>
            <typeparam name="TDataType">The type of data to store.</typeparam>
            <param name="_Key">The key to associate with the data.</param>
            <param name="_Data">The data to store.</param>
            <param name="_Override">When true, overwrites any existing data with the same key; when false, preserves existing data.</param>
            <returns>True if the data was successfully added or updated; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Editor.Project.DataContainer.IDataContainer.Get``1(System.String,``0)">
            <summary>
            Retrieves data associated with the specified key.
            </summary>
            <typeparam name="TDataType">The expected type of the data.</typeparam>
            <param name="_Key">The key of the data to retrieve.</param>
            <param name="_Default">The default value to return if the key is not found or the data cannot be cast to the expected type.</param>
            <returns>The data associated with the key if found and of the correct type; otherwise, the default value.</returns>
        </member>
        <member name="T:OPS.Editor.Project.IProject">
            <summary>
            Defines the contract for project execution in the obfuscator.
            A project manages a sequence of steps, executing them in order and passing outputs from one step as inputs to the next.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.IProject.ActiveReport">
            <summary>
            Gets the active report for the project.
            This report is used for logging information, warnings, and errors during project execution.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.IProject.SomeStepFailed">
            <summary>
            Gets a value indicating whether any of the executed steps have failed.
            This flag is set to true when any step in the project execution sequence returns a failure status.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.IProject.RunStep(OPS.Editor.Project.Step.IStep)">
            <summary>
            Executes a single step in the project.
            Handles the complete lifecycle of the step: loading, processing, and unloading.
            </summary>
            <param name="_Step">The step to execute.</param>
            <returns>True if the step executed successfully; false if it failed.</returns>
        </member>
        <member name="T:OPS.Editor.Project.Pipeline.APipeline">
            <summary>
            Abstract base implementation of the <see cref="T:OPS.Editor.Project.Pipeline.IPipeline"/> interface.
            Provides common functionality for managing pipeline components and executing the pipeline process.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.APipeline.#ctor(OPS.Editor.Project.Step.IStep)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Project.Pipeline.APipeline"/> class.
            </summary>
            <param name="_Step">The parent step that owns this pipeline.</param>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.APipeline.Step">
            <summary>
            Gets the parent step that owns this pipeline.
            The pipeline executes as part of this step's processing.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.APipeline.ComponentList">
            <summary>
            Gets the list of components that make up this pipeline.
            Components are executed in sequence during pipeline processing.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.APipeline.GetPipelineComponents``1">
            <summary>
            Gets all pipeline components of a specific type.
            </summary>
            <typeparam name="TPipelineComponent">The type of components to retrieve.</typeparam>
            <returns>A list of pipeline components that are of the specified type or inherit from it.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.APipeline.AddPipelineComponent(OPS.Editor.Project.Pipeline.Component.IPipelineComponent)">
            <summary>
            Adds a component to the pipeline.
            Associates the component with this pipeline and adds it to the component list.
            </summary>
            <param name="_PipelineComponent">The component to add to the pipeline.</param>
            <returns>True if the component was successfully added; false if the component list is null.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.APipeline.ProcessPipeline(OPS.Editor.Project.Step.IStepInput,OPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Processes the pipeline by executing all components in sequence.
            The processing is divided into three phases: pre-process, custom process, and post-process.
            </summary>
            <param name="_StepInput">The input data for the pipeline processing.</param>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
            <returns>True if the pipeline processed successfully; false if any component or phase failed.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.APipeline.OnProcessPipeline">
            <summary>
            Performs the custom processing logic for this pipeline.
            This method is called between the pre-process and post-process phases.
            Derived classes must implement this method to provide pipeline-specific processing.
            </summary>
            <returns>True if the custom processing succeeded; false if it failed.</returns>
        </member>
        <member name="T:OPS.Editor.Project.Pipeline.Component.APipelineComponent">
            <summary>
            Abstract base implementation of the <see cref="T:OPS.Editor.Project.Pipeline.Component.IPipelineComponent"/> interface.
            Provides common functionality for pipeline components and default implementations of interface methods.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.Component.APipelineComponent.Pipeline">
            <summary>
            Gets the pipeline that this component belongs to.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.Component.APipelineComponent.AssignToPipeline(OPS.Editor.Project.Pipeline.IPipeline)">
            <summary>
            Associates this component with a pipeline.
            Called when the component is added to a pipeline.
            </summary>
            <param name="_Pipeline">The pipeline to associate this component with.</param>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.Component.APipelineComponent.Name">
            <summary>
            Gets the name of the component.
            Used for identification and display purposes.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.Component.APipelineComponent.Description">
            <summary>
            Gets the detailed description of the component.
            Provides comprehensive information about the component's purpose and functionality.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.Component.APipelineComponent.ShortDescription">
            <summary>
            Gets a brief description of the component.
            Used for tooltips, summaries, and other contexts where space is limited.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.Component.APipelineComponent.IsActive">
            <summary>
            Gets a value indicating whether this component is active and should be processed.
            By default, returns true. Override this property to implement conditional activation.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.Component.APipelineComponent.OnPrePipelineProcess(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Called at the beginning of the pipeline process before any other processing occurs.
            Override this method to read data from the step input and prepare for processing.
            Default implementation returns true without performing any actions.
            </summary>
            <param name="_StepInput">The input data from the previous step.</param>
            <returns>True if pre-processing succeeded; false if it failed.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.Component.APipelineComponent.OnPostPipelineProcess(OPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Called at the end of the pipeline process after all other processing is complete.
            Override this method to write data to the step output for the next step to use.
            Default implementation returns true without performing any actions.
            </summary>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
            <returns>True if post-processing succeeded; false if it failed.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.Component.APipelineComponent.ToString">
            <summary>
            Returns a string representation of this component.
            Uses the component's name as its string representation.
            </summary>
            <returns>The name of the component.</returns>
        </member>
        <member name="T:OPS.Editor.Project.Pipeline.Component.IPipelineComponent">
            <summary>
            Defines a component that can be executed as part of a pipeline process.
            Pipeline components handle specific processing tasks and can be combined to create complex workflows.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.Component.IPipelineComponent.Pipeline">
            <summary>
            Gets the pipeline that this component belongs to.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.Component.IPipelineComponent.AssignToPipeline(OPS.Editor.Project.Pipeline.IPipeline)">
            <summary>
            Associates this component with a pipeline.
            Called when the component is added to a pipeline.
            </summary>
            <param name="_Pipeline">The pipeline to associate this component with.</param>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.Component.IPipelineComponent.IsActive">
            <summary>
            Gets a value indicating whether this component is active and should be processed.
            Inactive components are skipped during pipeline processing.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.Component.IPipelineComponent.OnPrePipelineProcess(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Called at the beginning of the pipeline process before any other processing occurs.
            Use this method to read data from the step input and prepare for processing.
            </summary>
            <param name="_StepInput">The input data from the previous step.</param>
            <returns>True if pre-processing succeeded; false if it failed.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.Component.IPipelineComponent.OnPostPipelineProcess(OPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Called at the end of the pipeline process after all other processing is complete.
            Use this method to write data to the step output for the next step to use.
            </summary>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
            <returns>True if post-processing succeeded; false if it failed.</returns>
        </member>
        <member name="T:OPS.Editor.Project.Pipeline.IPipeline">
            <summary>
            Defines a processing pipeline that executes a series of components in sequence.
            A pipeline takes input data, processes it through components, and produces output.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.IPipeline.Step">
            <summary>
            Gets the parent step that owns this pipeline.
            The pipeline executes as part of this step's processing.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Pipeline.IPipeline.ComponentList">
            <summary>
            Gets the list of components that make up this pipeline.
            Components are executed in sequence during pipeline processing.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Pipeline.IPipeline.ProcessPipeline(OPS.Editor.Project.Step.IStepInput,OPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Processes the pipeline by executing all components in sequence.
            Components can modify the input and output data during processing.
            </summary>
            <param name="_StepInput">The input data for the pipeline processing.</param>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
            <returns>True if the pipeline processed successfully; false if any component failed.</returns>
        </member>
        <member name="T:OPS.Editor.Project.Step.AStep`2">
            <summary>
            Abstract base implementation of the <see cref="T:OPS.Editor.Project.Step.IStep"/> interface.
            Provides common functionality for step processing with strongly-typed input and output.
            </summary>
            <typeparam name="TStepInput">The specific type of input data for this step.</typeparam>
            <typeparam name="TStepOutput">The specific type of output data this step produces.</typeparam>
        </member>
        <member name="P:OPS.Editor.Project.Step.AStep`2.Name">
            <summary>
            Gets the name of this step.
            Used for identification and logging purposes.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Step.AStep`2.Settings">
            <summary>
            Gets or sets the settings associated with this step.
            Contains configuration values that control the step's behavior.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Step.AStep`2.Pipeline">
            <summary>
            Gets or sets the pipeline that this step executes.
            The pipeline contains components that perform the actual processing work.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Step.AStep`2.DataContainer">
            <summary>
            Gets or sets the data container shared between this step and its pipeline.
            Provides storage for data that needs to be accessible across components.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Step.AStep`2.Load">
            <summary>
            Loads and initializes the step.
            Checks if the step is already loaded, and if not, calls OnLoad to perform the actual loading.
            </summary>
            <returns>True if the step loaded successfully or was already loaded; false otherwise.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Step.AStep`2.OnLoad">
            <summary>
            Performs the actual loading and initialization of the step.
            Derived classes must implement this method to set up their specific resources.
            </summary>
            <returns>True if the step loaded successfully; false otherwise.</returns>
        </member>
        <member name="P:OPS.Editor.Project.Step.AStep`2.GotLoaded">
            <summary>
            Gets a value indicating whether this step has been successfully loaded.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Step.AStep`2.OPS#Editor#Project#Step#IStep#Process(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Explicit interface implementation of the Process method.
            Delegates to the strongly-typed Process method.
            </summary>
            <param name="_IStepInput">The input data from the previous step.</param>
            <returns>The output data to be passed to the next step.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Step.AStep`2.PreProcess(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Performs pre-processing operations before the pipeline is executed.
            Override this method to prepare data or resources needed by the pipeline.
            </summary>
            <param name="_IStepInput">The input data from the previous step.</param>
        </member>
        <member name="M:OPS.Editor.Project.Step.AStep`2.Process(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Processes the step using the provided input data.
            Creates a new output instance, executes the pipeline, and handles pre/post processing.
            </summary>
            <param name="_IStepInput">The input data from the previous step.</param>
            <returns>The strongly-typed output data to be passed to the next step.</returns>
            <exception cref="T:System.Exception">Thrown when the Pipeline property is null.</exception>
        </member>
        <member name="M:OPS.Editor.Project.Step.AStep`2.PostProcess(`1)">
            <summary>
            Performs post-processing operations after the pipeline has executed.
            Override this method to modify the output or perform cleanup operations.
            </summary>
            <param name="_StepOutput">The output data that will be passed to the next step.</param>
        </member>
        <member name="M:OPS.Editor.Project.Step.AStep`2.Unload">
            <summary>
            Unloads the step and releases any resources.
            Calls OnUnload to perform the actual unloading and updates the GotLoaded flag.
            </summary>
            <returns>True if the step was unloaded successfully; false otherwise.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Step.AStep`2.OnUnload">
            <summary>
            Performs the actual unloading and resource cleanup for the step.
            Derived classes must implement this method to release their specific resources.
            </summary>
            <returns>True if the step unloaded successfully; false otherwise.</returns>
        </member>
        <member name="T:OPS.Editor.Project.Step.IStep">
            <summary>
            Defines a processing step within a project.
            Steps are the fundamental units of work in the obfuscator, each responsible for a specific phase of processing.
            Each step has its own pipeline of components that perform the actual work.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Step.IStep.Name">
            <summary>
            Gets the name of this step.
            Used for identification and logging purposes.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Step.IStep.Settings">
            <summary>
            Gets the settings associated with this step.
            Contains configuration values that control the step's behavior.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Step.IStep.Pipeline">
            <summary>
            Gets the pipeline that this step executes.
            The pipeline contains components that perform the actual processing work.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Step.IStep.DataContainer">
            <summary>
            Gets the data container shared between this step and its pipeline.
            Provides storage for data that needs to be accessible across components.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Step.IStep.Load">
            <summary>
            Loads and initializes the step.
            Prepares any resources needed for processing.
            </summary>
            <returns>True if the step loaded successfully; false otherwise.</returns>
        </member>
        <member name="P:OPS.Editor.Project.Step.IStep.GotLoaded">
            <summary>
            Gets a value indicating whether this step has been successfully loaded.
            </summary>
        </member>
        <member name="M:OPS.Editor.Project.Step.IStep.Process(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Processes the step using the provided input data.
            Executes the step's pipeline and produces output data.
            </summary>
            <param name="_IStepInput">The input data from the previous step.</param>
            <returns>The output data to be passed to the next step.</returns>
        </member>
        <member name="M:OPS.Editor.Project.Step.IStep.Unload">
            <summary>
            Unloads the step and releases any resources.
            Called after processing is complete.
            </summary>
            <returns>True if the step was unloaded successfully; false otherwise.</returns>
        </member>
        <member name="T:OPS.Editor.Project.Step.IStepInput">
            <summary>
            Defines the input data for a step in the project processing pipeline.
            Extends <see cref="T:OPS.Editor.Project.DataContainer.IDataContainer"/> to provide key-value data storage capabilities.
            Step inputs contain data passed from previous steps that the current step can use.
            </summary>
        </member>
        <member name="T:OPS.Editor.Project.Step.IStepOutput">
            <summary>
            Defines the output data from a step in the project processing pipeline.
            Extends <see cref="T:OPS.Editor.Project.Step.IStepInput"/> because each step's output becomes the input for the next step.
            Adds failure tracking to the data container functionality.
            </summary>
        </member>
        <member name="P:OPS.Editor.Project.Step.IStepOutput.Failed">
            <summary>
            Gets or sets a value indicating whether the step processing failed.
            When set to true, indicates that the step encountered an error and could not complete successfully.
            </summary>
        </member>
        <member name="T:OPS.Editor.Report.AReport">
            <summary>
            Abstract base class for report generation and logging.
            Provides functionality to record, format, and save log messages with different severity levels.
            Implements <see cref="T:OPS.Editor.IO.File.IFileReference"/> to support saving reports to files.
            </summary>
        </member>
        <member name="M:OPS.Editor.Report.AReport.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Report.AReport"/> class.
            </summary>
            <param name="_ReportName">The name of the report.</param>
            <param name="_ReportDescription">A description of the report's purpose.</param>
            <param name="_FilePath">The file path where the report will be saved.</param>
        </member>
        <member name="P:OPS.Editor.Report.AReport.Name">
            <summary>
            Gets the name of the report.
            </summary>
        </member>
        <member name="P:OPS.Editor.Report.AReport.Description">
            <summary>
            Gets the description of the report's purpose.
            </summary>
        </member>
        <member name="P:OPS.Editor.Report.AReport.ReportLevel">
            <summary>
            Gets the minimum severity level for messages to be included in the report.
            Messages with lower severity levels will be ignored.
            </summary>
        </member>
        <member name="P:OPS.Editor.Report.AReport.Header">
            <summary>
            Gets the header text that appears at the beginning of each log entry.
            </summary>
        </member>
        <member name="M:OPS.Editor.Report.AReport.SetHeader(System.String)">
            <summary>
            Sets the header text that appears at the beginning of each log entry.
            </summary>
            <param name="_Header">The header text to set.</param>
        </member>
        <member name="P:OPS.Editor.Report.AReport.FilePath">
            <summary>
            Gets the file path where the report will be saved.
            Implements the <see cref="P:OPS.Editor.IO.File.IFileReference.FilePath"/> property.
            </summary>
        </member>
        <member name="F:OPS.Editor.Report.AReport.reportStringBuilder">
            <summary>
            StringBuilder used to accumulate report entries before saving to file.
            </summary>
        </member>
        <member name="M:OPS.Editor.Report.AReport.GetReportLinePrefix">
            <summary>
            Gets the prefix for each report line, which includes the header in square brackets.
            </summary>
            <returns>A formatted string containing the header prefix.</returns>
        </member>
        <member name="M:OPS.Editor.Report.AReport.Append(OPS.Editor.Report.EReportLevel,System.String,System.Boolean)">
            <summary>
            Appends a log message to the report with the specified severity level.
            </summary>
            <param name="_ReportLevel">The severity level of the message.</param>
            <param name="_Text">The message text to append.</param>
            <param name="_ForceDisplay">When true, forces the message to be displayed in the Unity console regardless of severity level.</param>
        </member>
        <member name="M:OPS.Editor.Report.AReport.Append(OPS.Editor.Report.EReportLevel,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Appends a log message with a list of items to the report.
            </summary>
            <param name="_ReportLevel">The severity level of the message.</param>
            <param name="_Text">The message text to append.</param>
            <param name="_ItemList">A list of items to be included in the message, each on a new line.</param>
            <param name="_ForceDisplay">When true, forces the message to be displayed in the Unity console regardless of severity level.</param>
        </member>
        <member name="M:OPS.Editor.Report.AReport.SaveToFile(System.Boolean)">
            <summary>
            Saves the accumulated report content to the specified file.
            </summary>
            <param name="_Append">When true, appends to the existing file; when false, overwrites the file.</param>
        </member>
        <member name="T:OPS.Editor.Report.EReportLevel">
            <summary>
            Defines severity levels for report messages.
            Higher numeric values represent more severe issues.
            </summary>
        </member>
        <member name="F:OPS.Editor.Report.EReportLevel.Debug">
            <summary>
            Debug-level information, typically only relevant during development.
            </summary>
        </member>
        <member name="F:OPS.Editor.Report.EReportLevel.Info">
            <summary>
            General information that may be useful for understanding system operation.
            </summary>
        </member>
        <member name="F:OPS.Editor.Report.EReportLevel.Warning">
            <summary>
            Potential issues that don't prevent operation but may indicate problems.
            </summary>
        </member>
        <member name="F:OPS.Editor.Report.EReportLevel.Error">
            <summary>
            Critical issues that prevent proper operation or indicate failures.
            </summary>
        </member>
        <member name="T:OPS.Editor.Report.ProjectReport">
            <summary>
            A specialized report implementation for project-specific logging.
            Includes company and product information in the log entries.
            </summary>
        </member>
        <member name="M:OPS.Editor.Report.ProjectReport.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Report.ProjectReport"/> class.
            </summary>
            <param name="_Company">The company name associated with the project.</param>
            <param name="_Product">The product name associated with the project.</param>
            <param name="_ReportName">The name of the report.</param>
            <param name="_ReportDescription">A description of the report's purpose.</param>
            <param name="_FilePath">The file path where the report will be saved.</param>
        </member>
        <member name="P:OPS.Editor.Report.ProjectReport.Company">
            <summary>
            Gets the company name associated with the project.
            </summary>
        </member>
        <member name="P:OPS.Editor.Report.ProjectReport.Product">
            <summary>
            Gets the product name associated with the project.
            </summary>
        </member>
        <member name="M:OPS.Editor.Report.ProjectReport.GetReportLinePrefix">
            <summary>
            Gets the prefix for each report line, which includes company and product information.
            Overrides the base implementation to include company and product in the prefix.
            </summary>
            <returns>A formatted string containing the company, product, and header prefix.</returns>
        </member>
        <member name="T:OPS.Editor.Settings.File.ASettings">
            <summary>
            Abstract base class for JSON-serializable settings.
            Provides functionality to store and retrieve settings as key-value pairs with type information.
            Supports various data types including strings, booleans, integers, enums, and string arrays.
            </summary>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Settings.File.ASettings"/> class.
            </summary>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.ParseToBool(System.String)">
            <summary>
            Helper: Parse String to bool.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.ParseToString(System.Boolean)">
            <summary>
            Helper: Parse bool to String.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.ParseToInt(System.String)">
            <summary>
            Helper: Parse String to Int32.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.ParseToString(System.Int32)">
            <summary>
            Helper: Parse Int32 to String.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Editor.Settings.File.ASettings.settingsElement_Array">
            <summary>
            Array of settings elements that store key-value pairs with type information.
            This is the primary storage for all settings managed by this class.
            </summary>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Contains_SettingElement(System.String)">
            <summary>
            Returns true if the SettingElementArray contains an element with _Key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Get_SettingElement(System.String)">
            <summary>
            Returns the SettingElement belonging to _Key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Add_SettingElement(OPS.Editor.Settings.File.SettingsElement)">
            <summary>
            Does not check if the element is already added. Just appends it to the array!
            </summary>
            <param name="_SettingsElement"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.String)">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Value"></param>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.Boolean)">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Value"></param>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.Int32)">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Value"></param>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.Enum)">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Value"></param>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Add_Or_UpdateSettingElement(System.String,System.String[])">
            <summary>
            Add or update a setting element.
            </summary>
            <param name="_Key"></param>
            <param name="_Values"></param>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Get_Setting_AsString(System.String,System.String)">
            <summary>
            Get a setting. If this does not exist _Default will be returned.
            </summary>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Get_Setting_AsBool(System.String,System.Boolean)">
            <summary>
            Get a setting. If this does not exist _Default will be returned.
            </summary>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Get_Setting_AsInt(System.String,System.Int32)">
            <summary>
            Get a setting. If this does not exist _Default will be returned.
            </summary>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Get_Setting_AsEnum``1(System.String,``0)">
            <summary>
            Get a setting. If this does not exist _Default will be returned.
            </summary>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Editor.Settings.File.ASettings.Get_Setting_AsArray(System.String)">
            <summary>
            Get a setting. If setting with _Key does not exist, an empty array will be returned.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Editor.Settings.File.ComponentSettings">
            <summary>
            Settings container for a component in the obfuscator.
            Provides storage for component-specific configuration values.
            </summary>
        </member>
        <member name="M:OPS.Editor.Settings.File.ComponentSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Settings.File.ComponentSettings"/> class.
            Creates settings with no name.
            </summary>
        </member>
        <member name="M:OPS.Editor.Settings.File.ComponentSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Settings.File.ComponentSettings"/> class.
            </summary>
            <param name="_Settings_Name">The name to identify these component settings.</param>
        </member>
        <member name="P:OPS.Editor.Settings.File.ComponentSettings.Settings_Name">
            <summary>
            Gets or sets the name that identifies these component settings.
            Used to distinguish between different component settings in a project.
            </summary>
        </member>
        <member name="T:OPS.Editor.Settings.File.ESettingsElementType">
            <summary>
            Defines the data types that can be stored in a settings element.
            Used to determine how to serialize, deserialize, and interpret setting values.
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.File.ESettingsElementType.String">
            <summary>
            String value type.
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.File.ESettingsElementType.Bool">
            <summary>
            Boolean value type (true/false).
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.File.ESettingsElementType.Number">
            <summary>
            Numeric value type (integer).
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.File.ESettingsElementType.Enum">
            <summary>
            Enumeration value type.
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.File.ESettingsElementType.Array_String">
            <summary>
            Array of string values.
            </summary>
        </member>
        <member name="T:OPS.Editor.Settings.File.SettingsElement">
            <summary>
            Represents a single key-value setting within an <see cref="T:OPS.Editor.Settings.File.ASettings"/> instance.
            Stores the setting's key, value, and type information.
            </summary>
        </member>
        <member name="M:OPS.Editor.Settings.File.SettingsElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Settings.File.SettingsElement"/> class.
            Creates an empty settings element.
            </summary>
        </member>
        <member name="M:OPS.Editor.Settings.File.SettingsElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Settings.File.SettingsElement"/> class with a string value.
            </summary>
            <param name="_Key">The key that identifies this setting.</param>
            <param name="_Value">The string value of the setting.</param>
        </member>
        <member name="M:OPS.Editor.Settings.File.SettingsElement.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Editor.Settings.File.SettingsElement"/> class with an array of string values.
            </summary>
            <param name="_Key">The key that identifies this setting.</param>
            <param name="_Values">The array of string values for the setting.</param>
        </member>
        <member name="P:OPS.Editor.Settings.File.SettingsElement.Type">
            <summary>
            Gets or sets the data type of this setting element.
            Determines how the value should be interpreted and serialized.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.File.SettingsElement.Key">
            <summary>
            Gets or sets the key that uniquely identifies this setting within its parent settings object.
            Used to retrieve the setting value.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.File.SettingsElement.Value">
            <summary>
            Gets or sets the value of this setting as a string.
            For non-string types (bool, number, enum), this contains the string representation of the value.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.File.SettingsElement.Values">
            <summary>
            Gets or sets the array of string values for this setting.
            Only used when Type is Array_String.
            </summary>
        </member>
        <member name="T:OPS.Editor.Settings.File.ISettingsOwner">
            <summary>
            Interface for classes that own and manage settings.
            Implementing classes are responsible for providing access to their settings instance.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.File.ISettingsOwner.Settings">
            <summary>
            Gets the settings instance associated with this owner.
            The settings contain configuration values that control the behavior of the owner.
            </summary>
        </member>
        <member name="T:OPS.Editor.Settings.Unity.Build.ABuildSettings">
            <summary>
            Abstract base class for Unity build settings.
            Provides common properties and configuration options for building Unity projects.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.Unity.Build.ABuildSettings.BuildTarget">
            <summary>
            Gets or sets the target platform for the build.
            Specifies the platform (e.g., Windows, Android, iOS) that the build will target.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.Unity.Build.ABuildSettings.BuildTargetGroup">
            <summary>
            Gets or sets the target platform group for the build.
            Specifies the platform group (e.g., Standalone, Mobile) that the build will target.
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.Unity.Build.ABuildSettings.UnityBuildReport">
            <summary>
            Gets or sets the active Unity build report.
            Contains detailed information about the build process and results.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.Unity.Build.ABuildSettings.IsIL2CPPBuild">
            <summary>
            Gets or sets a value indicating whether the build uses IL2CPP scripting backend.
            When true, the build will use IL2CPP; when false, it will use Mono.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.Unity.Build.ABuildSettings.IsMonoBuild">
            <summary>
            Gets or sets a value indicating whether the build uses Mono scripting backend.
            This is the inverse of IsIL2CPPBuild property.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.Unity.Build.ABuildSettings.Compression">
            <summary>
            Gets or sets the compression type to use for the build.
            Determines how assets and data are compressed in the final build.
            </summary>
        </member>
        <member name="P:OPS.Editor.Settings.Unity.Build.ABuildSettings.BuildIntoProject">
            <summary>
            Gets or sets a value indicating whether to build into a project rather than a standalone executable.
            When true, builds to an IDE project (e.g., Xcode for macOS, Visual Studio solution for Windows/Linux).
            </summary>
        </member>
        <member name="T:OPS.Editor.Settings.Unity.Build.CompressionType">
            <summary>
            Defines the supported compression types available in Unity builds.
            Different compression types offer trade-offs between compression ratio, decompression speed, and build time.
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.Unity.Build.CompressionType.None">
            <summary>
            No compression is applied.
            Results in faster build times but larger file sizes.
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.Unity.Build.CompressionType.Lzma">
            <summary>
            LZMA (Lempel-Ziv-Markov chain Algorithm) compression.
            Provides high compression ratios but slower decompression speed.
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.Unity.Build.CompressionType.Lz4">
            <summary>
            LZ4 compression.
            Provides fast compression and decompression with moderate compression ratios.
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.Unity.Build.CompressionType.Lz4HC">
            <summary>
            LZ4HC (High Compression) variant.
            Better compression ratio than standard LZ4 but slower compression speed.
            </summary>
        </member>
        <member name="F:OPS.Editor.Settings.Unity.Build.CompressionType.Lzham">
            <summary>
            LZHAM compression.
            Similar compression ratio to LZMA but with faster decompression.
            </summary>
        </member>
        <member name="T:OPS.Editor.Settings.Unity.Editor.AEditorSettings">
            <summary>
            Abstract base class for Unity editor-specific settings.
            Provides a foundation for storing and managing configuration options that affect the Unity editor's behavior.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.IO.PathHelper">
            <summary>
            Internal path helper for the obfuscator.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.IO.PathHelper.Get_Project_Directory">
            <summary>
            Returns the Unity ObfuscationProject Path (e.g., C:\XYZ\MyUnityProject\)
            </summary>
            <returns>The full path to the Unity project directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.IO.PathHelper.Get_OPS_Directory">
            <summary>
            Returns the full path to the OPS directory.
            </summary>
            <returns>The full path to the OPS directory within the Unity project.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Directory">
            <summary>
            Returns the full path to the OPS Obfuscator directory. 
            </summary>
            <returns>The full path to the OPS Obfuscator directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Editor_Directory">
            <summary>
            Returns the full path to the OPS Obfuscator Editor directory. 
            </summary>
            <returns>The full path to the OPS Obfuscator Editor directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Editor_Temp_Directory">
            <summary>
            Returns the full path to the OPS Obfuscator Editor Temp directory. 
            </summary>
            <returns>The full path to the OPS Obfuscator Editor Temp directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Log_Directory">
            <summary>
            Returns the full path to the OPS Obfuscator Log directory. 
            </summary>
            <returns>The full path to the OPS Obfuscator Log directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.IO.PathHelper.Get_Obfuscator_Settings_Directory">
            <summary>
            Returns the full path to the OPS Obfuscator Settings directory. 
            </summary>
            <returns>The full path to the OPS Obfuscator Settings directory.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.DotNet.Helper.AssemblyHelper">
            <summary>
            Helper class for working with .NET assemblies in the obfuscator.
            Provides utility methods to safely retrieve types from assemblies even when some types cannot be loaded.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Helper.AssemblyHelper.GetLoadableTypes(System.Reflection.Assembly)">
            <summary>
            Retrieves all types that can be loaded from the specified assembly.
            Safely handles ReflectionTypeLoadException by filtering out null types.
            </summary>
            <param name="_Assembly">The assembly to retrieve types from.</param>
            <returns>An enumerable collection of all loadable types in the assembly.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _Assembly is null.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Helper.AssemblyHelper.GetLoadableTypes">
            <summary>
            Retrieves all types that can be loaded from all assemblies in the current application domain.
            Combines types from all loaded assemblies into a single collection.
            </summary>
            <returns>An enumerable collection of all loadable types across all assemblies in the current domain.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension">
            <summary>
            Provides extension methods for the <see cref="T:System.Type"/> class.
            These methods enhance the functionality of the Type class with additional checks and operations
            commonly needed during obfuscation processing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.IsArrayOrList(System.Type)">
            <summary>
            Determines whether the specified type is an array or a List&lt;T&gt;.
            </summary>
            <param name="_Type">The type to check.</param>
            <returns>True if the type is an array or a List&lt;T&gt;; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.GetArrayOrListElementType(System.Type)">
            <summary>
            Gets the element type of an array or List&lt;T&gt;.
            </summary>
            <param name="_Type">The array or list type to get the element type from.</param>
            <returns>The element type if the input is an array or List&lt;T&gt;; otherwise, null.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.IsEnumerable(System.Type)">
            <summary>
            Determines whether the specified type implements IEnumerable.
            </summary>
            <param name="_Type">The type to check.</param>
            <returns>True if the type implements IEnumerable; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.IsCollection(System.Type)">
            <summary>
            Determines whether the specified type implements ICollection.
            </summary>
            <param name="_Type">The type to check.</param>
            <returns>True if the type implements ICollection; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Extension.TypeExtension.GetAllFieldsInHierarchy(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Extension method that gets all fields from a type and its base types, including private fields from parent classes.
            </summary>
            <param name="_Type">The type to get fields from</param>
            <param name="bindingFlags">Binding flags to apply (Instance/Static, Public/NonPublic)</param>
            <returns>Array containing all fields throughout the inheritance hierarchy</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MemberInfoHelper">
            <summary>
            Helper class for working with member information in reflection.
            Provides utility methods to extract and manipulate member names and other metadata.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MemberInfoHelper.GetMemberName(System.String)">
            <summary>
            Extracts the simple member name from a fully qualified member name.
            Handles methods with parameters, generic types, and removes any extraneous spaces.
            </summary>
            <param name="_FullName">The fully qualified member name (e.g., "Namespace.ClassName.MemberName").</param>
            <returns>The simple member name without namespace and class prefixes.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _FullName is null.</exception>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MethodInfoHelper">
            <summary>
            Helper class for working with method information and signatures.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MethodInfoHelper.RemoveMethodParameter(System.String)">
            <summary>
            Removes the parameter list from a method name if present.
            </summary>
            <param name="_Name">The method name, possibly with parameters (e.g., "MyMethod(int, string)").</param>
            <returns>The method name without parameters (e.g., "MyMethod").</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.MethodInfoHelper.TryGetMethodParameterStartIndex(System.String,System.Int32@)">
            <summary>
            Attempts to find the starting index of the parameter list in a method name.
            </summary>
            <param name="_Name">The method name to check for parameters.</param>
            <param name="_ParameterIndex">When this method returns, contains the index of the first character after the opening parenthesis if found; otherwise, -1.</param>
            <returns>True if the method name contains parameters (has an opening parenthesis); otherwise, false.</returns>
            <example>
            For "MyMethod(int, string)", returns true and sets _ParameterIndex to 9 (the position after the opening parenthesis).
            </example>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.TypeHelper">
            <summary>
            Helper class for working with Type information in reflection.
            Provides utility methods for manipulating type names and accessing type members.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.TypeHelper.RemoveMemberName(System.String)">
            <summary>
            Removes the member name and any parameters from a fully qualified member name.
            </summary>
            <param name="_Name">The fully qualified member name (e.g., "System.String MyNamespace.MyType.MyMethod(...)").</param>
            <returns>The type name without the member name (e.g., "System.String MyNamespace.MyType").</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.TypeHelper.TryGetMemberNameStartIndex(System.String,System.Int32@)">
            <summary>
            Attempts to find the starting index of a member name in a fully qualified name.
            </summary>
            <param name="_Name">The fully qualified name to check.</param>
            <param name="_MemberIndex">When this method returns, contains the index of the first character after the last dot if found; otherwise, -1.</param>
            <returns>True if the name contains a member (has a dot separator); otherwise, false.</returns>
            <example>
            For "System.String MyNamespace.MyType.MyMethod(...)", returns true and sets _MemberIndex to the position after the last dot.
            </example>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.DotNet.Member.Helper.TypeHelper.GetAllFieldsInHierarchy(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets all fields from a type and its base types, including private fields from parent classes.
            </summary>
            <param name="type">The type to get fields from</param>
            <param name="bindingFlags">Binding flags to apply (Instance/Static, Public/NonPublic)</param>
            <returns>Array containing all fields throughout the inheritance hierarchy</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.AssemblyInfo">
            <summary>
            Represents a loaded assembly and provides access to its metadata.
            Contains the Mono.Cecil AssemblyDefinition and provides methods to work with its types.
            Includes caching and sorting functionality for efficient type processing during obfuscation.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.AssemblyLoadInfo">
            <summary>
            Gets or sets the associated AssemblyLoadInfo.
            Contains configuration information about how to process the assembly during obfuscation.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.AssemblyDefinition">
            <summary>
            Gets or sets the Mono.Cecil AssemblyDefinition that represents the loaded assembly.
            This is the core object that provides access to all assembly metadata.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.SortTypes(System.Collections.Generic.IEnumerable{OPS.Mono.Cecil.TypeDefinition})">
            <summary>
            Sorts a list of TypeDefinitions in an order optimized for obfuscation processing.
            Ensures that nested types are processed before their containing types.
            </summary>
            <param name="_UnsortedList">The unsorted collection of TypeDefinitions.</param>
            <returns>A sorted list of TypeDefinitions where nested types appear before their containing types.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.RecursiveSortTypes(OPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{OPS.Mono.Cecil.TypeDefinition})">
            <summary>
            Recursively adds types to the sorted list, ensuring nested types are added before their containing types.
            Skips special types like &lt;Module&gt; and &lt;PrivateImplementationDetails&gt;.
            </summary>
            <param name="_CurrentType">The current type being processed.</param>
            <param name="_SortedList">The list to add the sorted types to.</param>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.cachedTypes">
            <summary>
            Cached collection of sorted types in this assembly.
            Used to avoid repeatedly retrieving and sorting types.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.ResortTypes">
            <summary>
            Retrieves all types from the assembly, sorts them, and updates the cache.
            Called when the type collection needs to be refreshed.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.GetAllTypeDefinitions">
            <summary>
            Gets all TypeDefinitions in this assembly in a sorted order optimized for obfuscation.
            Results are cached for performance after the first call.
            </summary>
            <returns>A sorted collection of all TypeDefinitions in the assembly.</returns>
            <exception cref="T:System.Exception">Thrown when there is an error retrieving the type definitions.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.HasTypeDefinition(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Determines whether this assembly contains the specified TypeDefinition.
            </summary>
            <param name="_TypeDefinition">The TypeDefinition to check for.</param>
            <returns>True if the assembly contains the specified type; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.HasTypeDefinition(System.String,System.String)">
            <summary>
            Determines whether this assembly contains a type with the specified namespace and name.
            </summary>
            <param name="_Namespace">The namespace of the type to check for.</param>
            <param name="_Name">The name of the type to check for.</param>
            <returns>True if the assembly contains a type with the specified namespace and name; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.AddTypeDefinition(OPS.Mono.Cecil.ModuleDefinition,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Adds a TypeDefinition to the specified ModuleDefinition and refreshes the type cache.
            </summary>
            <param name="_ModuleDefinition">The module to add the type to.</param>
            <param name="_TypeDefinition">The type to add to the module.</param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.Name">
            <summary>
            Gets the name of the assembly.
            This is the simple name without version, culture, or public key information.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.Equals(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Determines whether the specified AssemblyInfo is equal to the current AssemblyInfo.
            </summary>
            <param name="_Other">The AssemblyInfo to compare with the current AssemblyInfo.</param>
            <returns>true if the specified AssemblyInfo is equal to the current AssemblyInfo; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current AssemblyInfo.
            </summary>
            <param name="obj">The object to compare with the current AssemblyInfo.</param>
            <returns>true if the specified object is equal to the current AssemblyInfo; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.op_Equality(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Determines whether two AssemblyInfo instances are equal.
            </summary>
            <param name="a">The first AssemblyInfo to compare.</param>
            <param name="b">The second AssemblyInfo to compare.</param>
            <returns>true if the specified AssemblyInfo instances are equal; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.op_Inequality(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Determines whether two AssemblyInfo instances are not equal.
            </summary>
            <param name="a">The first AssemblyInfo to compare.</param>
            <param name="b">The second AssemblyInfo to compare.</param>
            <returns>true if the specified AssemblyInfo instances are not equal; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyInfo.GetHashCode">
            <summary>
            Returns the hash code for this AssemblyInfo.
            </summary>
            <returns>A hash code for the current AssemblyInfo.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo">
            <summary>
            Contains configuration information for loading and processing assemblies.
            Specifies how an assembly should be handled during the obfuscation process.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo"/> class with default settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.FilePath">
            <summary>
            Gets or sets the full file path to the assembly on disk.
            Used to locate and load the assembly for processing.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.IsUnityAssembly">
            <summary>
            Gets or sets a value indicating whether this is an assembly built by Unity.
            Unity-built assemblies don't require backup during the obfuscation process.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.IsThirdPartyAssembly">
            <summary>
            Gets a value indicating whether this is a third-party assembly imported into Unity.
            Third-party assemblies require backup during the obfuscation process.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.IsHelperAssembly">
            <summary>
            Gets or sets a value indicating whether this is a helper assembly.
            Helper assemblies are not obfuscated but are referenced and may be used by obfuscation components.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo.Obfuscate">
            <summary>
            Gets or sets a value indicating whether this assembly should be obfuscated.
            When true, the assembly will undergo the obfuscation process.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.AssemblyResolver">
            <summary>
            Custom assembly resolver for the obfuscator.
            Extends the Mono.Cecil DefaultAssemblyResolver to provide additional assembly resolution capabilities.
            Used to locate and load referenced assemblies during the obfuscation process.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.AssemblyResolver.RegisterAssembly(OPS.Mono.Cecil.AssemblyDefinition)">
            <summary>
            Registers an assembly with the resolver to make it available for resolution.
            This allows the resolver to find the assembly when it's referenced by other assemblies.
            </summary>
            <param name="_Assembly">The assembly to register with the resolver.</param>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper">
            <summary>
            Helper class for working with Mono.Cecil assemblies in the obfuscator.
            Provides functionality for loading, saving, and analyzing assemblies,
            as well as locating assemblies in the Unity project structure.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.FindAssemblyLocation(System.String)">
            <summary>
            Locates an assembly file in the Unity project structure.
            Checks if the provided path is a direct file path, then searches in common Unity build directories.
            </summary>
            <param name="_Assembly">The assembly name or path to locate.</param>
            <returns>The full file path to the assembly if found; otherwise, null.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetLocationInTempStagingArea(System.String,System.String@)">
            <summary>
            Attempts to locate an assembly file in the Unity Temp/StagingArea/Data/Managed directory.
            </summary>
            <param name="_Assembly">The assembly name to locate.</param>
            <param name="_AssemblyLocation">When this method returns, contains the full path to the assembly if found; otherwise, null.</param>
            <returns>True if the assembly was found in the staging area; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetLocationInBeeStagingArea(System.String,System.String@)">
            <summary>
            Attempts to locate an assembly file in the Unity Library/Bee/PlayerScriptAssemblies directory.
            </summary>
            <param name="_Assembly">The assembly name to locate.</param>
            <param name="_AssemblyLocation">When this method returns, contains the full path to the assembly if found; otherwise, null.</param>
            <returns>True if the assembly was found in the Bee staging area; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetReaderParameters(System.String)">
            <summary>
            Creates appropriate ReaderParameters for loading an assembly.
            Detects and configures symbol reading based on the presence of MDB or PDB files.
            </summary>
            <param name="_AssemblyFilePath">The file path of the assembly to create parameters for.</param>
            <returns>A ReaderParameters object configured for the specified assembly.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetWriterParameters(System.String)">
            <summary>
            Creates appropriate WriterParameters for saving an assembly.
            Detects and configures symbol writing based on the presence of MDB or PDB files.
            </summary>
            <param name="_AssemblyFilePath">The file path of the assembly to create parameters for.</param>
            <returns>A WriterParameters object configured for the specified assembly.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.LoadAssembly(System.String,OPS.Obfuscator.Editor.Assembly.AssemblyResolver,UnityEditor.BuildTarget)">
            <summary>
            Loads an assembly from disk into a Mono.Cecil AssemblyDefinition object.
            Configures appropriate reader parameters and registers the loaded assembly with the resolver.
            </summary>
            <param name="_AssemblyFilePath">The file path of the assembly to load.</param>
            <param name="_AssemblyResolver">The resolver to use for resolving assembly references.</param>
            <param name="_BuildTarget">The Unity build target, which may affect how the assembly is loaded.</param>
            <returns>The loaded AssemblyDefinition.</returns>
            <exception cref="T:System.Exception">Thrown when the assembly cannot be found or loaded.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.SaveAssembly(OPS.Mono.Cecil.AssemblyDefinition,System.String)">
            <summary>
            Saves an AssemblyDefinition to disk.
            Attempts to save with appropriate symbol writer parameters, falling back to basic parameters if that fails.
            </summary>
            <param name="_AssemblyDefinition">The AssemblyDefinition to save.</param>
            <param name="_AssemblyFilePath">The file path where the assembly should be saved.</param>
            <returns>True if the assembly was saved successfully; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.RemoveAssemblyFromBuild(System.String)">
            <summary>
            Removes an assembly from the Unity build by deleting it from the staging area.
            This method can only be called after the assembly has been built and placed in the staging area.
            </summary>
            <param name="_Assembly">The name of the assembly to remove.</param>
            <returns>True if the assembly was found and removed; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetAllTypes(OPS.Mono.Cecil.AssemblyDefinition)">
            <summary>
            Retrieves all types from an assembly, including nested types.
            Types are collected from all modules in the assembly.
            </summary>
            <param name="_AssemblyDefinition">The assembly to retrieve types from.</param>
            <returns>A list of all types in the assembly, including nested types.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetAllNestedTypes(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Recursively retrieves all nested types from a type definition.
            Nested types of nested types are also included in the result.
            </summary>
            <param name="_TypeDefinition">The type to retrieve nested types from.</param>
            <returns>A list of all nested types, including nested types of nested types.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllTypes(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,System.Boolean)">
            <summary>
            Counts the total number of types in an assembly.
            </summary>
            <param name="_AssemblyInfo">The assembly to count types in.</param>
            <param name="_Nested">When true, includes nested types in the count; otherwise, excludes them.</param>
            <returns>The total number of types in the assembly.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllTypes(System.Collections.Generic.IEnumerable{OPS.Obfuscator.Editor.Assembly.AssemblyInfo},System.Boolean)">
            <summary>
            Returns the count of all types. Include _Nested in count via true/false.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <param name="_Nested"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllMethods(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns the count of all methods in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllMethods(System.Collections.Generic.IEnumerable{OPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Returns the count of all methods in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllFields(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns the count of all fields in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllFields(System.Collections.Generic.IEnumerable{OPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Returns the count of all fields in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllProperties(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns the count of all properties in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllProperties(System.Collections.Generic.IEnumerable{OPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Returns the count of all properties in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllEvents(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns the count of all events in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Helper.AssemblyHelper.GetCountOfAllEvents(System.Collections.Generic.IEnumerable{OPS.Obfuscator.Editor.Assembly.AssemblyInfo})">
            <summary>
            Returns the count of all events in all types including nested ones.
            </summary>
            <param name="_AssemblyInfo_Enumerable"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel">
            <summary>
            Represents the different accessibility levels for members in .NET.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Public">
            <summary>
            Access is not restricted.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Protected">
            <summary>
            Access is limited to the containing class or types derived from the containing class.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Protected_And_Internal">
            <summary>
            Access is limited to the current assembly and types derived from the containing class.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Protected_Or_Private">
            <summary>
            Access is limited to the containing class, types derived from the containing class, or classes within the same body.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Internal">
            <summary>
            Access is limited to the current assembly.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Accessibility.EAccessibilityLevel.Private">
            <summary>
            Access is limited to the containing type.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper">
            <summary>
            Helper for accessibility.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Type(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
             Returns the EAccessibilityLevel of a member.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Method(OPS.Mono.Cecil.MethodDefinition)">
            <summary>
             Returns the EAccessibilityLevel of a member.
            </summary>
            <param name="_MethodDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Field(OPS.Mono.Cecil.FieldDefinition)">
            <summary>
             Returns the EAccessibilityLevel of a member.
            </summary>
            <param name="_FieldDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Property(OPS.Mono.Cecil.PropertyDefinition)">
            <summary>
             Returns the EAccessibilityLevel of a member.
            </summary>
            <param name="_PropertyDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.AccessibilityHelper.AccessibilityLevel_Event(OPS.Mono.Cecil.EventDefinition)">
            <summary>
            Returns the EAccessibilityLevel of a member.
            </summary>
            <param name="_EventDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.FieldReferenceHelper">
            <summary>
            Helper for mono cecil field references.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.FieldReferenceHelper.MakeFieldDeclaringTypeGeneric(OPS.Mono.Cecil.FieldReference,OPS.Mono.Cecil.TypeReference[])">
            <summary>
            Make _FieldReference generic with _GenericArguments.
            </summary>
            <param name="_FieldReference"></param>
            <param name="_GenericArguments"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper">
            <summary>
            Helper for IMemberDefinition.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.GetMemberName(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Returns the name of a member inside a _FullName.
            Does not remove generic parameter.
            </summary>
            <param name="_MemberType"></param>
            <param name="_FullName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.GetExtendedFullName(OPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Returns the extended full name of a IMemberDefinition.
            Looks like: '[AssemblyName] FullName'.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.GetExtendedOriginalFullName(OPS.Mono.Cecil.IMemberDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache)">
            <summary>
            Returns the extended original full name of a IMemberDefinition.
            Looks like: '[AssemblyName] Original FullName'.
            </summary>
            <param name="_MemberDefinition"></param>
            <param name="_BelongingCache"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.TryGetGenericParameter(System.String,System.Int32@)">
            <summary>
            Returns true, if has any generic parameters.
            If has so, _GenericParameterCount will contain the count of them.
            </summary>
            <param name="_FullName"></param>
            <param name="_GenericParameterCount"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.RemoveGenericParameter(System.String)">
            <summary>
            Simplifies _Name (Member Name). Simplifies means, if _Name has a generic parameter (`2) it will be removed.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.GetReturnType(System.String)">
            <summary>
            Get the full return type of a name or fullname. If there is none, returns null.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.IMemberDefinitionHelper.RemoveReturnType(System.String)">
            <summary>
            Remove the return type from _Name. Either it is a name or fullname.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.InstructionHelper">
            <summary>
            Helper for IL Instructions.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.InstructionHelper.CalculateStackUsage(OPS.Mono.Cecil.Cil.Instruction,System.Int32@,System.Int32@)">
            <summary>
            Calculates the stack usage.
            </summary>
            <param name="_Instruction">Instruction to calculate</param>
            <param name="pushes">Updated with number of stack pushes</param>
            <param name="pops">Updated with number of stack pops or <c>-1</c> if the stack should be cleared.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.InstructionHelper.CalculateStackUsage(OPS.Mono.Cecil.Cil.Instruction,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Calculates the stack usage.
            </summary>
            <param name="_Instruction">Instruction to calculate</param>
            <param name="methodHasReturnValue"><c>true</c> if method has a return value</param>
            <param name="pushes">Updated with number of stack pushes</param>
            <param name="pops">Updated with number of stack pops or <c>-1</c> if the stack should be cleared.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.InstructionHelper.CalculateStackUsageCall(OPS.Mono.Cecil.Cil.Instruction,OPS.Mono.Cecil.Cil.Code,System.Int32@,System.Int32@)">
            <summary>
            Calculates the stack usage for a method call.
            </summary>
            <param name="_Instruction">Instruction to calculate</param>
            <param name="code">The instruction code.</param>
            <param name="pushes">Updated with number of stack pushes</param>
            <param name="pops">Updated with number of stack pops or <c>-1</c> if the stack should be cleared.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.InstructionHelper.CalculateStackUsageNonCall(OPS.Mono.Cecil.Cil.Instruction,OPS.Mono.Cecil.Cil.OpCode,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Calculates the stack usage for a not method call.
            </summary>
            <param name="_Instruction">Instruction to calculate</param>
            <param name="opCode">The instruction code.</param>
            <param name="hasReturnValue"><c>true</c> if method has a return value</param>
            <param name="pushes">Updated with number of stack pushes</param>
            <param name="pops">Updated with number of stack pops or <c>-1</c> if the stack should be cleared.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MemberReferenceHelper.GetExtendedFullName(OPS.Mono.Cecil.MemberReference)">
            <summary>
            Returns the extended full name of a MemberReference.
            Looks like: '[AssemblyName] FullName'.
            </summary>
            <param name="_MemberReference"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MemberReferenceHelper.TryToResolve``1(OPS.Mono.Cecil.MemberReference,``0@)">
            <summary>
            Tries to resolve _MemberReference. If could not be resolves, returns false.
            </summary>
            <typeparam name="TMemberDefinition"></typeparam>
            <param name="_MemberReference"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodDefinitionHelper">
            <summary>
            Helper for methods.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodDefinitionHelper.RemoveMethodParameter(System.String)">
            <summary>
            Removes the method parameter, if has one.
            Example: MyMethod(...), returns MyMethod.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodDefinitionHelper.TryGetMethodParameterStartIndex(System.String,System.Int32@)">
            <summary>
            Returns true if _Name contains parameter.
            _ParameterIndex represents the index in _Name, where the parameter after "(" starts.
            Example: MyMethod(...), returns true and _ParameterIndex as 9.
            </summary>
            <param name="_Name"></param>
            <param name="_ParameterIndex"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodReferenceHelper">
            <summary>
            Helper for mono cecil method references.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodReferenceHelper.MakeMethodGeneric(OPS.Mono.Cecil.MethodReference,OPS.Mono.Cecil.TypeReference[])">
            <summary>
            Make _MethodReference generic with _GenericArguments.
            </summary>
            <param name="_MethodReference"></param>
            <param name="_GenericArguments"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.MethodReferenceHelper.MakeMethodDeclaringTypeGeneric(OPS.Mono.Cecil.MethodReference,OPS.Mono.Cecil.TypeReference[])">
            <summary>
            The _MethodReference DeclaringType has generic parameter.
            The MethodReference itself has no custom generic parameter, but is in a generic type. So make TypeReference generic.
            </summary>
            <param name="_MethodReference"></param>
            <param name="_GenericArguments"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper">
            <summary>
            Helper for types.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.SplitFullName(System.String,System.String@,System.String@)">
            <summary>
            Outputs the _Namespace and _Name by _Fullname.
            If _Fullname is a nested type, namespace is empty.
            </summary>
            <param name="_FullName"></param>
            <param name="_Namespace"></param>
            <param name="_Name"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsNested(System.String)">
            <summary>
            Returns true if the _FullName is nested (Containing a '/').
            </summary>
            <param name="_FullName"></param>
            <returns></returns>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.System_Attribute_TypeKey">
            <summary>
            TypeKey of System.Attribute
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeAnAttribute(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The Type is a System.Attribute.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeGeneric(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The Type is a generic type.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.TypeNameWithoutGenericSuffix(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns a types name without the generic ` suffix.
            For example: MyType`2 => MyType
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.TypeNameWithoutGenericSuffix(System.String)">
            <summary>
            Returns a types name without the generic ` suffix.
            For example: MyType`2 => MyType
            </summary>
            <param name="_TypeName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeAbstract(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The Type is an abstract type.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeStatic(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The Type is a static type.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeStruct(OPS.Mono.Cecil.TypeReference)">
            <summary>
            Determine if the given type is a struct (also known as "value type") and not a struct-alike (f.e. primitive).
            </summary>
            <param name="_TypeReference">The type to check.</param>
            <returns>True if the type is a struct, and not primitive or similar.</returns>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.System_Object_TypeKey">
            <summary>
            TypeKey of System.Object
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeSerializable(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The _TypeDefinition IsSerializable or has System.SerializableAttribute.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsTypeOrBaseSerializable(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: The _TypeDefinition or any base IsSerializable or has System.SerializableAttribute.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.TypeHasSerializableAttribute(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: _TypeDefinition has System.SerializableAttribute.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.InheritsFrom(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey)">
            <summary>
            Returns if the type _Type inherits from type with original _TypeKey.
            </summary>
            <param name="_Type"></param>
            <param name="_TypeCache"></param>
            <param name="_TypeKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.InheritsFrom(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache,System.String)">
            <summary>
            Returns if the type _Type inherits from type with original fullname _FullName.
            </summary>
            <param name="_Type"></param>
            <param name="_TypeCache"></param>
            <param name="_FullName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.IsDelegate(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns if the type _Type is a delegate.
            </summary>
            <remarks>
            The code checks if a TypeDefinition is a delegate by examining its base type. In .NET, all delegates inherit 
            from either System.MulticastDelegate or System.Delegate (though in practice, most inherit from MulticastDelegate).
            </remarks>
            <param name="_Type">The type to check.</param>
            <returns>True if the type is a delegate; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.HasEmptyConstructor(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns if the _TypeDefinition has an empty constructor.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetEmptyConstructor(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Find the default constructor of a TypeDefinition.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.AddEmptyConstructor(OPS.Mono.Cecil.ModuleDefinition,OPS.Mono.Cecil.TypeDefinition,OPS.Mono.Cecil.MethodReference)">
            <summary>
            Add an empty constructor to _TypeDefinition which exists / or will be added in / to _ModuleDefinition.
            </summary>
            <param name="_ModuleDefinition"></param>
            <param name="_TypeDefinition"></param>
            <param name="_BaseEmptyConstructor"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetAllConstructor(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns all constructor, but the static constructor.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetStaticConstructor(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns the staticc constructor.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.AddEmptyStaticConstructor(OPS.Mono.Cecil.ModuleDefinition,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Create an empty static constructor for _TypeDefinition.
            </summary>
            <param name="_ModuleDefinition"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindMember``1(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache,System.String)">
            <summary>
             Returns a list of all members of type TMemberDefinition in _TypeDefinition, sharing the name _OriginalName searching base types.
            </summary>
            <typeparam name="TMemberDefinition"></typeparam>
            <param name="_TypeDefinition"></param>
            <param name="_Cache"></param>
            <param name="_OriginalName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindMember``1(OPS.Mono.Collections.Generic.Collection{``0},OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache,System.String)">
            <summary>
            Returns a list of all members of type TMemberDefinition sharing the name _OriginalName.
            </summary>
            <typeparam name="TMemberDefinition"></typeparam>
            <param name="_MemberCollection"></param>
            <param name="_Cache"></param>
            <param name="_OriginalName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetMembers``1(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns the required members in _TypeDefinition.
            TMemberDefinition as TypeDefinition will return all nested types.
            TMemberDefinition as MethodDefinition will return all methods.
            TMemberDefinition as FieldDefinition will return all fields.
            TMemberDefinition as PropertyDefinition will return all properties.
            TMemberDefinition as EventDefinition will return all events.
            Else will return null!
            </summary>
            <typeparam name="TMemberDefinition"></typeparam>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.RemoveMemberName(System.String)">
            <summary>
            Removes the member name and following parameters (if there are some, else returns _Name).
            Example: System.String MyNamespace.MyType::MyMethod(...), returns System.String MyNamespace.MyType.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.TryGetMemberNameStartIndex(System.String,System.Int32@)">
            <summary>
            Returns true if _Name contains a member (method/field/property/event).
            _MemberIndex represents the index in _Name, where the member name after "::" starts.
            Example: System.String MyNamespace.MyType::MyMethod(...), returns true and _MemberIndex as 34.
            </summary>
            <param name="_Name"></param>
            <param name="_MemberIndex"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindField(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache,System.String)">
            <summary>
            Returns the FieldDefinition with the original name _OriginalFieldName.
            </summary>
            <param name="_TypeDefinition"></param>
            <param name="_FieldCache"></param>
            <param name="_OriginalFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindField(OPS.Mono.Collections.Generic.Collection{OPS.Mono.Cecil.FieldDefinition},OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache,System.String)">
            <summary>
            Returns the FieldDefinition with the original name _OriginalFieldName.
            </summary>
            <param name="_Fields"></param>
            <param name="_FieldCache"></param>
            <param name="_OriginalFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetFieldBelongingToProperty(OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache,OPS.Mono.Cecil.PropertyDefinition)">
            <summary>
            Returns the FieldDefinition to _PropertyDefinition if there is some.
            Else returns null.
            </summary>
            <param name="_FieldCache"></param>
            <param name="_PropertyDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetFieldBelongingToEvent(OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache,OPS.Mono.Cecil.EventDefinition)">
            <summary>
            Returns the FieldDefinition to _EventDefinition if there is some.
            Else returns null.
            </summary>
            <param name="_FieldCache"></param>
            <param name="_EventDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindProperty(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache,System.String)">
            <summary>
            Returns the PropertyDefinition with the original name _OriginalPropertyName.
            </summary>
            <param name="_TypeDefinition"></param>
            <param name="_PropertyCache"></param>
            <param name="_OriginalPropertyName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.FindProperty(OPS.Mono.Collections.Generic.Collection{OPS.Mono.Cecil.PropertyDefinition},OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache,System.String)">
            <summary>
            Returns the PropertyDefinition with the original name _OriginalPropertyName.
            </summary>
            <param name="_Properties"></param>
            <param name="_PropertyCache"></param>
            <param name="_OriginalPropertyName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeDefinitionHelper.GetPropertyBelongingToField(OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache,OPS.Mono.Cecil.FieldDefinition)">
            <summary>
            Returns the PropertyDefinition belonging to _FieldDefinition if _FieldDefinition is created through a Property.
            If there is none returns null.
            </summary>
            <param name="_PropertyCache"></param>
            <param name="_FieldDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeReferenceHelper">
            <summary>
            Helper for type references.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeReferenceHelper.GetScopeName(OPS.Mono.Cecil.TypeReference)">
            <summary>
            Returns the Assembly name of _TypeReference.
            If the scope is null, returns null.
            </summary>
            <param name="_TypeReference"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeReferenceHelper.ParseScopeName(OPS.Mono.Cecil.IMetadataScope)">
            <summary>
            Returns the name of the assembly of an metadataScope.
            </summary>
            <param name="metadataScope"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Helper.TypeReferenceHelper.MakeTypeGeneric(OPS.Mono.Cecil.TypeReference,OPS.Mono.Cecil.TypeReference[])">
            <summary>
            Make _TypeReference generic with _Arguments.
            </summary>
            <param name="_TypeReference"></param>
            <param name="_Arguments"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper">
            <summary>
            Helper for CustomAttribute and ICustomAttributeProvider.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.HasCustomAttribute(OPS.Mono.Cecil.ICustomAttributeProvider,System.String)">
            <summary>
            True: The _Attributes collection contains a attribute with _AttributeName or (_AttributeName + "Attribute")
            </summary>
            <param name="_AttributeProvider">The attribute provider.</param>
            <param name="_AttributeName">The attribute name.</param>
            <returns>True if the _Attributes collection contains a attribute with _AttributeName or (_AttributeName + "Attribute"), otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.HasCustomAttributeOrParent(OPS.Mono.Cecil.IMemberDefinition,System.String)">
            <summary>
            True: The _MemberDefinition or its parent contains a attribute with _AttributeName or (_AttributeName + "Attribute")
            </summary>
            <param name="_MemberDefinition">The member definition.</param>
            <param name="_AttributeName">The attribute name.</param>
            <returns>True if the _MemberDefinition or its parent contains a attribute with _AttributeName or (_AttributeName + "Attribute"), otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.TryGetCustomAttribute(OPS.Mono.Cecil.ICustomAttributeProvider,System.String,OPS.Mono.Cecil.CustomAttribute@)">
            <summary>
            If there is a CustomAttribute with _AttributeName in _AttributeProvider,
            returns true and the _CustomAttribute.
            </summary>
            <param name="_AttributeProvider"></param>
            <param name="_AttributeName"></param>
            <param name="_CustomAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.RemoveCustomAttributes(OPS.Mono.Cecil.ICustomAttributeProvider,System.String)">
            <summary>
            Remove all custom attributes in _AttributeProvider with _AttributeFullName.
            </summary>
            <param name="_AttributeProvider"></param>
            <param name="_AttributeFullName"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Get_ResolveAble_CustomAttributes(OPS.Mono.Cecil.ICustomAttributeProvider)">
            <summary>
            Get resolveable CustomAttributes.
            </summary>
            <param name="_CustomAttributeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Iterate_CustomAttributeArguments(OPS.Mono.Cecil.ICustomAttributeProvider)">
            <summary>
            Iterate all resolve able arguments in all custom attributes, includes children.
            </summary>
            <param name="_CustomAttributeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Iterate_CustomAttributeArguments(System.Collections.Generic.IEnumerable{OPS.Mono.Cecil.CustomAttributeArgument})">
            <summary>
            Iterate all custom attribute arguments, includes children.
            </summary>
            <param name="_CustomAttributeArgumentEnumerable"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Iterate_CustomAttributeNamedArguments(OPS.Mono.Cecil.ICustomAttributeProvider,System.Boolean)">
            <summary>
            Iterate all CustomAttributeNamedArgument ( either field or property ) in _CustomAttributeProvider.
            </summary>
            <param name="_CustomAttributeProvider"></param>
            <param name="_Field"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.Iterate_CustomAttributeNamedArguments(System.Collections.Generic.IEnumerable{OPS.Mono.Cecil.CustomAttributeNamedArgument})">
            <summary>
            Iterate all CustomAttributeNamedArgument in _CustomAttributeNamedArgumentEnumerable.
            </summary>
            <param name="_CustomAttributeNamedArgumentEnumerable"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Attribute.Helper.AttributeHelper.TryGetAttributeValueByName``1(OPS.Mono.Cecil.CustomAttribute,System.String,``0@)">
            <summary>
            Tries to get a properties or fields value as TObject by its _Name.
            </summary>
            <typeparam name="TObject"></typeparam>
            <param name="_CustomAttribute"></param>
            <param name="_Name"></param>
            <param name="_Object"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2">
            <summary>
            Contains all members in the project and its belonging group.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.#ctor(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Set up the AMemberCache using the assemblies from _Step.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.Step">
            <summary>
            The used Step.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.memberToKeyDictionary">
            <summary>
            TMemberDefinition, TMemberKey.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.keyToMemberDictionary">
            <summary>
            TMemberKey, TMemberDefinition.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.GetOriginalMemberKeyByMemberDefinition(`0)">
            <summary>
            Returns the original key for _MemberDefinition.
            If there is non, returns null!
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.GetMemberDefinitionByOriginalMemberKey(`1)">
            <summary>
            Returns the TMemberDefinition by its original key.
            If there is non, returns null!
            </summary>
            <param name="_OriginalMemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.AddTo_MemberKey_And_MemberDefinition_Cache(`0)">
            <summary>
            Add _MemberDefinition to the key to member dictionaries.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.On_AddTo_MemberKey_And_MemberDefinition_Cache(`0)">
            <summary>
            Override for custom action on add to member key and member cache.
            Return false if something went wrong!
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.Add_MemberDefinition(`0)">
            <summary>
            Add the _MemberDefinition only to the member cache.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.On_Add_MemberDefinition(`0)">
            <summary>
            Override for custom action on add to member.
            Return false if something went wrong!
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberCache`2.ToString">
            <summary>
            Returns a string representation of the member cache, listing all member definitions and their keys.
            </summary>
            <returns>A string containing all member definitions and their corresponding keys.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2">
            <summary>
            Contains all members in the project and its belonging group.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.#ctor(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Set up the AMemberGroupCache using the assemblies from _Step.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.memberGroups">
            <summary>
            TMemberDefinition, its belonging Group.
            Each virtual TMemberDefinition is added here!
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.types_Virtual_Member_Cache_Dictionary">
            <summary>
            Maps a type to all its virtual TMemberDefinition and in its bases and interfaces.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.IsVirtual(`0)">
            <summary>
            Returns if the _MemberDefinition is virtual.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.MembersMatch(`0,`0)">
            <summary>
            True: Member _Left and _Right match.
            </summary>
            <param name="_Left"></param>
            <param name="_Right"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.GetVirtualMembers(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns all virtual TMember of _TypeDefinition and its bases and interfaces.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.AddToMemberGroup(`0)">
            <summary>
            Adds the _MemberDefinition to an already existing group or to a new one.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.AddToMemberGroup(OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup,`0)">
            <summary>
            Adds _MemberDefinition to _Group and returns it.
            If _MemberDefinition is already in a group, merge this one and _Group.
            </summary>
            <param name="_MemberGroup"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.UpdateMemberGroup(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Update all groups of all virtual members in _TypeDefinition.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.GetMemberGroup(`0)">
            <summary>
            Returns the MemberGroup of _MemberDefinition, if it has one.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.AMemberGroupCache`2.On_Add_MemberDefinition(`0)">
            <summary>
            Override for custom action when adding a member definition.
            For virtual members, this adds them to appropriate member groups.
            </summary>
            <param name="_MemberDefinition">The member definition to add.</param>
            <returns>True if the member was successfully added; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.EventCache.#ctor(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Set up the EventCache using the assemblies from _Step.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.FieldCache.#ctor(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Set up the FieldCache using the assemblies from _Step.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache">
            <summary>
            Interface for a MemberCache.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache.GetOriginalMemberKeyByMemberDefinition(OPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Returns the Key of _MemberDefinition.
            If _MemberDefinition is not part of the cache, returns null.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache.GetMemberDefinitionByOriginalMemberKey(OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Returns the member by its _OriginalMemberKey.
            If there is no member with _OriginalMemberKey, returns null.
            </summary>
            <param name="_OriginalMemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache.Add_MemberDefinition(OPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Add a member only to the cache.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache`2">
            <summary>
            Cache of all members of TMemberDefinition with TMemberKey.
            </summary>
            <typeparam name="TMemberDefinition"></typeparam>
            <typeparam name="TMemberKey"></typeparam>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache`2.GetOriginalMemberKeyByMemberDefinition(`0)">
            <summary>
            Returns the Key of _MemberDefinition.
            If _MemberDefinition is not part of the cache, returns null.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache`2.GetMemberDefinitionByOriginalMemberKey(`1)">
            <summary>
            Returns the member by its _OriginalMemberKey.
            If there is no member with _OriginalMemberKey, returns null.
            </summary>
            <param name="_OriginalMemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache`2.Add_MemberDefinition(`0)">
            <summary>
            Add a member only to the cache.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup">
            <summary>
            Group of Members inside a MemberCache. The Members are related to each other through inheritance/override and sharing the same name.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.GroupName">
            <summary>
            The name for the group.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.GroupMemberDefinitionList">
            <summary>
            All MemberDefinitions in the group.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.GroupRootMemberDefinitionHashSet">
            <summary>
            All root MemberDefinitions in this group. These are either interfaces (and the types implemented the interface) and/or types that root those members.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.AddToGroup(OPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Add _MemberDefinition to the group.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberGroup.SomeGroupMemberDefinitionIsInExternalAssembly">
            <summary>
            Returns if some of the members is in an external (not obfuscated) assembly.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.GroupName">
            <summary>
            The obfuscated name of the group.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.GroupMemberDefinitionList">
            <summary>
            All members in the group.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.GroupRootMemberDefinitionHashSet">
            <summary>
            All root members in this groups. Those are interfaces and types declaring those member.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.AddToGroup(OPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Add _MemberDefinition to group.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MemberGroup.SomeGroupMemberDefinitionIsInExternalAssembly">
            <summary>
            Returns if some of the members is in an external (not obfuscated) assembly.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MethodCache">
            <summary>
            Contains all methods in the project and its belonging group.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MethodCache.#ctor(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Set up the MethodCache using the assemblies from _Step.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MethodCache.IsVirtual(OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Returns if the method is virtual.
            </summary>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.MethodCache.MembersMatch(OPS.Mono.Cecil.MethodDefinition,OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Returns if the _Left and _Right member match.
            </summary>
            <param name="_Left"></param>
            <param name="_Right"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.PropertyCache.#ctor(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Set up the PropertyCache using the assemblies from _Step.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache">
            <summary>
            A cache of all types in the obfuscated assemblies.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.#ctor(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Set up the TypeCache using the assemblies being obfuscated from _Step. Only builds the cache for the types and its base types in the obfuscated assemblies.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.fullNameToTypeKeyListDictionary">
            <summary>
            Maps the original full name of a type ([Namespace].[TypeName]) to a list of type keys that share the same full name but could be in different assemblies.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.On_AddTo_MemberKey_And_MemberDefinition_Cache(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Build up the cache for the type and its base types and interfaces.
            </summary>
            <param name="_TypeDefinition">The type to add and build up the cache for.</param>
            <returns>True if the type got added to the cache; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.AddTypeToNameLookUp(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Add the _TypeDefinition to the FullName to TypeKey List look up dictionary.
            </summary>
            <param name="_TypeDefinition">The type to add.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.BuildBaseHierarchy(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Build up the base type hierarchy for the type.
            </summary>
            <param name="_TypeDefinition">The type to build up the hierarchy for.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.BuildInterfaceHierarchy(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Build up the interfaces for the type.
            </summary>
            <param name="_TypeDefinition">The type to build up the interfaces for.</param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.BaseTypeDictionary">
            <summary>
            Extendend Type Full Name, Extendend Base Type Full Name..
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.InterfacesDictionary">
            <summary>
            Extendend Type Full Name, Extendend Interface Full Name List.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.HasInterface(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey)">
            <summary>
            Search if the _TypeDefinition implements the _Interface.
            </summary>
            <param name="_TypeDefinition">The type to search for the interface.</param>
            <param name="_Interface">The interface to search for.</param>
            <returns>True if the type implements the interface; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.HasInterface(OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,System.Collections.Generic.HashSet{OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey})">
            <summary>
            Search if the _Type implements the _Interface.
            </summary>
            <param name="_Type">The type to search for the interface.</param>
            <param name="_Interface">The interface to search for.</param>
            <param name="_AlreadySearchedTypes">A hash set of already searched types to prevent cyclic dependencies.</param>
            <returns>True if the type implements the interface; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.InheritesFrom(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,System.Boolean)">
            <summary>
            Check here if a _TypeDefinition inherits from _FromType (Base type or interfaces). The assembly, namespace and type name will be compared.
            </summary>
            <param name="_TypeDefinition">The type to check if it inherits from _FromType.</param>
            <param name="_FromType">The type to check if it is inherited from.</param>
            <param name="_CheckInterfaces">True if the interfaces should be checked; otherwise false.</param>
            <returns>True if the type inherits from the _FromType; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache.InheritesFrom(OPS.Mono.Cecil.TypeDefinition,System.String,System.Boolean)">
            <summary>
            Check here if a _TypeDefinition inherits from type with original _FullName. Only the namespace and type name will be compared.
            </summary>
            <param name="_TypeDefinition">The type to check if it inherits from _FullName.</param>
            <param name="_FullName">The full name of the type to check if it is inherited from.</param>
            <param name="_CheckInterfaces">True if the interfaces should be checked; otherwise false.</param>
            <returns>Ttrue if the type inherits from the _FullName; otherwise false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper">
            <summary>
            Helper class for cloning member.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCreateEmptySubType(OPS.Mono.Cecil.TypeDefinition,System.String,System.String,OPS.Mono.Cecil.TypeDefinition@)">
            <summary>
            Tries to create a sub type for _SourceType with a namespace _SubTypeNamespace and type name _SubTypeName.
            The created _SubType will be added an empty constructor.
            </summary>
            <param name="_BaseType"></param>
            <param name="_SubTypeNamespace"></param>
            <param name="_SubTypeName"></param>
            <param name="_SubType"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.MakeTypeGeneric(OPS.Mono.Cecil.TypeReference,OPS.Mono.Cecil.TypeReference[])">
            <summary>
            Makes a type reference a generic reference.
            </summary>
            <param name="_Self"></param>
            <param name="_GenericArguments"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCloneType(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.TypeDefinition,System.String,System.String,OPS.Mono.Cecil.TypeDefinition@)">
            <summary>
            Tries to clone a type. It will NOT be added to some assembly!
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_TargetNamespace"></param>
            <param name="_TargetName"></param>
            <param name="_Target"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCloneField(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.FieldDefinition,System.String,OPS.Mono.Cecil.FieldDefinition@)">
            <summary>
            Tries to clone a field. It will NOT be added to some type!
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_TargetName"></param>
            <param name="_Target"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.TryToCloneMethod(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.MethodDefinition,System.String,OPS.Mono.Cecil.MethodDefinition@)">
            <summary>
            Tries to clone a method. It will NOT be added to some type!
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_TargetName"></param>
            <param name="_Target"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodGenericParameter(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.MethodDefinition,OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Clones the GenericParameters from _Source to _Target.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_Target"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodVariables(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.MethodDefinition,OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Clones the variables from _Source to _Target.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_Target"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodParameters(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.MethodDefinition,OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Clone the method paramter from _Source to _Target.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_Target"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodInstructions(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.MethodDefinition,OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Clones all the Instruction from _Source to _Target.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Source"></param>
            <param name="_Target"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodInstruction(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.Cil.Instruction)">
            <summary>
            Clones the _Instruction in _TargetAssemblyDefinition context.
            </summary>
            <param name="_TargetAssemblyDefinition"></param>
            <param name="_Instruction"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneMethodExceptionHandler(OPS.Mono.Cecil.MethodDefinition,OPS.Mono.Cecil.MethodDefinition,OPS.Mono.Cecil.Cil.ExceptionHandler)">
            <summary>
            Clones and returns a _SourceExceptionHandler.
            </summary>
            <param name="_Source"></param>
            <param name="_Target"></param>
            <param name="_SourceExceptionHandler"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneParameterDefinition(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.ParameterDefinition)">
            <summary>
            Clone the given parameter definition.
            </summary>
            <param name="_TargetAssemblyDefinition">Target assembly.</param>
            <param name="_ParameterDefinition">The original parameter definition.</param>
            <returns>A clone of the original parameter definition.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneCustomAttribute(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.CustomAttribute)">
            <summary>
            Clone the given custom attribute.
            </summary>
            <param name="_TargetAssemblyDefinition">Target assembly</param>
            <param name="_CustomAttribute">The original custom attribute.</param>
            <returns>A clone of the original custom attribute.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Clone.CloneHelper.CloneGenericParameter(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.IGenericParameterProvider,OPS.Mono.Cecil.GenericParameter)">
            <summary>
            Clone the given generic parameter.
            </summary>
            <param name="_TargetAssemblyDefinition">Target assembly.</param>
            <param name="_Target">Target parameter owner.</param>
            <param name="_GenericParameter">The original generic parameter.</param>
            <returns>A clone of the original generic parameter.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.IMemberDefinitionExtension">
            <summary>
            Extension class for IMemberDefinition.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension">
            <summary>
            Extension class for IMemberDefinition.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension.TryToResolve(OPS.Mono.Cecil.MemberReference,OPS.Mono.Cecil.IMemberDefinition@)">
            <summary>
            Tries to resolve _MemberReference. If failed, returns false.
            </summary>
            <param name="_MemberReference"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension.TryToResolve``1(OPS.Mono.Cecil.MemberReference,``0@)">
            <summary>
            Tries to resolve _MemberReference. If failed, returns false.
            </summary>
            <param name="_MemberReference"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension.GetExtendedFullName(OPS.Mono.Cecil.MemberReference)">
            <summary>
            Returns the extended full name of a MemberReference.
            Looks like: '[AssemblyName] FullName'.
            </summary>
            <param name="_MemberReference"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Extension.MemberReferenceExtension.GetExtendedOriginalFullName(OPS.Mono.Cecil.MemberReference,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.IMemberCache)">
            <summary>
            Returns the extended original full name of a MemberReference.
            Looks like: '[AssemblyName] Original FullName'.
            </summary>
            <param name="_MemberReference"></param>
            <param name="_BelongingCache"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey">
            <summary>
            Used as key for events.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.#ctor">
            <summary>
            Used for deserialization.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Type">
            <summary>
            The Type the method belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Assembly">
            <summary>
            Assembly this member is in.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.FullName">
            <summary>
            Fullname of this method.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Name">
            <summary>
            Name only of the method.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Serialize(System.String@)">
            <summary>
            Serialize to _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.EventKey.Deserialize(System.String)">
            <summary>
            Deserialize from _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey">
            <summary>
            Used as key for fields.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.#ctor">
            <summary>
            Used for deserialization.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Type">
            <summary>
            The Type the method belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Assembly">
            <summary>
            Assembly this member is in.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.FullName">
            <summary>
            Fullname of this method.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Name">
            <summary>
            Name only of the method.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Serialize(System.String@)">
            <summary>
            Serialize to _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.FieldKey.Deserialize(System.String)">
            <summary>
            Deserialize from _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.Helper.MemberKeyHelper">
            <summary>
            Static helper class for member keys.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.Helper.MemberKeyHelper.TryToCreateMemberKey(OPS.Mono.Cecil.MemberReference,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey@)">
            <summary>
            Returns the matching _MemberKey for _MemberReference.
            </summary>
            <param name="_MemberReference"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.Helper.MemberKeyHelper.TryToCreateMemberKey(OPS.Mono.Cecil.IMemberDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey@)">
            <summary>
            Returns the matching _MemberKey for _MemberDefinition.
            </summary>
            <param name="_MemberDefinition"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.Helper.MemberKeyHelper.TryToCreateMemberKey(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey@)">
            <summary>
            Tries to create a _MemberKey based on _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.Assembly">
            <summary>
            The Assembly the member is in.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.FullName">
            <summary>
            The full name of the member.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.Name">
            <summary>
            The name of the member.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.Serialize(System.String@)">
            <summary>
            Serialize this key to _Value.
            (Needs an empty constructor!)
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey.Deserialize(System.String)">
            <summary>
            Deserialize this key from _Value.
            (Needs an empty constructor!)
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey">
            <summary>
            Used as key for methods.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.#ctor">
            <summary>
            Used for deserialization.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Type">
            <summary>
            The Type the method belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Assembly">
            <summary>
            Assembly this member is in.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.FullName">
            <summary>
            Fullname of this method.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Name">
            <summary>
            Name only of the method.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.GenericParameterCount">
            <summary>
            Returns the count of GenericParameters the Method has.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Serialization_FullName">
            <summary>
            Get: Creates Property Serialization_FullName and assigns to Field serialization_FullName.
            Set: Extracts and assigns to Field FullName, Name and GenericParameterCount.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Serialize(System.String@)">
            <summary>
            Serialize to _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.MethodKey.Deserialize(System.String)">
            <summary>
            Deserialize from _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey">
            <summary>
            Used as key for properties.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.#ctor">
            <summary>
            Used for deserialization.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Type">
            <summary>
            The Type the method belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Assembly">
            <summary>
            Assembly this member is in.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.FullName">
            <summary>
            Fullname of this method.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Name">
            <summary>
            Name only of the method.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Serialize(System.String@)">
            <summary>
            Serialize to _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.PropertyKey.Deserialize(System.String)">
            <summary>
            Deserialize from _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey">
            <summary>
            Used as key for types.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.#ctor">
            <summary>
            Used for deserialization.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Assembly">
            <summary>
            Simplified name of the assembly this Type is in.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.FullName">
            <summary>
            Fullname of this type.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Namespace">
            <summary>
            Namespace only of the type. (Nested have NONE!)
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Name">
            <summary>
            Name only of the type.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.GenericParameterCount">
            <summary>
            Returns the count of GenericParameters the Type has.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Serialize(System.String@)">
            <summary>
            Serialize to _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey.Deserialize(System.String)">
            <summary>
            Deserialize from _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping">
            <summary>
            Maps a member key to a value object.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping.Add(OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Add or override for _Key the _Value.
            </summary>
            <param name="_Key"></param>
            <param name="_Value"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping.Get(OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Get the value for _Key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping.GetAllMemberKeys(System.String)">
            <summary>
            Get all the member keys sharing the same _Value.
            </summary>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping.GetAllMemberKeys``1(System.String)">
            <summary>
            Get all the member keys sharing the same _Value as list of TMemberKey.
            </summary>
            <typeparam name="TMemberKey"></typeparam>
            <param name="_Value"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberReferenceMapping`2">
            <summary>
            Maps a member reference to a value object.
            </summary>
            <typeparam name="TMemberReference"></typeparam>
            <typeparam name="TObject"></typeparam>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberReferenceMapping`2.Add(`0,`1,System.Boolean)">
            <summary>
            Add or override for _Reference the _Value.
            </summary>
            <param name="_Reference"></param>
            <param name="_Value"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping">
            <summary>
            Mapping from the original key of a member to its obfuscated name.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.MemberType">
            <summary>
            The Member Type this mapping is for.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.memberKeyToObfuscatedNameDictionary">
            <summary>
            (Original) Member Full Name, Obfuscated Name.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.obfuscatedSimplifiedNameToMemberKeyListDictionary">
            <summary>
            Obfuscated Name without generic suffix (simplified), List of (Original) Member Full Name.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.Add(OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Add or override an obfuscated name for a extended full name.
            For example: System.Void Method().
            </summary>
            <param name="_MemberKey"></param>
            <param name="_Name"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.Get(OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Get the obfuscated name for a member based on its original full name.
            For example: System.Void Method().
            </summary>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.GetAllMemberKeys(System.String)">
            <summary>
            Returns a list of all members original keys by its obfuscated name or simplified obfuscated name.
            If there is none, returns an empty list.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.GetAllMemberKeys``1(System.String)">
            <summary>
            Returns a list of all members original keys as TMemberKey by its obfuscated name or simplified obfuscated name.
            If there is none, returns an empty list.
            </summary>
            <typeparam name="TMemberKey"></typeparam>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.GetEnumerator">
            <summary>
            Enumerator for mapping.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.OnCustomSerialization">
            <summary>
            Serialize to custom json object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping.OnCustomDeserialization(OPS.Serialization.Json.JsonObject)">
            <summary>
            Deserialize from custom json object.
            </summary>
            <param name="_JsonObject"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberReferenceMapping`2.ReferenceList">
            <summary>
            MemberReference, (Original) Member Key
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberReferenceMapping`2.Add(`0,`1,System.Boolean)">
            <summary>
            Add a _Reference, and its resolved definitions original member key.
            </summary>
            <param name="_Reference"></param>
            <param name="_OriginalMemberKey"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper">
            <summary>
            Helper class for working with Unity's AssemblyDefinition assets.
            Provides utilities for finding and analyzing Unity assembly definitions.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper.FindAllAssemblyDefinitionFiles">
            <summary>
            Retrieves a list of all assembly definitions in the Unity project.
            Uses Unity's CompilationPipeline to get player assemblies.
            </summary>
            <returns>A list of all assembly definitions in the project.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper.IsTestAssembly(UnityEditor.Compilation.Assembly)">
            <summary>
            Determines whether an assembly is a test assembly.
            Checks if the assembly references UnityEngine.TestRunner.
            Note: This applies only for Unity 2019.2 or later, as earlier versions don't include test assemblies in UnityEditor.Compilation.
            </summary>
            <param name="_AssemblyDefinitionFile">The assembly to check.</param>
            <returns>True if the assembly is a test assembly; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper.IsAssemblyDefinitionFileAssembly(System.String)">
            <summary>
            Determines whether an assembly is defined by an Assembly Definition file in the Unity project.
            Checks if the assembly name matches any of the assembly definitions found in the project.
            </summary>
            <param name="_AssemblyName">The name or path of the assembly to check.</param>
            <returns>True if the assembly is defined by an Assembly Definition file; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Helper.AssemblyHelper.IsPreCompiledAssembly(System.String)">
            <summary>
            Determines whether an assembly is a pre-compiled (external) assembly.
            An assembly is considered pre-compiled if it is not defined by an Assembly Definition file.
            </summary>
            <param name="_AssemblyName">The name or path of the assembly to check.</param>
            <returns>True if the assembly is pre-compiled; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.FieldDefinitionHelper">
            <summary>
            Helper class for working with Unity-specific field definitions.
            Provides utilities for checking Unity-specific attributes and behaviors on fields.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.FieldDefinitionHelper.IsFieldSerializeAble(OPS.Mono.Cecil.FieldDefinition)">
            <summary>
            Determines whether a field is serializable by Unity.
            Checks if the field has the Unity [SerializeField] attribute.
            </summary>
            <param name="_Field">The field to check.</param>
            <returns>True if the field has the SerializeField attribute; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper">
            <summary>
            Helper class for Unity-specific type definitions and operations.
            Provides methods to check if types inherit from Unity base classes and to analyze serialization capabilities.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsMonoBehaviour(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.MonoBehaviour.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from MonoBehaviour; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsNetworkBehaviour(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.Networking.NetworkBehaviour.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from NetworkBehaviour; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsScriptableObject(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.ScriptableObject.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from ScriptableObject; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsPlayable(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.Playables.Playable.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from Playable; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsPlayableAsset(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.Playables.PlayableAsset.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from PlayableAsset; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsPlayableBehaviour(OPS.Mono.Cecil.TypeDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.Cache.TypeCache)">
            <summary>
            Determines whether a type inherits from UnityEngine.Playables.PlayableBehaviour.
            </summary>
            <param name="_Type">The type to check.</param>
            <param name="_TypeCache">The type cache to use for inheritance lookups.</param>
            <returns>True if the type inherits from PlayableBehaviour; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsSomeFieldInTypeSerializable(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Determines whether a type has any fields that are serializable by Unity.
            Checks all fields in the type for the SerializeField attribute.
            </summary>
            <param name="_TypeDefinition">The type to check for serializable fields.</param>
            <returns>True if the type has at least one serializable field; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _TypeDefinition is null.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assembly.Unity.Member.Helper.TypeDefinitionHelper.IsSomeFieldInTypeOrBaseSerializable(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Determines whether a type or any of its base types has any fields that are serializable by Unity.
            Recursively checks the type hierarchy for serializable fields.
            </summary>
            <param name="_TypeDefinition">The type to check for serializable fields.</param>
            <returns>True if the type or any of its base types has at least one serializable field; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _TypeDefinition is null.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Extension.TypeReferenceExtension.GetScopeName(OPS.Mono.Cecil.TypeReference)">
            <summary>
            Returns the simplified name for the assembly where a type can be found,
            for example, a type whose module is "Assembly.dll", "Assembly" would be 
            returned.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache">
            <summary>
            A cache for Unity assets that provides fast access to assets by file extension.
            Collects and organizes assets from the Unity project based on specified file extensions.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.#ctor(System.String[])">
            <summary>
            Instantiate a new <see cref="T:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache"/> with the given extensions.
            </summary>
            <param name="_ExtensionToIterateArray">The extensions to include in the cache.</param>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.extensionToIterateArray">
            <summary>
            The file extensions to include in the cache.
            Each extension should include the dot (e.g., ".prefab", ".asset").
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.extensionToAssetPathArrayDictionary">
            <summary>
            Dictionary mapping file extensions to lists of asset references.
            Keys are extensions (including the dot, e.g., ".prefab") and values are lists of asset references.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.CreateCache">
            <summary>
            Create the asset cache based on the given extensions.
            </summary>
            <returns>True if the cache was created successfully; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.GetUnityAssetReferences(System.String)">
            <summary>
            Gets all asset references for a specific file extension.
            </summary>
            <param name="_Extension">The file extension to get assets for (including the dot, e.g., ".prefab").</param>
            <returns>A list of asset references matching the specified extension, or an empty list if none are found.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.GetUnityAssetReferences">
            <summary>
            Gets all cached asset references organized by file extension.
            </summary>
            <returns>A dictionary mapping file extensions to lists of asset references.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.Load">
            <summary>
            Loads the asset cache by finding all assets with the specified extensions in the project.
            </summary>
            <returns>True if the cache was loaded successfully; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.Cache.UnityAssetCache.Unload">
            <summary>
            Unloads the asset cache by clearing all cached references.
            </summary>
            <returns>True if the cache was unloaded successfully; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper">
            <summary>
            Helper class for working with Unity asset files.
            Provides functionality for loading, saving, and modifying Unity serialized assets and bundle files.
            Includes methods for updating MonoScript references in assets after obfuscation.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper.TryToRefreshAssetDatabase">
            <summary>
            Attempts to refresh the Unity AssetDatabase.
            This ensures that any changes to assets are recognized by the Unity Editor.
            </summary>
            <returns>True if the refresh was successful; false if an exception occurred.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper.LoadAssetsFile(System.String)">
            <summary>
            Reads and returns an unity assets file at _FilePath.
            </summary>
            <param name="_FilePath">The path to the unity assets file.</param>
            <returns>The read assets file.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if _FilePath is null or empty.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if there is no file at _FilePath.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper.LoadAssetsFile(System.String,System.IO.Stream)">
            <summary>
            Loads an unity assets file with the passed _Name and _Binary.
            </summary>
            <param name="_Name">The name of the assets file.</param>
            <param name="_Stream">The stream containing the data of the assets file.</param>
            <returns>The read assets file.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper.UpdateMonoScriptsInAssetsFile(GUPS.Assets.Editor.Files.Serialized.AssetsFile,System.Collections.Generic.Dictionary{OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey})">
            <summary>
            Updates all the MonoScripts in _AssetsFile with the passed one in _OldToNewDictionary.
            </summary>
            <param name="_AssetsFile">The assets file to update.</param>
            <param name="_OldToNewDictionary">The dictionary to update the MonoScripts.</param>
            <returns>The count of updated MonoScripts.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper.SaveAssetsFile(GUPS.Assets.Editor.Files.Serialized.AssetsFile,System.String,System.Boolean)">
            <summary>
            Saves the _AssetsFile at _FilePath and _Override it if, there is already a file.
            </summary>
            <param name="_AssetsFile">The assets file to save.</param>
            <param name="_FilePath">The path to save the assets file.</param>
            <param name="_Override">True if the file should be overridden, false otherwise.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if _AssetsFile is null or _FilePath is null or empty.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if there is already a file at _FilePath and _Override is false.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper.SaveAssetsFile(GUPS.Assets.Editor.Files.Serialized.AssetsFile)">
            <summary>
            Saves the _AssetsFile and returns the written data.
            </summary>
            <param name="_AssetsFile">The assets file to save.</param>
            <returns>The written data.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if _AssetsFile is null.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper.LoadBundleFile(System.String)">
            <summary>
            Reads and returns an unity bundle file at _FilePath.
            </summary>
            <param name="_FilePath">The path to the unity bundle file.</param>
            <returns>The read bundle file.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if _FilePath is null or empty.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if there is no file at _FilePath.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper.UpdateMonoScriptsInBundleFile(GUPS.Assets.Editor.Files.Bundle.BundleFile,System.Collections.Generic.Dictionary{OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey})">
            <summary>
            Update the mono scripts in all serialized files inside the _BundleFile with the passed _OldToNewDictionary.
            </summary>
            <param name="_BundleFile">The bundle file to update.</param>
            <param name="_OldToNewDictionary">The dictionary to update the MonoScripts.</param>
            <returns>Returns the count of updated MonoScripts.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if _BundleFile is null or _OldToNewDictionary is null.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetHelper.SaveBundleFile(GUPS.Assets.Editor.Files.Bundle.BundleFile,System.String,System.Boolean)">
            <summary>
            Saves the _BundleFile at _FilePath and _Override it if, there is already a file.
            </summary>
            <param name="_BundleFile">The bundle file to save.</param>
            <param name="_FilePath">The path to save the bundle file.</param>
            <param name="_Override">True if the file should be overridden, false otherwise.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if _BundleFile is null or _FilePath is null or empty.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if there is already a file at _FilePath and _Override is false.</exception>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference">
            <summary>
            Represents a reference to a Unity asset file.
            Provides access to the asset's path, name, and extension information.
            Implements IFileReference to support standard file operations.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.RelativeFilePath">
            <summary>
            Gets the relative path of the asset including name and extension.
            Format: Assets/[Directory]/[Asset][Extension]
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.OPS#Editor#IO#File#IFileReference#FilePath">
            <summary>
            Gets the file path as required by the IFileReference interface.
            Returns the same value as RelativeFilePath.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.FileName">
            <summary>
            Gets the name of the asset file without the extension.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.FileExtension">
            <summary>
            Gets the file extension of the asset, including the dot (e.g., ".prefab", ".asset").
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference"/> class.
            Parses the provided path to extract file name and extension information.
            </summary>
            <param name="_RelativeFilePath">The relative path to the Unity asset file.</param>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Gui.ErrorStackWindow">
            <summary>
            Editor window for deobfuscating stack traces using a mapping file.
            Allows users to paste obfuscated stack traces and convert them back to their original form.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.LoadMapping">
            <summary>
            Loads the obfuscation mapping file from the specified path.
            </summary>
            <returns>True if the mapping was successfully loaded; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.LoadContainer">
            <summary>
            Initializes the UI container with all required elements.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.DeObfuscateStackTrace">
            <summary>
            Deobfuscates the stack trace using the loaded mapping file.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.Load">
            <summary>
            Loads the window settings and initializes the container.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.mappingFilePath">
            <summary>
            Value / Full file path.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.stackTrace">
            <summary>
            Value / The stack trace..
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.scrollPosition">
            <summary>
            Scrollview position 2d.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.OnGUI">
            <summary>
            Draws the GUI for the ErrorStackWindow.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.IterateStackTraceLines">
            <summary>
            Processes each line of the stack trace and deobfuscates it.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.PrepareStackTraceLine(System.String)">
            <summary>
            Prepares a stack trace line for processing by removing unnecessary parts and formatting it.
            </summary>
            <param name="_Line">The stack trace line to prepare.</param>
            <returns>The prepared stack trace line.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.MethodInfo">
            <summary>
            Contains information about a method extracted from a stack trace line.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.CreateMethodInfo(System.String)">
            <summary>
            Creates a MethodInfo object from a prepared stack trace line.
            </summary>
            <param name="_Line">The prepared stack trace line.</param>
            <returns>A MethodInfo object containing the parsed information.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ErrorStackWindow.FindOriginalFullName(OPS.Obfuscator.Editor.Gui.ErrorStackWindow.MethodInfo)">
            <summary>
            Finds the original full name of a method from the mapping file.
            </summary>
            <param name="_MethodInfo">The method information to find the original name for.</param>
            <returns>The deobfuscated full name of the method.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorContainer.ComponentSettings">
            <summary>
            The settings belonging to this component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorContainer.IsPro">
            <summary>
            Is a pro setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ObfuscatorContent.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorContent.Border">
            <summary>
            Border around the content.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ObfuscatorContent.GuiRow(System.Int32)">
            <summary>
            Renders the row at _Index.
            </summary>
            <param name="_Index"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ObfuscatorContent.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ObfuscatorDescription.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorDescription.Border">
            <summary>
            Border around the content.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ObfuscatorDescription.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.HeaderText">
            <summary>
            Text the header shows.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.ComponentSettings">
            <summary>
            Settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.Load">
            <summary>
            Load content by settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.Save">
            <summary>
            Store content to settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.IsActivateAble">
            <summary>
            Is activate able header.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.ActivateAbleSettingId">
            <summary>
            Settings used to active/deactive.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.IsActive">
            <summary>
            The header checkbox value.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.OnSetupGui">
            <summary>
            Setup here your styles.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.Height">
            <summary>
            Height of the header.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.FoldOut">
            <summary>
            Is foldout or not.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.FoldOut_Texture_In">
            <summary>
            Foldin texture.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.FoldOut_Texture_Out">
            <summary>
            Foldout texture.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.checkbox">
            <summary>
            Checkbox for the activation.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.ObfuscatorHeader.OnGui">
            <summary>
            Rendering the gui.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Gui.EObfuscatorCategory">
            <summary>
            Represents the different categories in the obfuscator settings window.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.EObfuscatorCategory.Obfuscation">
            <summary>
            Settings related to core obfuscation features.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.EObfuscatorCategory.Security">
            <summary>
            Settings related to security features.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.EObfuscatorCategory.Compatibility">
            <summary>
            Settings related to compatibility with other systems.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.EObfuscatorCategory.Optional">
            <summary>
            Optional settings that can be enabled or disabled.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Gui.AccessHelper">
            <summary>
            Helper class for determining access levels and feature availability.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.AccessHelper.IsProActive">
            <summary>
            Determines if the Pro version of the obfuscator is active.
            </summary>
            <returns>True if the Pro version is active; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Gui.SettingsWindow">
            <summary>
            Editor window for configuring obfuscator settings.
            Provides a tabbed interface for different categories of settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.SettingsWindow.OnEnable">
            <summary>
            Called when the window is enabled. Loads settings and sets up the GUI.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.SettingsWindow.OnDisable">
            <summary>
            Called when the window is disabled. Saves the current settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.SettingsWindow.settings">
            <summary>
            The obfuscator settings instance.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.SettingsWindow.Load_Settings">
            <summary>
            Loads the obfuscator settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.SettingsWindow.Save_Settings">
            <summary>
            Saves the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.SettingsWindow.categoryContainerListDictionary">
            <summary>
            Dictionary mapping categories to their respective container lists.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.SettingsWindow.LoadAllContainer">
            <summary>
            Loads all GUI containers for the different components and organizes them by category.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.SettingsWindow.scrollPosition">
            <summary>
            Scrollview position 2d.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.SettingsWindow.row_Obfuscator">
            <summary>
            Obfuscator Text
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.SettingsWindow.row_GlobalObfuscation">
            <summary>
            Activate or Deactive Obfuscation.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Gui.SettingsWindow.tabIndex">
            <summary>
            The tab index.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.SettingsWindow.Setup_Gui">
            <summary>
            Sets up the GUI elements for the settings window.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.SettingsWindow.OnGUI">
            <summary>
            Draws the GUI for the settings window.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Gui.SettingsWindow.Update">
            <summary>
            Called every frame to update all containers.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle.Style">
            <summary>
            Static ObfuscatorStyle reference.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Gui.Style.ObfuscatorStyle_Pro.Style">
            <summary>
            Static ObfuscatorStyle_Pro reference.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Component.Gui.Helper.GuiComponentHelper">
            <summary>
            Helper class for working with GUI components in the obfuscator.
            Provides utility methods to collect and manage GUI components from various parts of the obfuscator system.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Component.Gui.Helper.GuiComponentHelper.GetGuiComponents">
            <summary>
            Gets all available GUI components from different parts of the obfuscator.
            Collects components from PreBuild, PostAssemblyBuild, and other pipelines that implement IGuiComponent.
            </summary>
            <returns>A consolidated list of all GUI components from across the obfuscator system.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Component.Gui.IGuiComponent">
            <summary>
            Interface for components that provide a graphical user interface element in the obfuscator.
            Extends the base IComponent interface with GUI-specific functionality.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Component.Gui.IGuiComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            Used to identify and retrieve component-specific settings from the configuration.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Component.Gui.IGuiComponent.ObfuscatorCategory">
            <summary>
            The category in the obfuscator settings window where this component should be displayed.
            Determines the grouping and placement of the component in the UI.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Component.Gui.IGuiComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates and returns the GUI container to be shown in the obfuscator settings window.
            </summary>
            <param name="_ComponentSettings">The component settings to use for configuring the GUI elements.</param>
            <returns>An ObfuscatorContainer with the component's GUI elements.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.Component.Helper.ComponentHelper">
            <summary>
            Helper class providing utility methods for working with obfuscator components.
            Contains static methods to assist with component management and operations.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent">
            <summary>
            Abstract base class for compatibility components in the obfuscator.
            Provides common functionality for components that ensure compatibility with various frameworks and libraries.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.ObfuscatorCategory">
            <summary>
            The ObfuscatorCategory of a CompatibilityComponent is always Compatibility.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Creates and returns the GUI container to be shown in the obfuscator settings window.
            Allows configuration of compatibility settings for this component.
            </summary>
            <param name="_ComponentSettings">The component settings to use for configuring the GUI elements.</param>
            <returns>An ObfuscatorContainer with the component's GUI elements.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.AObfuscationCompatibilityComponent.ToString">
            <summary>
            Returns a string representation of the compatibility component.
            </summary>
            <returns>The name of the compatibility component.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DotNetCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DotNetCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DotNetCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DotNetCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent">
            <summary>
            The compatibility component for Chartboost.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.namespaceToSkip">
            <summary>
            The list of namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.CSkip_Chartboost">
            <summary>
            The settings key for the skip Chartboost setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.Helper_Has_SkipChartboostActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Chartboost setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ChartboostCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent">
            <summary>
            The compatibility component for the DOTween (HOTween v2) from Demigiant.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.namespaceToSkip">
            <summary>
            The namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.CSkip_DOTween">
            <summary>
            The settings key for the skip DOTween setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.Helper_Has_SkipDOTweenActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip DOTween setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.DOTweenCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent">
            <summary>
            The compatibility component for Google Sdks.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.namespaceToSkip">
            <summary>
            The list of namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.CSkip_Google">
            <summary>
            The settings key for the skip Google setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.Helper_Has_SkipGoogleActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Google setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.GoogleSdkCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent">
            <summary>
            The compatibility component for Json Sdks.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.namespaceToSkip">
            <summary>
            The list of namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.attributeToSkip">
            <summary>
            The list of attributes to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.IsFieldRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.FieldDefinition,System.String@)">
            <summary>
            Returns true if the field renaming is allowed.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.ApplyFieldRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.FieldDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.IsPropertyRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.PropertyDefinition,System.String@)">
            <summary>
            Returns true if the property renaming is allowed.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.ApplyPropertyRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.PropertyDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.CSkip_Json">
            <summary>
            The settings key for the skip Json setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.Helper_Has_SkipJsonActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Json setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.JsonSdkCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent">
            <summary>
            The compatibility component for Meta Sdks.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.metaAssemblyToSkip">
            <summary>
            The meta assemblies to skip.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.facebookAssemblyToSkip">
            <summary>
            The facebook assemblies to skip.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.oculusAssemblyToSkip">
            <summary>
            The oculus assemblies to skip.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.namespaceToSkip">
            <summary>
            The namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.CSkip_Meta_Assemblies">
            <summary>
            The settings key for the skip Meta assembly setting.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.CSkip_Facebook_Assemblies">
            <summary>
            The settings key for the skip Facebook assembly setting.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.CSkip_Oculus_Assemblies">
            <summary>
            The settings key for the skip Oculus assembly setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Helper_Has_SkipMetaAssembliesActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Meta assemblies setting.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Helper_Has_SkipFacebookAssembliesActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Facebook assemblies setting.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.Helper_Has_OculusFacebookAssembliesActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Facebook assemblies setting.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MetaCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent">
            <summary>
            The compatibility component for the PlayFab Sdk.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.namespaceToSkip">
            <summary>
            The list of namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'PlayFab' namespaces.
            </summary>
            <returns>True if the whole namespace should be skipped; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.inheritanceTypeToSkip">
            <summary>
            The list of types, if inheriting from, should be skipped.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.SkipWholeType(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole types that inherite from the 'PlayFab' request or response classes.
            </summary>
            <returns>True if the whole type should be skipped; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.IsTypeRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.ApplyTypeRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.CSkip_PlayFab">
            <summary>
            The settings key for the skip PlayFab setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.Helper_Has_SkipPlayFabActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip PlayFab setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.MicrosoftPlayFabSdkCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent">
            <summary>
            The compatibility component for Photon Sdks.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.fusionAssemblyToSkip">
            <summary>
            The photon fusion assembly namespace to skip.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.quantumAssemblyToSkip">
            <summary>
            The photon quantum assembly namespace to skip.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.namespaceToSkip">
            <summary>
            The namespaces to skip (legacy photon).
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.typesToSkip">
            <summary>
            The types to skip (legacy photon).
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.SkipWholeType(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsTypeRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the type should be renamed.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyTypeRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.fusinFieldAttributesToSkip">
            <summary>
            The photon fusion field attributes to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsFieldRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.FieldDefinition,System.String@)">
            <summary>
            Returns true if the field should be renamed.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyFieldRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.FieldDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.fusinPropertyAttributesToSkip">
            <summary>
            The photon fusion property attributes to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsPropertyRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.PropertyDefinition,System.String@)">
            <summary>
            Returns true if the property should be renamed.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyPropertyRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.PropertyDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.methodsToSkip">
            <summary>
            The methods to skip (legacy photon).
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.fusinMethodAttributesToSkip">
            <summary>
            The photon fusion method attributes to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.IsMethodRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.MethodDefinition,System.String@)">
            <summary>
            Returns true if the method should be renamed.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.ApplyMethodRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.MethodDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.CSkip_Photon">
            <summary>
            The settings key for the skip Photon setting.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.CSkip_Photon_Fusion_Assemblies">
            <summary>
            The settings key for the skip Photon Fusion assembly setting.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.CSkip_Photon_Quantum_Assemblies">
            <summary>
            The settings key for the skip Photon Quantum assembly setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Helper_Has_SkipPhotonActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Photon setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Helper_Has_SkipPhotonFusionActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Photon Fusion setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.Helper_Has_SkipPhotonQuantumActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Photon Quantum setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PhotonSdkCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent">
            <summary>
            Component for PixelCrushers assets (Dialogue System &amp; Quest Machine) compatibility.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.namespaceToSkip">
            <summary>
            The PixelCrushers namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'PixelCrushers' namespace from obfuscation.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the namespace should be skipped, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Check if the namespace renaming is allowed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Apply a custom namespace renaming filter. Return a custom name for the namespace if needed. Does nothing for this component.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.CSkip_PixelCrushers">
            <summary>
            The settings key for the skip PixelCrushers setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.Helper_Has_SkipPixelCrushersActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip PixelCrushers setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PixelCrushersCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Returns the gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent">
            <summary>
            The compatibility component for the PlayMaker Sdk.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.namespaceToSkip">
            <summary>
            The namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole namespace should be skipped.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.typesToSkip">
            <summary>
            The types to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.SkipWholeType(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Returns true if the whole type should be skipped.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.IsTypeRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.ApplyTypeRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.CSkip_PlayMaker">
            <summary>
            The settings key for the skip PlayMaker setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.Helper_Has_SkipPlayMakerActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip PlayMaker setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.PlayMakerCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent">
            <summary>
            Component for MongoDB Realms compatibility.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_InheritsFrom_IRealmObjectBase(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns true if the type inherits from 'Realms.IRealmObjectBase'.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_Type">The type to check.</param>
            <returns>True if the type inherits from 'Realms.IRealmObjectBase', otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_InheritsFrom_IAsymmetricObject(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns true if the type inherits from 'Realms.IAsymmetricObject'.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_Type">The type to check.</param>
            <returns>True if the type inherits from 'Realms.IAsymmetricObject', otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_InheritsFrom_IEmbeddedObject(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns true if the type inherits from 'Realms.IEmbeddedObject'.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_Type">The type to check.</param>
            <returns>True if the type inherits from 'Realms.IEmbeddedObject', otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_InheritsFrom_IRealmObject(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns true if the type inherits from 'Realms.IRealmObject'.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_Type">The type to check.</param>
            <returns>True if the type inherits from 'Realms.IRealmObject', otherwise false.</returns>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.namespaceToSkip">
            <summary>
            The realms namespace to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'Realms' namespace from obfuscation.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the namespace should be skipped, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Check if the namespace renaming is allowed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Apply a custom namespace renaming filter. Return a custom name for the namespace if needed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.SkipWholeType(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole type (including the namespace name) if it is a Realm object.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the type (including the namespace name) should be skipped, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.IsTypeRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Check if the type renaming is allowed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.ApplyTypeRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Apply a custom type renaming filter. Return a custom name for the type if needed. Does nothing for this component.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.CSkip_Realms">
            <summary>
            The settings key for the skip Realms setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.Helper_Has_SkipRealmsActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Realms setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.RealmsCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Returns the gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ObfuscatorCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ObfuscatorCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ObfuscatorCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.ObfuscatorCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Helper_Setting_Obfuscate_Class_Serializable(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            False: Either Obfuscator Free or CObfuscate_Class_Serializable is false.
            True: CObfuscate_Class_Serializable is true.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Helper_Setting_Obfuscate_Field_Serializable(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            False: Either Obfuscator Free or CObfuscate_Field_Serializable is false.
            True: CObfuscate_Field_Serializable is true.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.Helper_Setting_Obfuscate_Field_Public_Unity(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            False: Either Obfuscator Free or CObfuscate_Field_Public_Unity is false.
            True: CObfuscate_Field_Public_Unity is true.
            </summary>
            <param name="_Step"></param>
            <returns></returns>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.namespaceToSkip">
            <summary>
            The Unity-Core namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'UnityEngine' namespace from obfuscation.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the namespace should be skipped, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.SkipWholeType(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Determines whether the entire type should be skipped from obfuscation.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the type.</param>
            <param name="_TypeDefinition">The type definition to check.</param>
            <param name="_Cause">Outputs the reason for skipping, if applicable.</param>
            <returns>True if the type should be skipped from obfuscation; otherwise, false.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent">
            <summary>
            Component for Unity IAP (in-app purchases) package compatibility. More infos about package here: https://docs.unity3d.com/Packages/com.unity.purchasing@5.0/manual/index.html
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.namespaceToSkip">
            <summary>
            The Unity IAP namespaces to skip.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Skip the whole 'UnityEngine.Purchasing' namespace from obfuscation.
            </summary>
            <param name="_Step">The current step.</param>
            <param name="_AssemblyInfo">The current assembly info.</param>
            <param name="_TypeDefinition">The current type definition.</param>
            <param name="_Cause">The cause of skipping.</param>
            <returns>True if the namespace should be skipped, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Check if the namespace renaming is allowed. Does nothing for this component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Apply a custom namespace renaming filter. Return a custom name for the namespace if needed. Does nothing for this component.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.CSettingsKey">
            <summary>
            The settings key for this component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.CSkip_UnityPurchasing">
            <summary>
            The settings key for the skip Unity IAP setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.Helper_Has_SkipUnityPurchasingActivated(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            Helper method to check if the user has activated the skip Unity IAP setting.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Component.UnityPurchasingCompatibilityComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Returns the gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Helper.ComponentHelper">
            <summary>
            Helper class for managing and retrieving compatibility components.
            Provides methods to get built-in and plugin compatibility components for the obfuscator.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Helper.ComponentHelper.GetObfuscationCompatibilityComponentList">
            <summary>
            Returns a comprehensive list of all obfuscator compatibility components.
            Includes built-in components for .NET, Unity, and various third-party frameworks,
            as well as any user-defined plugin components.
            </summary>
            <returns>A list containing all available compatibility components.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.Helper.ComponentHelper.GetObfuscationCompatibilityPluginComponents">
            <summary>
            Discovers and instantiates all user-defined compatibility plugin components.
            Uses reflection to find all non-abstract classes implementing IObfuscationCompatibilityPluginComponent
            and creates instances of them.
            </summary>
            <returns>A list of instantiated user-defined compatibility plugin components.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IEventCompatibility">
            <summary>
            Interface for compatibility components that handle event-related compatibility during obfuscation.
            Provides methods to determine if events can be renamed and to filter event names to ensure compatibility.
            Implementations ensure that event obfuscation doesn't break functionality in supported frameworks and plugins.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IEventCompatibility.IsEventRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.EventDefinition,System.String@)">
            <summary>
            Determines whether the specified event can be renamed during obfuscation.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the event.</param>
            <param name="_EventDefinition">The event definition to check for renaming eligibility.</param>
            <param name="_Cause">When the method returns false, contains the reason why renaming is not allowed.</param>
            <returns>True if the event can be renamed; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IEventCompatibility.ApplyEventRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.EventDefinition,System.String,System.String)">
            <summary>
            Applies a filter to the obfuscated event name, allowing compatibility components to modify it if necessary.
            This enables special handling for events that need specific naming patterns to maintain compatibility.
            </summary>
            <param name="_Step">The current post-assembly build step.</param>
            <param name="_AssemblyInfo">Information about the assembly containing the event.</param>
            <param name="_EventDefinition">The event definition being renamed.</param>
            <param name="_OriginalName">The original name of the event before obfuscation.</param>
            <param name="_CurrentName">The current obfuscated name that may be modified.</param>
            <returns>The final name to use for the event after filtering.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IFieldCompatibility">
            <summary>
            A component independent from the pipeline process. Allows custom compatibility to plugins / assets.
            All compatibility component are called in the belonging member obfuscation component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IFieldCompatibility.IsFieldRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.FieldDefinition,System.String@)">
            <summary>
            Return false, if the renaming of this field is not allowed!
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_FieldDefinition"></param>
            <param name="_Cause"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IFieldCompatibility.ApplyFieldRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.FieldDefinition,System.String,System.String)">
            <summary>
            Modify the obfuscated field name if has to.
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_FieldDefinition"></param>
            <param name="_OriginalName"></param>
            <param name="_CurrentName"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IMethodCompatibility">
            <summary>
            A component independent from the pipeline process. Allows custom compatibility to plugins / assets.
            All compatibility component are called in the belonging member obfuscation component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IMethodCompatibility.IsMethodRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.MethodDefinition,System.String@)">
            <summary>
            Return false, if the renaming of this method is not allowed!
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_MethodDefinition"></param>
            <param name="_Cause"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IMethodCompatibility.ApplyMethodRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.MethodDefinition,System.String,System.String)">
            <summary>
            Modify the obfuscated method name if has to.
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_MethodDefinition"></param>
            <param name="_OriginalName"></param>
            <param name="_CurrentName"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.INamespaceCompatibility">
            <summary>
            A component independent from the pipeline process. Allows custom compatibility to plugins / assets.
            All compatibility component are called in the belonging member obfuscation component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.INamespaceCompatibility.SkipWholeNamespace(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Return true, to skip the whole namespace and all its members!
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_Cause"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.INamespaceCompatibility.IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Return false, if the renaming of this namespace is not allowed!
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_Cause"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.INamespaceCompatibility.ApplyNamespaceRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Modify the obfuscated namespace name if has to.
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_OriginalName"></param>
            <param name="_CurrentName"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IPropertyCompatibility">
            <summary>
            A component independent from the pipeline process. Allows custom compatibility to plugins / assets.
            All compatibility component are called in the belonging member obfuscation component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IPropertyCompatibility.IsPropertyRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.PropertyDefinition,System.String@)">
            <summary>
            Return false, if the renaming of this property is not allowed!
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_PropertyDefinition"></param>
            <param name="_Cause"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IPropertyCompatibility.ApplyPropertyRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.PropertyDefinition,System.String,System.String)">
            <summary>
            Modify the obfuscated property name if has to.
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_PropertyDefinition"></param>
            <param name="_OriginalName"></param>
            <param name="_CurrentName"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.ITypeCompatibility">
            <summary>
            A component independent from the pipeline process. Allows custom compatibility to plugins / assets.
            All compatibility component are called in the belonging member obfuscation component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.ITypeCompatibility.SkipWholeType(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Return true, to skip the whole type and all its members!
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_Cause"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.ITypeCompatibility.IsTypeRenamingAllowed(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String@)">
            <summary>
            Return false, if the renaming of this type is not allowed!
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_Cause"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.ITypeCompatibility.ApplyTypeRenamingFilter(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep,OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.String,System.String)">
            <summary>
            Modify the obfuscated type name if has to.
            </summary>
            <param name="_Step"></param>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_OriginalName"></param>
            <param name="_CurrentName"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IObfuscationCompatibilityComponent">
            <summary>
            Interface for compatibility components that ensure proper functionality of obfuscated code with various frameworks and libraries.
            These components operate independently from the main pipeline process and provide compatibility checks and fixes.
            All compatibility components are called by their corresponding member obfuscation components during the obfuscation process.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Compatibility.IObfuscationCompatibilityPluginComponent">
            <summary>
            Interface for plugin-specific compatibility components that operate independently from the main pipeline process.
            Extends the base IObfuscationCompatibilityComponent interface to specifically handle plugin compatibility.
            These components are called by their corresponding member obfuscation components to ensure proper plugin functionality after obfuscation.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer">
            <summary>
            Contains all the data the obfuscation project needs.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.ComponentList">
            <summary>
            All pipeline obfuscator components.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.CompatibilityComponentList">
            <summary>
            All obfuscator compatibility components.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.AssemblyLoadInfoList">
            <summary>
            Information about to load assemblies.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.AssemblyDependencyDirectoryPathList">
            <summary>
            Directory path to all assembly dependencies.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.ObfuscateAssemblyList">
            <summary>
            Contains the to obfuscate assemblies.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.HelperAssemblyList">
            <summary>
            Contains the helper assemblies.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.AssemblyResolver">
            <summary>
            Used to resolve assemblies and their types.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.CacheDictionary">
            <summary>
            MemberType, Cache
            Contains the cache of all members.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildDataContainer.RenameManager">
            <summary>
            Manages what types/members should or should not get obfuscated. And their renaming mapping.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent">
            <summary>
            Component of the obfuscator.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.Pipeline">
            <summary>
            Pipeline this Component belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.DataContainer">
            <summary>
            Returns the DataContainer of the belonging Pipeline.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.Step">
            <summary>
            Returns the Step this Pipeline belongs to.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.CanBeProcessedByComponent(OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            True: The _AssemblyLoadInfo should be processed by this component.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.Prepare_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Prepare / preprocess the assembly before it will be loaded.
            Is a special hook called independently from the pipeline process itself.
            Called before the assemblies itself are loaded.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.APostAssemblyBuildComponent.PostProcess_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Postprocess the assembly after it was obfuscated and saved.
            Is a special hook called independently from the pipeline process itself.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Assembly.AssemblyObfuscationComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent">
            <summary>
            Obfuscates the addressable bundles after the assembly build process.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.CEnable_Try_Obfuscate_Addressables">
            <summary>
            The settings key to obfuscate addressables.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.CCustom_Addressable_Paths">
            <summary>
            The settings key for custom addressable paths.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the gui container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The gui container.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.BUILD_TARGET_PLACEHOLDER">
            <summary>
            The placeholder for the build target in the custom addressable paths.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.buildTargetMapping">
            <summary>
            Maps the build target to the Addressables platform subfolder.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.GetAddressablesPlatformPathInternal(UnityEditor.BuildTarget)">
            <summary>
            Maps the build target to the Addressables platform subfolder. If the build target is not found in the mapping, it will return the build target as a string.
            </summary>
            <param name="_Target">The build target to get the Addressables platform subfolder for.</param>
            <returns>The Addressables platform subfolder for the build target.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.GetPlatformPathSubFolder">
            <summary>
            Retrieves the Addressables platform subfolder of the build platform that is targeted.
            </summary>
            <remarks>
            For example: 
            - StandaloneWindows, StandaloneWindows64 > Windows <br />
            - StandaloneOSX > OSX <br />
            - StandaloneLinux64 > Linux <br />
            ...
            </remarks>
            <returns>Returns the Addressables platform subfolder of the build platform that is targeted.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.CatalogBuildPath">
            <summary>
            The catalog while always be build inside the default build path.
            </summary>
            <remarks>
            If older 2021.2: Assets/StreamingAssets/aa/[SubPlatform].<br />
            If newer 2021.2: Library/com.unity.addressables/aa/[SubPlatform].<br />
            ...
            </remarks>
            <returns>Returns the default build path for the catalog file build.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.DefaultBuildPath">
            <summary>
            Retrieves the default build path for the Addressables build.
            </summary>
            <remarks>
            If older 2021.2: Assets/StreamingAssets/aa/[SubPlatform]/[Platform].<br />
            If newer 2021.2: Library/com.unity.addressables/aa/[SubPlatform]/[Platform].<br />
            ...
            </remarks>
            <returns>Returns the default build path for the Addressables build.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.GetAllBundleFiles(System.String)">
            <summary>
            Returns a list of all bundle file infos in the given directory and its subdirectories.
            </summary>
            <param name="_BundleDirectory">The directory to search for bundle files.</param>
            <returns>A list of all bundle file infos in the given directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.ObfuscateBundleFiles(System.Collections.Generic.Dictionary{OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey})">
            <summary>
            Obfuscates all bundle files in the default and custom paths.
            </summary>
            <param name="_ObfuscationMapping">The mapping of the original monobehaviour type to the obfuscated monobehaviour type.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.ObfuscateBundleFile(System.String,System.Collections.Generic.Dictionary{OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.TypeKey})">
            <summary>
            Obfuscates the bundle file with the given obfuscation mapping and overrides the existing bundle file.
            </summary>
            <param name="_BundleFilePath">The path to the bundle file to obfuscate.</param>
            <param name="_ObfuscationMapping">The mapping of the original monobehaviour type to the obfuscated monobehaviour type.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AddressableComponent.OnPostPipelineProcess(OPS.Editor.Project.Step.IStepOutput)">
            <summary>
            On post process get the monobehaviour obfuscation mapping and obfuscate the addressable bundles.
            </summary>
            <param name="_StepOutput">The step output of the post assembly build pipeline.</param>
            <returns>True if the post process was successful, otherwise false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent">
            <summary>
            Skips the animation methods found in the anaylse pipeline.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CEnable_Try_Find_Inspector_Animation_Methods">
            <summary>
            The settings key to enable the try find inspector animation methods.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CEnable_Try_Find_Inspector_Animation_Methods_In_Models">
            <summary>
            The settings key to enable the try find inspector animation methods in models.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CEnable_Try_Find_Inspector_Animation_Methods_In_AnimationClips">
            <summary>
            The settings key to enable the try find inspector animation methods in animations.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.CEnable_Try_Find_Inspector_Animation_Methods_In_AnimatorControllers">
            <summary>
            The settings key to enable the try find inspector animation methods in animator controllers.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            The gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.ReferencedAnimationMethodHashSet">
            <summary>
            A hashset of all references animation methods.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.ReferencedStateMachineBehaviourList">
            <summary>
            A list of all references StateMachineBehaviour classes.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.OnPrePipelineProcess(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Preprocess the component using the passed step input.
            </summary>
            <param name="_StepInput">The step input to preprocess.</param>
            <returns>True if the preprocessing was successful, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.OnAnalyse_A_Skip_StateMachineBehaviour_Types(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse for referenced StateMachineBehaviour types. Skip those types and serializeable fields.
            </summary>
            <param name="_AssemblyInfo">The assembly info to analyse.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.AnimationComponent.OnAnalyse_A_Skip_Animiation_Methods(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse for referenced animation methods. Skip those methods.
            </summary>
            <param name="_AssemblyInfo">The assembly info to analyse.</param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.IsActive">
            <summary>
            True: StringReflectionComponent is active.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.stringHashSet">
            <summary>
            HashSet of all strings inside the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.OnAnalyse_A_FindStringsInMethods(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Methods strings.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.StringReflectionComponent.OnAnalyse_A_Skip_TypesAndMethods(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Types and Methods to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent">
            <summary>
            This component skips methods which are refered by Unity Events.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.CEnable_Try_Find_Inspector_Unity_Event_Methods">
            <summary>
            The settings key to enable the try find inspector unity event methods.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.CEnable_Try_Find_Inspector_Unity_Event_Methods_In_Scenes">
            <summary>
            The settings key to enable the try find inspector unity event methods in scenes.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.CEnable_Try_Find_Inspector_Unity_Event_Methods_In_Prefabs">
            <summary>
            The settings key to enable the try find inspector unity event methods in prefabs.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            The gui container for this component.
            </summary>
            <param name="_ComponentSettings">The component settings.</param>
            <returns>The gui container for this component.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.ReferencedEventMethodHashSet">
            <summary>
            A list of all references unity event methods.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnPrePipelineProcess(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Preprocess the component using the passed step input.
            Reads the analysed unity event methods from the preprocessing step.
            </summary>
            <param name="_StepInput">The step input to preprocess.</param>
            <returns>True if the preprocessing was successful, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnAnalyse_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Search methods to skip.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnAnalyse_A_Skip_Methods(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Methods to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnPostAnalyse_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Does nothing.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnObfuscate_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Does nothing.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Compatibility.UnityEventComponent.OnPostObfuscate_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Does nothing.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.NotObfuscateCauseComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.NotObfuscateCauseComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.NotObfuscateCauseComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.RemoveObfuscatorAttributesComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.RemoveObfuscatorAttributesComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.RemoveObfuscatorAttributesComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Debug.LoggingComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Helper.ComponentHelper">
            <summary>
            Component helper for the post assembly build step.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Helper.ComponentHelper.GetObfuscatorPipelineComponentList">
            <summary>
            Returns all post assembly build components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Helper.ComponentHelper.GetPostAssemblyBuildPluginComponents">
            <summary>
            Returns a list of all user plugins.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent">
            <summary>
            Used to process assemblies.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent.OnAnalyse_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse an _AssemblyInfo the first time.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent.OnPostAnalyse_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse an _AssemblyInfo the second time, after all other components have already analysed it the first time.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent.OnObfuscate_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Apply obfuscation to the _AssemblyInfo here.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProcessingComponent.OnPostObfuscate_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Callen after the assemblies got obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProvidingComponent">
            <summary>
            Returns assemblies and assembly dependencies to process.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProvidingComponent.GetAssemblyLoadInfoList">
            <summary>
            Return a list of all assemblies should be used for obfuscation.
            Either ones that should be obfuscated or only loaded as helper.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IAssemblyProvidingComponent.GetAssemblyReferenceDirectoryList">
            <summary>
            Return a list of all directories containing assemblies referenced in the to obfuscate assemblies.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildComponent">
            <summary>
            Interface over a post assembly build component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildComponent.CanBeProcessedByComponent(OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Return true if the _AssemblyLoadInfo can be processed by this component.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildComponent.Prepare_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Prepare / preprocess the assembly before it will be loaded.
            Is a special hook called independently from the pipeline process itself.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildComponent.PostProcess_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            Postprocess the assembly after it was obfuscated and saved.
            Is a special hook called independently from the pipeline process itself.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.IPostAssemblyBuildPluginComponent">
            <summary>
            Interface over a custom post assembly build plugin component.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2">
            <summary>
            Inherit from this component if you want to obfuscate members.
            TMemberReference is the type of reference this component works with. The ones getting renamed too.
            TMemberKey the type of key used to identify the references.
            </summary>
            <typeparam name="TMemberReference"></typeparam>
            <typeparam name="TMemberKey"></typeparam>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Shown gui in the obfuscator settings window.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.MemberReferenceMapping">
            <summary>
            Contains a mapping of all member references inside the to obfuscate assemblies.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnAnalyse_A_ResolveAndAddToMapping(`0)">
            <summary>
            Add a _MemberReference to the memberReferenceMapping if _MemberReference can be resolved and is in to obfuscate assemblies.
            </summary>
            <param name="_MemberReference"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnAnalyse_A_FindMemberReferences(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Return all the references this component will obfuscate too.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnAnalyse_A_FindMemberToNotRename(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Mark the Members to not rename here.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnFindMemberNames_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.AMemberObfuscationComponent`2.OnObfuscate_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Obfuscate the member and references with the previous found names.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.OnAnalyse_Helper_SkipEvent(OPS.Mono.Cecil.EventDefinition,System.String)">
            <summary>
            Skip the _EventDefinition with _Cause.
            If Event belongs to a Field, skip Field too!
            </summary>
            <param name="_EventDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.OnAnalyse_Helper_SkipEventMethods(OPS.Mono.Cecil.EventDefinition,System.String)">
            <summary>
            Skip the _EventDefinition add and remove methods with _Cause.
            </summary>
            <param name="_EventDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.OnAnalyse_A_FindEventDefinitionShouldBeNotRenamed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Properties to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.Analyse_A_Helper_Compatibility_IsEventRenamingAllowed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.EventDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_EventDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.Analyse_AnalyseEventGroups(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Method groups.
            And check if some other Method in group getting skipped.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Event.EventObfuscationComponent.OnFindMemberNames_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_A_FindAllModuleMethodReferences(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'GetMemberReferences' in all the Modules of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_A_FindAllInstructionMethodReferences(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find the FieldReference inside the Instructions of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_Helper_SkipField(OPS.Mono.Cecil.FieldDefinition,System.String)">
            <summary>
            Skip _FieldDefinition with _Cause.
            If Field belongs to a Property, skip Property too!
            </summary>
            <param name="_FieldDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_Helper_SkipPropertyMethods(OPS.Mono.Cecil.PropertyDefinition,System.String)">
            <summary>
            Skip the _PropertyDefinitions get and set methods with _Cause.
            </summary>
            <param name="_PropertyDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_Helper_SkipEventMethods(OPS.Mono.Cecil.EventDefinition,System.String)">
            <summary>
            Skip the _EventDefinition add and remove methods with _Cause.
            </summary>
            <param name="_EventDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnAnalyse_A_FindFieldDefinitionShouldBeNotRenamed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Fields to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.Analyse_A_Helper_Compatibility_IsFieldRenamingAllowed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.FieldDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_FieldDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Field.FieldObfuscationComponent.OnFindMemberNames_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.IMemberObfuscationComponent.OnFindMemberNames_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find member names here.
            Called after Analyse and before Obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.OnAnalyse_A_FindAllModuleMethodReferences(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'GetMemberReferences' in all the Modules of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.OnAnalyse_A_FindAllInstructionMethodReferences(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find the MethodReferences inside the Overrides and Instructions of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.OnAnalyse_A_FindMethodDefinitionShouldBeNotRenamed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Methods to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.Analyse_A_Helper_Compatibility_IsMethodRenamingAllowed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.MethodDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_MethodDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.Analyse_AnalyseMethodGroups(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Method groups.
            And check if some other Method in group getting skipped.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.MethodObfuscationComponent.OnFindMemberNames_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Method.ParameterObfuscationComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.OnAnalyse_Helper_SkipProperty(OPS.Mono.Cecil.PropertyDefinition,System.String)">
            <summary>
            Skip the _PropertyDefinition with _Cause.
            If Property belongs to a Field, skip Field too!
            </summary>
            <param name="_PropertyDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.OnAnalyse_Helper_SkipPropertyMethods(OPS.Mono.Cecil.PropertyDefinition,System.String)">
            <summary>
            Skip the _PropertyDefinitions get and set methods with _Cause.
            </summary>
            <param name="_PropertyDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.OnAnalyse_A_FindPropertyDefinitionShouldBeNotRenamed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Properties to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.Analyse_A_Helper_Compatibility_IsPropertyRenamingAllowed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.PropertyDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_PropertyDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.Analyse_AnalysePropertyGroups(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Method groups.
            And check if some other Method in group getting skipped.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Property.PropertyObfuscationComponent.OnFindMemberNames_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeCacheReplaceComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeCacheReplaceComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeCacheReplaceComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent">
            <summary>
            Obfuscation of MonoBehaviours by renaming. 
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.CanBeProcessedByComponent(OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            True: The _AssemblyLoadInfo should be processed by this component.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.CMonobehaviourObfuscationMapping">
            <summary>
            The step data key for the MonoBehaviour rename mapping.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.MonobehaviourObfuscationMapping">
            <summary>
            A mapping of the original monobehaviour type to the obfuscated monobehaviour type.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnAnalyse_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Validate if MonoBehaviours are obfuscatable in general.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnAnalyse_A_CheckMonoBehaviour(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Check if MonoBehaviours in general should be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnPostAnalyse_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Validates if the namespace and class name getting obfuscated.
            Only both together can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnObfuscate_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns just true.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnPostObfuscate_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Map the unobfuscated MonoBehaviours to the obfuscated MonoBehaviours.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnPostObfuscate_Assemblies_FindMonoBehaviourMapping(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Process only if MonoBehaviour, not generic and not abstract!
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.MonoBehaviourRenameObfuscationComponent.OnPostPipelineProcess(OPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Adds the unobfuscated MonoBehaviours to the obfuscated MonoBehaviours map to the _StepOutput.
            </summary>
            <param name="_StepOutput"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnAnalyse_A_FindAllModuleTypeReferences(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'GetTypeReferences' in all the Modules of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnAnalyse_A_FindAllCustomAttributeTypeReferences(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'Custom Attributes' TypeReferences of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Find_TypeReferences_In_CustomAttributes_In_Assembly(OPS.Mono.Cecil.AssemblyDefinition)">
            <summary>
            Returns a list of all TypeReference in _AssemblyDefinition CustomAttributes.
            </summary>
            <param name="_AssemblyDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Find_TypeReferences_In_CustomAttributes_In_TypeDefinition(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns a list of all TypeReference of the CustomAttributes in _TypeDefinition, and its members.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Find_TypeReferences_In_CustomAttribute_Collection(OPS.Mono.Cecil.ICustomAttributeProvider)">
            <summary>
            CustomAttributes have ConstructorArguments and Properties and Fields.
            CustomAttributes having a Value. If it is a TypeReference, it is a reference.
            CustomAttributeNamedArgument have a Name and an Argument. The Name has to be overriden if the belonging Property or Field got obfuscated.
            The Argument does maybe recursive reference a TypeReference. 
            </summary>
            <param name="_CustomAttributeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Find_TypeReferences_In_CustomAttributeArgument(OPS.Mono.Cecil.CustomAttributeArgument)">
            <summary>
            If the Value of _CustomAttributeArgument is a TypeReference return it else null.
            </summary>
            <param name="_CustomAttributeArgument"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnAnalyse_A_FindTypeDefinitionNamespacesShouldBeSkipped(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Checks if the whole Type and members should be skipped!
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Analyse_A_Helper_Compatibility_SkipWholeNamespace(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Skip the whole namespace?
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnAnalyse_A_FindTypeDefinitionNamespacesShouldBeNotRenamed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Types to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.Analyse_A_Helper_Compatibility_IsNamespaceRenamingAllowed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.NamespaceObfuscationComponent.OnFindMemberNames_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.PlayableObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.PlayableObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.PlayableObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.PlayableObfuscationComponent.OnAnalyse_A_CheckPlayable(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Check if Playables in general should be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.ScriptableObjectObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.ScriptableObjectObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.ScriptableObjectObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.ScriptableObjectObfuscationComponent.OnAnalyse_A_CheckScriptableObject(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Check if ScriptableObjects in general should be obfuscated.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnAnalyse_A_FindAllModuleTypeReferences(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'GetTypeReferences' in all the Modules of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnAnalyse_A_FindAllCustomAttributeTypeReferences(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Add the 'Custom Attributes' TypeReferences of _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Find_TypeReferences_In_CustomAttributes_In_Assembly(OPS.Mono.Cecil.AssemblyDefinition)">
            <summary>
            Returns a list of all TypeReference in _AssemblyDefinition CustomAttributes.
            </summary>
            <param name="_AssemblyDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Find_TypeReferences_In_CustomAttributes_In_TypeDefinition(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns a list of all TypeReference of the CustomAttributes in _TypeDefinition, and its members.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Find_TypeReferences_In_CustomAttribute_Collection(OPS.Mono.Cecil.ICustomAttributeProvider)">
            <summary>
            CustomAttributes have ConstructorArguments and Properties and Fields.
            CustomAttributes having a Value. If it is a TypeReference, it is a reference.
            CustomAttributeNamedArgument have a Name and an Argument. The Name has to be overriden if the belonging Property or Field got obfuscated.
            The Argument does maybe recursive reference a TypeReference. 
            </summary>
            <param name="_CustomAttributeProvider"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Find_TypeReferences_In_CustomAttributeArgument(OPS.Mono.Cecil.CustomAttributeArgument)">
            <summary>
            If the Value of _CustomAttributeArgument is a TypeReference return it else null.
            </summary>
            <param name="_CustomAttributeArgument"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnAnalyse_A_FindTypeDefinitionsShouldBeSkipped(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Checks if the whole Type and members should be skipped!
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Analyse_A_Helper_Compatibility_SkipWholeType(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Skip the whole type?
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnAnalyse_A_FindTypeDefinitionsShouldBeNotRenamed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Analyse the Types to check if they can be obfuscated.
            </summary>
            <param name="_AssemblyInfo">The assembly to analyse.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.Analyse_A_Helper_Compatibility_IsTypeRenamingAllowed(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check Compatibility Components.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
            <param name="_CauseList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Member.Type.TypeObfuscationComponent.OnFindMemberNames_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Find names for the member to obfuscate.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.CustomAttributeComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent">
            <summary>
            The renaming component allows to manage the renaming pattern and mapping.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.OnPrePipelineProcess(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Before the pipeline process, load the renaming pattern and mapping.
            </summary>
            <param name="_StepInput">The step input.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Optional.RenamingComponent.OnPostPipelineProcess(OPS.Editor.Project.Step.IStepOutput)">
            <summary>
            After the pipeline process, save the mapping.
            </summary>
            <param name="_StepOutput">The step output.</param>
            <returns>The success of the operation.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent">
            <summary>
            Obfuscation of MonoBehaviours by renaming. 
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Returns the gui container.
            </summary>
            <param name="_ComponentSettings"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.CanBeProcessedByComponent(OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            True: The _AssemblyLoadInfo should be processed by this component.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.OnAnalyse_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns just true.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.OnPostAnalyse_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns just true.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.OnObfuscate_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Returns just true.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.OnPostObfuscate_Assemblies(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Map the unobfuscated MonoBehaviours to the obfuscated MonoBehaviours.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.OnPostObfuscate_AddAntiTamperingRuntime(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Adds the tampering recognition type and method to _AssemblyInfo.
            Returns the Method also.
            </summary>
            <param name="_AssemblyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.AntiTamperingObfuscationComponent.OnPostObfuscate_AddAntiTamperingRuntime_InMethods(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Adds the _TamperingRecognitionMethod to all static constructors in _AssemblyInfo.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TamperingRecognitionMethod"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.SuppressIldasmAttributeComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent">
            <summary>
            This security component generates random code and/or mixed code based on existing methods and adds it to your classes.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.CSettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings as constant.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.CEnable_Add_Random_Code">
            <summary>
            General settings for this component to activate or deactivate it.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.CEnable_Force_Add_Random_Code">
            <summary>
            Activate to force the random code generation even for classes that are not obfuscated.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.GetGuiContainer(OPS.Editor.Settings.File.ComponentSettings)">
            <summary>
            Get the GUI container for this component.
            </summary>
            <param name="_ComponentSettings">The settings for this component.</param>
            <returns>The GUI container for this component.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnObfuscate_AddRandomCode(OPS.Obfuscator.Editor.Assembly.AssemblyInfo)">
            <summary>
            Clone methods in types and randomize operands.
            </summary>
            <param name="_AssemblyInfo"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnObfuscate_Skip_Type_ForRandomCodeGeneration(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns true if the type should be skipped for random code generation.
            </summary>
            <param name="_TypeDefinition">The type to check.</param>
            <returns>True if the type should be skipped for random code generation; else false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnObfuscate_Generate_RandomCode(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Clone methods in _TypeDefinition and randomize instructions.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnObfuscate_Helper_GetListOfToCloneMethods(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns a list of all cloneable methods in _TypeDefinition.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnObfuscate_TypeContainsMethod(OPS.Mono.Cecil.TypeDefinition,System.String)">
            <summary>
            The type contains a method with the name _MethodName.
            </summary>
            <param name="_TypeDefinition"></param>
            <param name="_MethodName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnObfuscate_Helper_CloneMethod(OPS.Mono.Cecil.AssemblyDefinition,OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Clones a method with random values.
            If cannot be cloned or a choosen name already got used, returns null.
            </summary>
            <param name="_AssemblyDefinition"></param>
            <param name="_Source"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnObfuscate_Helper_Randomize_Method_Instructions(OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Randomize Int/Float/Double/String operands.
            </summary>
            <param name="_MethodDefinition"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.RandomString">
            <summary>
            Create a random string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.CloneMethodComponent.OnObfuscate_Helper_ShuffleMethods(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Shuffle all methods in _TypeDefinition.
            </summary>
            <param name="_TypeDefinition"></param>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.Block">
            <summary>
            Represents a block of instructions in the control flow process.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.Block.Instructions">
            <summary>
            The instructions in the block.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.Block.Number">
            <summary>
            The block ordered number.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.Block.random">
            <summary>
            Randomizer.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.Block.randomIdentifier">
            <summary>
            Represents a random index from int - max to max.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.Block.RandomIdentifier">
            <summary>
            Returns a random index from int - max to max.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.BlockParser">
            <summary>
            Helper class to parse a method instructions into blocks.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.BlockParser.ParseMethod(OPS.Mono.Cecil.MethodDefinition)">
            <summary>
            Parse _MethodDefinition instructions into a ordered block list.
            </summary>
            <param name="_MethodDefinition"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.CanBeProcessedByComponent(OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo)">
            <summary>
            True: The _AssemblyLoadInfo should be processed by this component.
            </summary>
            <param name="_AssemblyLoadInfo"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.OnObfuscate_Skip_Type_Modify_ControlFlow(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            True: Skip _TypeDefinition for random code generation.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.OnObfuscate_Helper_Get_Method_List(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Returns a list of all control flow protect able methods in _TypeDefinition.
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.Method.ControlFlow.ControlFlowComponent.OnObfuscate_Modify_ControlFlow(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Clone methods in _TypeDefinition and randomize instructions.
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.SettingsKey">
            <summary>
            The settings key for this component in the obfuscator settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.Component.Security.StringObfuscationComponent.ObfuscatorCategory">
            <summary>
            Category this Component belongs too.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline">
            <summary>
            The post assembly build pipeline.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline.Step">
            <summary>
            Project this Pipeline belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline.DataContainer">
            <summary>
            DataContainer of the Project.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline.Settings">
            <summary>
            Settings of the Project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Pipeline.PostAssemblyBuildPipeline.OnProcessPipeline">
            <summary>
            Processes the whole obfuscation pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput">
            <summary>
            Output object for the post assembly build step.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Data">
            <summary>
            Stores dynamic data in a string key and object value format.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Has(System.String)">
            <summary>
            Returns true if the data container has data for a key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Add _Data for _Key.
            If the _Key already exists, decide if it should be overriden.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Data"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Get``1(System.String,``0)">
            <summary>
            Return the data at _Key. If the data does not exist, return _Default.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput.Failed">
            <summary>
            Returns if the pipeline processing failed!
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep">
            <summary>
            Step responsible for obfuscating assemblies after they have been built.
            Manages loading, processing, and saving of assemblies with obfuscation applied.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.#ctor(OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Initializes a new instance of the PostAssemblyBuildStep class.
            </summary>
            <param name="_EditorSettings">The editor settings to use.</param>
            <param name="_BuildSettings">The build settings to use.</param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Name">
            <summary>
            Name of the step.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.EditorSettings">
            <summary>
            Settings used for the editor.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.BuildSettings">
            <summary>
            Settings used for the current build.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.DataContainer">
            <summary>
            Shared data container for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadDataContainer">
            <summary>
            Load the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadDataContainer">
            <summary>
            Unload the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Settings">
            <summary>
            Shared settings for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadObfuscatorSettings">
            <summary>
            Load the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadObfuscatorSettings">
            <summary>
            Unload the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadComponents">
            <summary>
            Loads the components if they are not already loaded.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetComponentsAssemblyLoadInfoList">
            <summary>
            Get the assembly load infos from the components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadComponentsAssemblyDependencyDirectories(System.Collections.Generic.List{System.String}@)">
            <summary>
            Get all component dependencies.
            </summary>
            <param name="_AssemblyDependencyDirectoryList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.PrepareAssemblyLoadInfoList(System.Collections.Generic.List{OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo})">
            <summary>
            Run the prepare process on _AssemblyLoadInfoList for all active IAssemblyProcessingComponent.
            </summary>
            <param name="_AssemblyLoadInfoList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetCompatibilityComponents``1">
            <summary>
            Returns a List of all CompatibilityComponents inherit or are TObfuscationCompatibilityComponent.
            </summary>
            <typeparam name="TObfuscationCompatibilityComponent"></typeparam>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.PostprocessAssemblyLoadInfoList(System.Collections.Generic.List{OPS.Obfuscator.Editor.Assembly.AssemblyLoadInfo})">
            <summary>
            Run the post process on _AssemblyLoadInfoList for all active IAssemblyProcessingComponent.
            </summary>
            <param name="_AssemblyLoadInfoList"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadComponents">
            <summary>
            Unload all components.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Pipeline">
            <summary>
            Pipeline for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadPipeline">
            <summary>
            Load the Obfuscator Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadPipeline">
            <summary>
            Unload the Obfuscator Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadAssemblyLoadInfos">
            <summary>
            Load all AssemblyLoadInfos.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadAssemblyDependencyDirectories">
            <summary>
            Load all the dependency directories.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadAssemblies">
            <summary>
            Prepare and loads the assemblies contained in AssemblyLoadInfoList. Important: AssemblyCache has to be loaded!
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.SaveAssemblies">
            <summary>
            Saves the assemblies from AssemblyList.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadAssemblies">
            <summary>
            Disposes all to obfuscate and helper assemblies.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.IsAssemblyInObfuscateAssemblies(System.String)">
            <summary>
            True: _AssemblyName is in the to obfuscate assemblies.
            </summary>
            <param name="_AssemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetAssemblyFromObfuscateAssemblies(System.String)">
            <summary>
            Get the AssemblyInfo, from the to obfuscate assemblies, by _AssemblyName.
            </summary>
            <param name="_AssemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadAssemblyResolver">
            <summary>
            Load the AssemblyResolver. Important: AssemblyDependencyDirectoryPathList and AssemblyLoadInfoList must be set!
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadAssemblyResolver">
            <summary>
            Disposes the AssemblyResolver.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadCache">
            <summary>
            Load the type/member caches.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetCache``1">
            <summary>
            Returns the IMemberCache for TCache.
            </summary>
            <typeparam name="TCache"></typeparam>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadCache">
            <summary>
            Unload the type and member caches.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.LoadRenameManager">
            <summary>
            Load up and setup the RenameManager.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.UnloadRenameManager">
            <summary>
            Unload the RenameManager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.GetAssembly(OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Get the AssemblyInfo, from the to obfuscate assemblies, for _TypeDefinition.
            If _TypeDefinition is not part of the to obfuscate assemblies, null will be returned. 
            </summary>
            <param name="_TypeDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.IsTypeInObfuscateAssemblies(OPS.Mono.Cecil.TypeReference)">
            <summary>
            True: _TypeReferences Scope/Assembly is in the to obfuscate assemblies.
            </summary>
            <param name="_TypeReference"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Resolve_TypeDefinition(OPS.Mono.Cecil.TypeReference)">
            <summary>
            Tries to resolve the a type in all assemblies and their dependencies.
            If this cannot be resolved, returns null!
            </summary>
            <param name="_TypeReference"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Add_TypeDefinition(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Add _TypeDefinition to the main module of _AssemblyInfo.
            Add _TypeDefinition to the TypeCache. 
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_TypeDefinition"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.Add_TypeDefinition(OPS.Obfuscator.Editor.Assembly.AssemblyInfo,OPS.Mono.Cecil.ModuleDefinition,OPS.Mono.Cecil.TypeDefinition)">
            <summary>
            Add _TypeDefinition to the _ModuleDefinition of _AssemblyInfo.
            Add _TypeDefinition to the TypeCache. 
            </summary>
            <param name="_AssemblyInfo"></param>
            <param name="_ModuleDefinition"></param>
            <param name="_TypeDefinition"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.OnLoad">
            <summary>
            Custom Load and Initialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.PostProcess(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildOutput)">
            <summary>
            Saves the assemblies if processing did not fail.
            </summary>
            <param name="_StepOutput"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep.OnUnload">
            <summary>
            Custom Unload and Deinitialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping">
            <summary>
            Represents a collection of IMemberKeyMapping for each EMemberType, to map IMemberKeys to obfuscated names.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.GetMapping(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Get the IMemberKeyMapping by _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.Add(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Add a _MemberKey with obfuscated _Name to the mapping of _MemberType. 
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <param name="_Name"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.Get(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Get the obfuscated name of _MemberKey in the mapping of _MemberType. 
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.GetAllMemberKeys(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Returns all IMemberKey sharing the same obfsucated _Name in the mapping of _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.IRenameMapping.GetAllMemberKeys(System.String)">
            <summary>
            Returns all IMemberKey sharing the same obfsucated _Name in all member types.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator">
            <summary>
            Generator used to generate a obfuscated name.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.uniqueChars">
            <summary>
            All unique charaters in this charset.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.numUniqueChars">
            <summary>
            The length of charset.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.UseCharSet(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.Charset.ACharset)">
            <summary>
            Assign a charset used for obfuscation.
            </summary>
            <param name="_Charset"></param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.UseGlobalIndexer">
            <summary>
            True: No obfuscated member will share the same name.
            False: Obfuscated member of different member types may share the same name.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.globalRenamingIndex">
            <summary>
            Global index for obfuscation.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.groupedRenamingIndexDictionary">
            <summary>
            Dictionary between member and its index.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.GetNextIndex(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Returns the next index.
            </summary>
            <param name="_MemberType"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.GetNextName(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Generate a next name for a member using a predefined pattern.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.GetNextName(System.UInt32)">
            <summary>
            Generate a next name under a specific index using a predefined pattern.
            Use with caution! Watch out for same names in the same type.
            </summary>
            <param name="_Index"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.NameGenerator.GetNextName(System.UInt32,System.String)">
            <summary>
            Generate a new name under a specific index using a predefined pattern.
            After each character a _Seperator can/will be added.
            Use with caution! Watch out for same names in the same type.
            </summary>
            <param name="_Index"></param>
            <param name="_Seperator"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping">
            <summary>
            Reprensents the Obfuscator pre version 4.0 mapping.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.Version">
            <summary>
            Always Version 3.0.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.LoadFromVersion``1(``0)">
            <summary>
            Not needed.
            </summary>
            <typeparam name="TVersionAble"></typeparam>
            <param name="_VersionAble"></param>
            <returns></returns>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.memberMappingDictionary">
            <summary>
            Dictionary of a mapping, which maps keys to obfuscated names.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.AddMapping(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping)">
            <summary>
            Add a _MemberType to _MemberKeyMapping entry.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKeyMapping"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.GetMapping(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Returns the IMemberKeyMapping belonging to _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.Add(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Not needed.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <param name="_Name"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.Get(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Not needed.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.GetAllMemberKeys(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Not needed.
            </summary>
            <param name="_MemberType"></param>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.GetAllMemberKeys(System.String)">
            <summary>
            Not needed.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV3Mapping.Deserialize(System.String)">
            <summary>
            Loads the mapping from a file content.
            </summary>
            <param name="_FileContent">The content of the file.</param>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping">
            <summary>
            Reprensents the Obfuscator after version 4.0 mapping.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.Version">
            <summary>
            Always Version 4.0.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.LoadFromVersion``1(``0)">
            <summary>
            Load this version 4.0 mapping from another older version.
            </summary>
            <typeparam name="TRenameMapping"></typeparam>
            <param name="_RenameMapping"></param>
            <returns></returns>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.memberMappingDictionary">
            <summary>
            Dictionary of a mapping, which maps keys to obfuscated names.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.AddMapping(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.MemberKeyMapping)">
            <summary>
            Add a _MemberType to _MemberKeyMapping entry.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKeyMapping"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.GetMapping(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Returns the IMemberKeyMapping belonging to _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.Add(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey,System.String,System.Boolean)">
            <summary>
            Add _MemberKey with obfuscated _Name to mapping of _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <param name="_Name"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.Add(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Mapping.IMemberKeyMapping)">
            <summary>
            Add a whole _MemberKeyMapping to IMemberKeyMapping for _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKeyMapping"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.Get(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Obfuscator.Editor.Assembly.Mono.Member.Key.IMemberKey)">
            <summary>
            Returns the obfuscated name for _MemberKey in mapping of _MemberType.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberKey"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.GetAllMemberKeys(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Returns all IMemberKey sharing the same _Name in _MemberType mapping.
            </summary>
            <param name="_MemberType"></param>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.ObfuscatorV4Mapping.GetAllMemberKeys(System.String)">
            <summary>
            Returns all IMemberKey sharing the same _Name in all MemberType to IMemberKeyMapping Mappings.
            </summary>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager">
            <summary>
            Contains the mappings, and the shall rename/not rename stuff.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.#ctor(OPS.Obfuscator.Editor.Project.PostAssemblyBuild.PostAssemblyBuildStep)">
            <summary>
            The rename manager belongs to a PostAssemblyBuildStep.
            </summary>
            <param name="_Step"></param>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.step">
            <summary>
            The used project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.Load">
            <summary>
            Load the RenameManager.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.Unload">
            <summary>
            Unload the Renamemanager.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.doNotObfuscateDictionary">
            <summary>
            Member Type, Dictionary of Original Keys and a List of not obfuscation cause.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.AddDoNotObfuscate(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Mono.Cecil.IMemberDefinition,System.String)">
            <summary>
            Do not obfuscate _MemberDefinition of _MemberType with _Cause of not obfuscation.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <param name="_Cause"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetDoNotObfuscate(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Returns if the _MemberDefinition of _MemberType will be not obfuscated.
            True: Getting NOT obfuscated.
            False: Getting obfuscated.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetDoNotObfuscateCause(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Returns the list of not obfuscation cause.
            If there is no cause null will be returned.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetCountOfDoNotObfuscate(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType)">
            <summary>
            Returns the count of the to not obfuscate member per type.
            </summary>
            <param name="_MemberType"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.OriginalMapping">
            <summary>
            The original mapping (from original key to name) of the assembly members.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.CurrentMapping">
            <summary>
            The current obfuscation mapping.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.LoadedMapping">
            <summary>
            The loaded obfuscation mapping.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.SetupOriginalMapping">
            <summary>
            Setup the original mapping.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetUniqueObfuscatedName(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Mono.Cecil.IMemberDefinition,System.Int32)">
            <summary>
            Get a unique name for _MemberDefinition of _MemberType.
            Will check the loaded, current or original mapping with _Tries for a unique name.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <param name="_Tries"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.AddObfuscated(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Mono.Cecil.IMemberDefinition,System.String)">
            <summary>
            Add _ObfuscatedName for _MemberDefinition of _MemberType to the current mapping. 
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <param name="_ObfuscatedName"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.GetObfuscated(OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,OPS.Mono.Cecil.IMemberDefinition)">
            <summary>
            Returns the obfuscated name of _MemberDefinition of _MemberType.
            The method first checks in the current mapping, if there is a obfuscated name, and returns it.
            If there is none, it checks the loaded mapping and returns it.
            If non found, returns null.
            </summary>
            <param name="_MemberType"></param>
            <param name="_MemberDefinition"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.LoadMappingFromFile(System.String)">
            <summary>
            Load a mapping from a file.
            </summary>
            <param name="_FilePath">The full or relative path to the mapping file.</param>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.CVersionParameter">
            <summary>
            When loading the mapping from an url, the version parameter in the url is replaced with the current version of the app.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.LoadMappingFromUrl(System.String)">
            <summary>
            Load a mapping from an url. The url must return the mapping as json.
            </summary>
            <param name="_Url">The url to the mapping file.</param>
            <remarks>
            You can use optional the {version} parameter in the url to replace it with the current version of the app (Application.version).
            </remarks>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.LoadMapping(System.String)">
            <summary>
            Load a mapping from a string.
            </summary>
            <param name="_FileContent">The content of the mapping file.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.SaveMappingToFile(System.String)">
            <summary>
            Save the current mapping to a file.
            </summary>
            <param name="_FilePath">The full or relative path to the mapping file.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.SaveMappingToUrl(System.String)">
            <summary>
            Save the current mapping to an url. The url must accept a post request with the mapping as json.
            </summary>
            <param name="_Url">The url to the mapping file.</param>
            <exception cref="T:System.Exception">Throws an exception if the request was not successful.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.SaveMappingToTempPath">
            <summary>
            Save the current mapping to the temp path.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.IsNameFree(OPS.Mono.Cecil.IMemberDefinition,OPS.Obfuscator.Editor.Assembly.Mono.Member.EMemberType,System.String)">
            <summary>
            Returns true if the _Name is free and not used either in the loaded, current or original mapping.
            </summary>
            <param name="_MemberDefinition"></param>
            <param name="_MemberType"></param>
            <param name="_Name"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssemblyBuild.Renaming.RenameManager.NameGenerator">
            <summary>
            Used to generate obfuscated names.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssetsBuild.DataContainer.PostAssetsBuildDataContainer">
            <summary>
            Data container for the post assets build process.
            Stores all components and data needed for processing Unity assets after assembly obfuscation.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.DataContainer.PostAssetsBuildDataContainer.ComponentList">
            <summary>
            List of all post assets build pipeline components.
            These components handle updating Unity assets to match obfuscated code.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.APostAssetsBuildComponent">
            <summary>
            Abstract base class for components in the post assets build pipeline.
            Provides common functionality for components that process Unity assets after assembly obfuscation.
            These components are responsible for updating asset references to match obfuscated types and members.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.APostAssetsBuildComponent.Pipeline">
            <summary>
            The post assets build pipeline this component belongs to.
            Provides access to the pipeline for coordination between components.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.APostAssetsBuildComponent.Step">
            <summary>
            Returns the post assets build step that this pipeline belongs to.
            Provides access to the step for coordination and data sharing between components.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.APostAssetsBuildComponent.OnPostAssetsBuild">
            <summary>
            Called after the project assets are processed during the build.
            Implement this method to perform asset-specific processing after assembly obfuscation.
            </summary>
            <returns>True if the post assets build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.Helper.ComponentHelper">
            <summary>
            Component helper for the post build step.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.Helper.ComponentHelper.GetComponents">
            <summary>
            Returns all post build components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.Helper.ComponentHelper.GetPreBuildPluginComponents">
            <summary>
            Returns a list of all user plugins.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.IPostAssetsBuildComponent">
            <summary>
            Interface for components in the post assets build pipeline.
            Defines the contract for components that process Unity assets after assembly obfuscation.
            Implementations handle updating asset references to match obfuscated types and members.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.IPostAssetsBuildComponent.OnPostAssetsBuild">
            <summary>
            Called after the project assets are processed during the build.
            Implement this method to perform asset-specific processing after assembly obfuscation.
            </summary>
            <returns>True if the post assets build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.IPostAssetsBuildPluginComponent">
            <summary>
            Interface over a custom post assets build plugin component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.MonobehaviourObfuscationMapping">
            <summary>
            A mapping of the original monobehaviour type to the obfuscated monobehaviour type.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.AssetsAreBundled">
            <summary>
            If the game is compressed, the assets are bundled.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetBuildAssetsDirectory_StagingArea">
            <summary>
            Returns the directory to the stagíng area in the tmp directory.
            </summary>
            <returns>The directory to the stagíng area in the tmp directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetBuildAssetsDirectory_StagingArea_Target">
            <summary>
            Returns the directory to the build assets in the tmp directory. This is the directory where the globalgamemanagers.assets or data.unity3d file is located.
            </summary>
            <returns>The directory to the build assets in the tmp directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetBuildAssetsDirectory_PlayerDataCache">
            <summary>
            Returns the directory to the player data cache in the library directory.
            </summary>
            <returns>The directory to the player data cache in the library directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetBuildAssetsDirectory_PlayerDataCache_Target">
            <summary>
            Returns the directory to the build assets in the library directory. This is the directory where the globalgamemanagers.assets or data.unity3d file is located.
            </summary>
            <returns>The directory to the build assets in the library directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.TryOverrideGlobalGameManagersAssets(System.String)">
            <summary>
            Tries to override the globalgamemanagers.assets file with the obfuscated MonoBehaviours.
            </summary>
            <param name="_Path">The path to the globalgamemanagers.assets file.</param>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.TryOverrideDataUnity3d(System.String)">
            <summary>
            Tries to override the data.unity3d file with the obfuscated MonoBehaviours.
            </summary>
            <param name="_Path">The path to the data.unity3d file.</param>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.LogAssetsFiles(System.String)">
            <summary>
            Logs all asset files found in the specified directory.
            This method retrieves all relative file paths within the given directory
            and appends a debug-level report entry listing the found files.
            </summary>
            <param name="_Path">The root directory to search for asset files.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.OnPrePipelineProcess(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Preprocess the component using the passed step input.
            Reads the monobehaviour obfuscation mapping from the step input.
            </summary>
            <param name="_StepInput">The step input to preprocess.</param>
            <returns>True if the preprocessing was successful, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.Component.MonoBehaviourAssetsComponent.OnPostAssetsBuild">
            <summary>
            Obfuscated the MonoBehaviours in the globalgamemanagers.assets or data.unity3d file.
            </summary>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.PostAssetsBuildPipeline.Step">
            <summary>
            Project this Pipeline belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.PostAssetsBuildPipeline.DataContainer">
            <summary>
            DataContainer of the Project.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.PostAssetsBuildPipeline.Settings">
            <summary>
            Settings of the Project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.Pipeline.PostAssetsBuildPipeline.OnProcessPipeline">
            <summary>
            Processes the whole post build pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildOutput">
            <summary>
            Output object for the post assets build step.
            Extends the PostAssemblyBuildOutput to include results from processing Unity assets.
            Contains information about the success or failure of updating Unity assets to match obfuscated code.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep">
            <summary>
            Step responsible for processing Unity assets after assembly obfuscation.
            Updates asset references to match obfuscated types and members.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.#ctor(OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Initializes a new instance of the PostAssetsBuildStep class.
            </summary>
            <param name="_EditorSettings">The editor settings to use.</param>
            <param name="_BuildSettings">The build settings to use.</param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.Name">
            <summary>
            Name of the step.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.EditorSettings">
            <summary>
            Settings used for the editor.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.BuildSettings">
            <summary>
            Settings used for the current build.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.DataContainer">
            <summary>
            Shared data container for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.LoadDataContainer">
            <summary>
            Load the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.UnloadDataContainer">
            <summary>
            Unload the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.Settings">
            <summary>
            Shared settings for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.LoadObfuscatorSettings">
            <summary>
            Load the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.UnloadObfuscatorSettings">
            <summary>
            Unload the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.LoadComponents">
            <summary>
            Loads the components if they are not already loaded.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.UnloadComponents">
            <summary>
            Unload all components.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.Pipeline">
            <summary>
            Pipeline for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.LoadPipeline">
            <summary>
            Load the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.UnloadPipeline">
            <summary>
            Unload the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.OnLoad">
            <summary>
            Custom Load and Initialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostAssetsBuild.PostAssetsBuildStep.OnUnload">
            <summary>
            Custom Unload and Deinitialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostBuild.DataContainer.PostBuildDataContainer">
            <summary>
            Data container for the post build process.
            Stores all components and data needed for final processing after assembly and asset obfuscation.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.DataContainer.PostBuildDataContainer.ComponentList">
            <summary>
            List of all post build pipeline components.
            These components handle final processing and cleanup after assembly and asset obfuscation.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.APostBuildComponent">
            <summary>
            Abstract base class for components in the post build pipeline.
            Provides common functionality for components that perform final processing after assembly and asset obfuscation.
            These components handle cleanup, reporting, and any final tasks required to complete the obfuscation process.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.APostBuildComponent.Pipeline">
            <summary>
            The post build pipeline this component belongs to.
            Provides access to the pipeline for coordination between components.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.APostBuildComponent.Step">
            <summary>
            Returns the post build step that this pipeline belongs to.
            Provides access to the step for coordination and data sharing between components.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.APostBuildComponent.OnPostBuild">
            <summary>
            Called after the project has been built and all assembly and asset obfuscation is complete.
            Implement this method to perform final processing, cleanup, or reporting tasks.
            </summary>
            <returns>True if the post build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Helper.ComponentHelper">
            <summary>
            Component helper for the post build step.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Helper.ComponentHelper.GetComponents">
            <summary>
            Returns all post build components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.Helper.ComponentHelper.GetPreBuildPluginComponents">
            <summary>
            Returns a list of all user plugins.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.IPostBuildComponent">
            <summary>
            Interface for components in the post build pipeline.
            Defines the contract for components that perform final processing after assembly and asset obfuscation.
            Implementations handle cleanup, reporting, and any final tasks required to complete the obfuscation process.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.IPostBuildComponent.OnPostBuild">
            <summary>
            Called after the project has been built and all assembly and asset obfuscation is complete.
            Implement this method to perform final processing, cleanup, or reporting tasks.
            </summary>
            <returns>True if the post build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.IPostBuildPluginComponent">
            <summary>
            Interface over a custom pre build plugin component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.MonobehaviourObfuscationMapping">
            <summary>
            A mapping of the original monobehaviour type to the obfuscated monobehaviour type.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.AssetsAreBundled">
            <summary>
            If the game is compressed, the assets are bundled.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetBuildAssetsDirectory">
            <summary>
            Returns the directory to the build assets. This is the directory where the globalgamemanagers.assets or data.unity3d file is located.
            </summary>
            <returns>The directory to the build assets.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetBuildAssetsDirectory_Windows">
            <summary>
            Returns the directory to the build assets for windows.
            </summary>
            <returns>The directory to the build assets for windows.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetBuildAssetsDirectory_Linux">
            <summary>
            Returns the directory to the build assets for linux.
            </summary>
            <returns>The directory to the build assets for linux.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetBuildAssetsDirectory_MacOS">
            <summary>
            Returns the directory to the build assets for mac.
            </summary>
            <returns>The directory to the build assets for mac.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetGlobalGameManagersAssetsPath">
            <summary>
            Returns the path to the globalgamemanagers.assets file.
            </summary>
            <returns>The path to the globalgamemanagers.assets file.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.GetDataUnity3dPath">
            <summary>
            Returns the path to the data.unity3d file.
            </summary>
            <returns>The path to the data.unity3d file.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.TryOverrideGlobalGameManagersAssets(System.String)">
            <summary>
            Tries to override the globalgamemanagers.assets file with the obfuscated MonoBehaviours.
            </summary>
            <param name="_Path">The path to the globalgamemanagers.assets file.</param>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.TryOverrideDataUnity3d(System.String)">
            <summary>
            Tries to override the data.unity3d file with the obfuscated MonoBehaviours.
            </summary>
            <param name="_Path">The path to the data.unity3d file.</param>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.OnPrePipelineProcess(OPS.Editor.Project.Step.IStepInput)">
            <summary>
            Preprocess the component using the passed step input.
            Reads the monobehaviour obfuscation mapping from the step input.
            </summary>
            <param name="_StepInput">The step input to preprocess.</param>
            <returns>True if the preprocessing was successful, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.Component.MonoBehaviourAssetsComponent.OnPostBuild">
            <summary>
            Obfuscated the MonoBehaviours in the globalgamemanagers.assets or data.unity3d file.
            </summary>
            <returns>True if successful; false otherwise.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.PostBuildPipeline.Step">
            <summary>
            Project this Pipeline belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.PostBuildPipeline.DataContainer">
            <summary>
            DataContainer of the Project.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.PostBuildPipeline.Settings">
            <summary>
            Settings of the Project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.Pipeline.PostBuildPipeline.OnProcessPipeline">
            <summary>
            Processes the whole post build pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput">
            <summary>
            Output object for the post build step.
            Contains the results of the final processing after assembly and asset obfuscation.
            Provides data about the success or failure of the overall obfuscation process.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Data">
            <summary>
            Stores dynamic data in a string key and object value format.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Has(System.String)">
            <summary>
            Returns true if the data container has data for a key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Add _Data for _Key.
            If the _Key already exists, decide if it should be overriden.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Data"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Get``1(System.String,``0)">
            <summary>
            Return the data at _Key. If the data does not exist, return _Default.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildOutput.Failed">
            <summary>
            Returns if the pipeline processing failed!
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep">
            <summary>
            Step responsible for final processing after both assembly and asset obfuscation.
            Performs any final cleanup or processing tasks required after the build is complete.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.#ctor(OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Initializes a new instance of the PostBuildStep class.
            </summary>
            <param name="_EditorSettings">The editor settings to use.</param>
            <param name="_BuildSettings">The build settings to use.</param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.Name">
            <summary>
            Name of the step.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.EditorSettings">
            <summary>
            Settings used for the editor.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.BuildSettings">
            <summary>
            Settings used for the current build.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.DataContainer">
            <summary>
            Shared data container for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.LoadDataContainer">
            <summary>
            Load the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.UnloadDataContainer">
            <summary>
            Unload the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.Settings">
            <summary>
            Shared settings for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.LoadObfuscatorSettings">
            <summary>
            Load the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.UnloadObfuscatorSettings">
            <summary>
            Unload the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.LoadComponents">
            <summary>
            Loads the components if they are not already loaded.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.UnloadComponents">
            <summary>
            Unload all components.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.Pipeline">
            <summary>
            Pipeline for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.LoadPipeline">
            <summary>
            Load the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.UnloadPipeline">
            <summary>
            Unload the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.OnLoad">
            <summary>
            Custom Load and Initialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PostBuild.PostBuildStep.OnUnload">
            <summary>
            Custom Unload and Deinitialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.DataContainer.PreBuildDataContainer">
            <summary>
            Data container for the pre-build process.
            Stores all components and data needed for analyzing the project before obfuscation begins.
            Contains information about assets, scripts, and components that will be needed during obfuscation.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.DataContainer.PreBuildDataContainer.ComponentList">
            <summary>
            List of all pre-build pipeline components.
            These components analyze the project and gather information needed for the obfuscation process.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.DataContainer.PreBuildDataContainer.UnityAssetCache">
            <summary>
            Cache of all Unity assets needed by asset processing components.
            Provides efficient access to asset data for analysis during the pre-build phase.
            Contains assets like animations, prefabs, and scripts that need to be analyzed before obfuscation.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.APreBuildComponent">
            <summary>
            Abstract base class for components in the pre-build pipeline.
            Provides common functionality for components that analyze the project before obfuscation begins.
            These components gather information about assets, scripts, and components that will be needed during obfuscation.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.APreBuildComponent.Pipeline">
            <summary>
            The pre-build pipeline this component belongs to.
            Provides access to the pipeline for coordination between components.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.APreBuildComponent.Step">
            <summary>
            Returns the pre-build step that this pipeline belongs to.
            Provides access to the step for coordination and data sharing between components.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.APreBuildComponent.OnPreBuild">
            <summary>
            Called before the project is built and obfuscation begins.
            Implement this method to analyze the project and gather information needed for obfuscation.
            </summary>
            <returns>True if the pre-build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent">
            <summary>
            Analyse model files, animation clips and controllers for animation methods and classes.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.CAnimation_ReferencedAnimationMethodHashSet">
            <summary>
            The step output data key for the ReferencedAnimationMethodHashSet.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.ReferencedAnimationMethodHashSet">
            <summary>
            A list of all references animation methods.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.CAnimation_ReferencedStateMachineBehaviourList">
            <summary>
            The step output data key for the ReferencedStateMachineBehaviourList.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.ReferencedStateMachineBehaviourList">
            <summary>
            A list of all references StateMachineBehaviour types.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.modelFileExtension">
            <summary>
            Extensions of supported model files.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.animationFileExtension">
            <summary>
            Extensions of supported animation files.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.controllerFileExtension">
            <summary>
            Extensions of supported controller files.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.AssetExtensionsToProcess">
            <summary>
            Returns all asset extensions to process by this component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnAnalyse_Assets(OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Process the asset and search for animation methods.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnAnalyse_Assets_ModelFile(OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Analyse model files and search for animation methods.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnAnalyse_Assets_AnimationClip(OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Analyse animation clip files and search for animation methods.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.GetMethodsInAnimationClip(UnityEngine.AnimationClip)">
            <summary>
            Returns a duplicate free list of methods in _AnimationClip.
            </summary>
            <param name="_AnimationClip"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnAnalyse_Assets_AnimationController(OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Analyse animation controller files and search for StateMachineBehaviours.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnProcess_Assets(OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Does nothing.
            </summary>
            <param name="_UnityAssetReference">The asset reference to process.</param>
            <returns>True if the asset was processed successfully; otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseAnimationComponent.OnPostPipelineProcess(OPS.Editor.Project.Step.IStepOutput)">
            <summary>
            After the pipeline process, add the found animation methods and the found animator classes to the datacontainer.
            </summary>
            <param name="_StepOutput"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IAssetProcessingComponent">
            <summary>
            A interface for a component, which processes assets.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IAssetProcessingComponent.AssetExtensionsToProcess">
            <summary>
            Return the extensions of assets, should be processed by this component.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IAssetProcessingComponent.OnAnalyse_Assets(OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Analyse Assets pre build.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IAssetProcessingComponent.OnProcess_Assets(OPS.Obfuscator.Editor.Assets.Unity.UnityAssetReference)">
            <summary>
            Process Assets pre build but after 'OnAnalyse_Assets(...)'.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent">
            <summary>
            Analyse or manipulate a Unity Component pre build.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent.ProcessScenes">
            <summary>
            Get if the component should process scenes.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent.ProcessPrefabs">
            <summary>
            Get if the component should process prefabs.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent.OnAnalyse_Component(UnityEngine.Component)">
            <summary>
            Analyse a Unity Component before the build starts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IComponentProcessingComponent.OnProcess_Component(UnityEngine.Component)">
            <summary>
            Process a Unity Component before the build starts but directly after 'OnAnalyse_Component(...)'.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.ProcessScenes">
            <summary>
            The component is not required at the moment, so it does not need to process scenes.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.ProcessPrefabs">
            <summary>
            The component is not required at the moment, so it does not need to process prefabs.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.CReferencedMonoScriptTypeListKey">
            <summary>
            The step output data key for the ReferencedMonoScriptTypeList.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseMonoScriptComponent.ReferencedMonoScriptTypeList">
            <summary>
            A list of all referenced types of unity mono scripts in the scene and prefabs.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent">
            <summary>
            This component analyses Unity Components for Unity Events.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.Name">
            <summary>
            Name of the component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.Description">
            <summary>
            Description, descriping what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.ShortDescription">
            <summary>
            Short description, descriping short what this component does.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.IsActive">
            <summary>
            Return whether the component is activated or deactivated for the pipeline processing.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnPreBuild">
            <summary>
            Does nothing.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.ProcessScenes">
            <summary>
            Process scenes for Unity Events if enabled. Default is true.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.ProcessPrefabs">
            <summary>
            Process prefabs for Unity Events if enabled. Default is true.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.CReferencedEventMethodHashSet">
            <summary>
            The step output data key for the ReferencedEventMethodHashSet.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.ReferencedEventMethodHashSet">
            <summary>
            A list of all references event methods.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.alreadySearchedObjects">
            <summary>
            Contains a list of already searched objects as hash, so they will not be iterated twice.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnAnalyse_Component(UnityEngine.Component)">
            <summary>
            Searchs the passed _Component for Unity Events, to later skip their refered method names.
            </summary>
            <param name="_Component"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.GetUnityEvents(System.Object,System.Int32)">
            <summary>
            Search the passed _Object for Unity Events.
            </summary>
            <param name="_Object">The object to search for Unity Events.</param>
            <param name="_Depth">The depth of the search. If zero is reached, it will return an empty list.</param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnAnalyse_Component_IterateEvent(UnityEngine.Component,UnityEngine.Events.UnityEventBase)">
            <summary>
            Adds the found methods in the passed _UnityEventBase to the ReferencedEventMethodHashSet.
            </summary>
            <param name="_Component"></param>
            <param name="_UnityEventBase"></param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnProcess_Component(UnityEngine.Component)">
            <summary>
            Does nothing.
            </summary>
            <param name="_Component"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.AnalyseUnityEventComponent.OnPostPipelineProcess(OPS.Editor.Project.Step.IStepOutput)">
            <summary>
            Stores the ReferencedEventMethodHashSet in the _StepOutput.
            </summary>
            <param name="_StepOutput"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.Helper.ComponentHelper">
            <summary>
            Component helper for the pre build step.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.Helper.ComponentHelper.GetComponents">
            <summary>
            Returns all pre build components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.Helper.ComponentHelper.GetPreBuildPluginComponents">
            <summary>
            Returns a list of all user plugins.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IPreBuildComponent">
            <summary>
            Interface for components in the pre-build pipeline.
            Defines the contract for components that analyze the project before obfuscation begins.
            Implementations gather information about assets, scripts, and components that will be needed during obfuscation.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IPreBuildComponent.OnPreBuild">
            <summary>
            Called before the project is built and obfuscation begins.
            Implement this method to analyze the project and gather information needed for obfuscation.
            </summary>
            <returns>True if the pre-build operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.Component.IPreBuildPluginComponent">
            <summary>
            Interface over a custom pre build plugin component.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Step">
            <summary>
            Project this Pipeline belongs too.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.DataContainer">
            <summary>
            DataContainer of the Project.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Settings">
            <summary>
            Settings of the Project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.OnProcessPipeline">
            <summary>
            Processes the whole pre build pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Assets_Analyse">
            <summary>
            The second step of the pipeline is to analyse all assets from the asset cache.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Assets_Process">
            <summary>
            The third step of the pipeline is to process all assets from the asset cache. Processing means to edit the assets if required for the obfuscation.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Component_Analyse_And_Manipulate(System.Collections.Generic.List{UnityEngine.Component})">
            <summary>
            Analyse and manipulate all passed components.
            </summary>
            <param name="_ComponentList">The list of components to analyse and manipulate.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Component_IterateBuildSceneComponents">
            <summary>
            The fourth step of the pipeline is to iterate all components in the scenes included in the build settings and analyses and edits them, if the obfuscation requires it.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Process_Component_IteratePrefabComponents">
            <summary>
            The fifth step of the pipeline is to iterate all components in the prefabs in the project and analyses and edits them, if the obfuscation requires it.
            </summary>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Helper_Scene_GetLoadedScenes">
            <summary>
            Get all scenes currently open in the editor.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Helper_Scene_GetScenesInBuild">
            <summary>
            Get all enabled scenes in Build Settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Helper_Scene_LoadScenes(System.Collections.Generic.List{System.String})">
            <summary>
            Load multiple scenes in the editor.
            </summary>
            <param name="_Scenes">The scenes to load.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.Pipeline.PreBuildPipeline.Helper_Scene_GetAllComponentsInScene(UnityEngine.SceneManagement.Scene)">
            <summary>
            Returns a list of all components in _Scene.
            </summary>
            <param name="_Scene">The scene to get the components from.</param>
            <returns>A list of all components in _Scene.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput">
            <summary>
            Input object for the pre build step.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput.Data">
            <summary>
            Stores dynamic data in a string key and object value format.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput.Has(System.String)">
            <summary>
            Returns true if the data container has data for a key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Add _Data for _Key.
            If the _Key already exists, decide if it should be overriden.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Data"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildInput.Get``1(System.String,``0)">
            <summary>
            Return the data at _Key. If the data does not exist, return _Default.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput">
            <summary>
            Output object for the pre build step.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Data">
            <summary>
            Stores dynamic data in a string key and object value format.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Has(System.String)">
            <summary>
            Returns true if the data container has data for a key.
            </summary>
            <param name="_Key"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Add``1(System.String,``0,System.Boolean)">
            <summary>
            Add _Data for _Key.
            If the _Key already exists, decide if it should be overriden.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Data"></param>
            <param name="_Override"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Get``1(System.String,``0)">
            <summary>
            Return the data at _Key. If the data does not exist, return _Default.
            </summary>
            <typeparam name="TDataType"></typeparam>
            <param name="_Key"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildOutput.Failed">
            <summary>
            Returns if the pipeline processing failed!
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep">
            <summary>
            Step responsible for analyzing the project before obfuscation begins.
            Gathers information about assets, scripts, and components that will be needed during obfuscation.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.#ctor(OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Initializes a new instance of the PreBuildStep class.
            </summary>
            <param name="_EditorSettings">The editor settings to use.</param>
            <param name="_BuildSettings">The build settings to use.</param>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.Name">
            <summary>
            Name of the step.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.EditorSettings">
            <summary>
            Settings used for the editor.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.BuildSettings">
            <summary>
            Settings used for the current build.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.DataContainer">
            <summary>
            Shared data container for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadDataContainer">
            <summary>
            Load the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadDataContainer">
            <summary>
            Unload the DataContainer.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.Settings">
            <summary>
            Shared settings for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadObfuscatorSettings">
            <summary>
            Load the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadObfuscatorSettings">
            <summary>
            Unload the Obfuscator Settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadComponents">
            <summary>
            Loads the components if they are not already loaded.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadComponents">
            <summary>
            Unload all components.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.Pipeline">
            <summary>
            Pipeline for the project.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadPipeline">
            <summary>
            Load the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadPipeline">
            <summary>
            Unload the PreBuild Pipeline.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.GetComponentAssetProcessingExtensionList">
            <summary>
            Get the extensions should be processed by the IAssetProcessingComponent.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.LoadAssetCache">
            <summary>
            Loads the Unity asset cache with assets that need to be processed.
            </summary>
            <returns>True if the asset cache was successfully loaded; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.UnloadAssetCache">
            <summary>
            Unloads the Unity asset cache.
            </summary>
            <returns>True if the asset cache was successfully unloaded; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.OnLoad">
            <summary>
            Custom Load and Initialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Project.PreBuild.PreBuildStep.OnUnload">
            <summary>
            Custom Unload and Deinitialize of the Project.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Platform.Build.DefaultBuildPlatform">
            <summary>
            Default implementation of a build platform for the obfuscator.
            Provides platform-specific settings and behaviors.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Build.DefaultBuildPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process.
            </summary>
            <returns>A list of additional directory paths for assembly resolution.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Build.DefaultBuildPlatform.ModifiedSettings(OPS.Obfuscator.Editor.Settings.ObfuscatorSettings)">
            <summary>
            Modifies the obfuscator settings based on the platform-specific requirements.
            In the free version, this disables certain obfuscation features.
            </summary>
            <param name="_Settings">The obfuscator settings to modify.</param>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Build.DefaultBuildPlatform.ToString">
            <summary>
            Returns a string representation of the build platform.
            </summary>
            <returns>The name of the build platform.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Platform.Build.WindowsStoreAppBuildPlatform">
            <summary>
            Build platform implementation for Windows Store Apps (UWP).
            Provides platform-specific settings and behaviors for the Windows Store platform.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Build.WindowsStoreAppBuildPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process.
            For Windows Store Apps, this includes various .NET and UWP-specific directories.
            </summary>
            <returns>A list of additional directory paths for assembly resolution.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Build.WindowsStoreAppBuildPlatform.ToString">
            <summary>
            Returns a string representation of the Windows Store App build platform.
            </summary>
            <returns>The name of the build platform.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Platform.Editor.DefaultEditorPlatform">
            <summary>
            Default implementation of an editor platform for the obfuscator.
            Provides platform-specific settings and behaviors for the Unity Editor.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Editor.DefaultEditorPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process.
            </summary>
            <returns>A list of additional directory paths for assembly resolution.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Editor.DefaultEditorPlatform.ToString">
            <summary>
            Returns a string representation of the editor platform.
            </summary>
            <returns>The name of the editor platform.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Platform.Editor.EEditorPlatform">
            <summary>
            Enumeration of platforms the Unity editor can run on.
            Used to identify the current operating system for platform-specific operations.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Platform.Editor.LinuxEditorPlatform">
            <summary>
            Linux-specific implementation of the editor platform.
            Provides Linux-specific paths and behaviors for the obfuscator when running in the Linux Unity editor.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Editor.LinuxEditorPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process on Linux.
            Includes the Unity Editor's Managed directory.
            </summary>
            <returns>A list of additional directory paths for assembly resolution specific to Linux.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Editor.LinuxEditorPlatform.ToString">
            <summary>
            Returns a string representation of the Linux editor platform.
            </summary>
            <returns>The name of the editor platform.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Platform.Editor.MacEditorPlatform">
            <summary>
            Mac-specific implementation of the editor platform.
            Provides Mac-specific paths and behaviors for the obfuscator when running in the macOS Unity editor.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Editor.MacEditorPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process on macOS.
            Includes the Unity Editor's Managed directory.
            </summary>
            <returns>A list of additional directory paths for assembly resolution specific to macOS.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Editor.MacEditorPlatform.ToString">
            <summary>
            Returns a string representation of the Mac editor platform.
            </summary>
            <returns>The name of the editor platform.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Platform.Editor.WindowsEditorPlatform">
            <summary>
            Windows-specific implementation of the editor platform.
            Provides Windows-specific paths and behaviors for the obfuscator when running in the Windows Unity editor.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Editor.WindowsEditorPlatform.AdditionalAssemblyResolvingDirectories">
            <summary>
            Gets additional directories to search for assemblies during the resolution process on Windows.
            Includes the Unity Editor's Managed directory.
            </summary>
            <returns>A list of additional directory paths for assembly resolution specific to Windows.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Editor.WindowsEditorPlatform.ToString">
            <summary>
            Returns a string representation of the Windows editor platform.
            </summary>
            <returns>The name of the editor platform.</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Platform.Helper.EditorPlatformHelper">
            <summary>
            Helper class for determining and working with the current editor platform.
            Provides utility methods to detect the operating system the Unity editor is running on.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Platform.Helper.EditorPlatformHelper.RunningPlatform">
            <summary>
            Detects and returns the current operating system platform the Unity editor is running on.
            Uses environment and directory checks to accurately identify the platform.
            </summary>
            <returns>The detected editor platform (Windows, Mac, or Linux).</returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Serialization.Unity.Helper.SerializedPropertyHelper">
            <summary>
            Helper class for Unity SerializedProperties.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Serialization.Unity.Helper.SerializedPropertyHelper.GetAllMonoScriptReferences(UnityEngine.Object)">
            <summary>
            Returns all MonoScript references in _Object without duplicates.
            </summary>
            <param name="_Object"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Serialization.Unity.Helper.SerializedPropertyHelper.SearchVariablesWithSerializedObject(UnityEngine.Object)">
            <summary>
            Search through variables of an object with SerializedObject.
            Returns found MonoScripts.
            </summary>
            <param name="_Object"></param>
            <returns></returns>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings">
            <summary>
            Settings class for the obfuscator that can be serialized to and from JSON.
            Contains all configuration options for the obfuscation process.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Global_Enable_Obfuscation">
            <summary>
            Setting key for the global obfuscation enable/disable option.
            </summary>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Global_Obfuscator_Version_Value">
            <summary>
            Current version of the obfuscator.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Version">
            <summary>
            Obfuscator Settings Version.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.LoadFromVersion``1(``0)">
            <summary>
            Loads settings from another version of the settings.
            </summary>
            <typeparam name="TVersionAble">The type of the versioned object to load from.</typeparam>
            <param name="_VersionAble">The versioned object to load from.</param>
            <returns>True if the settings were successfully loaded; otherwise, false.</returns>
        </member>
        <member name="F:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.componentSettings_Array">
            <summary>
            All Component Settings.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Get_Or_Create_ComponentSettings(System.String)">
            <summary>
            Get or Create and Get the ComponentSettings with _Settings_Name.
            </summary>
            <param name="_ComponentSettings_Name"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Get_ComponentSettings_As_Bool(System.String,System.String,System.Boolean)">
            <summary>
            Return _Setting as boolean from ComponentSettings with name _ComponentSettings_Name.
            </summary>
            <param name="_ComponentSettings_Name"></param>
            <param name="_Setting"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Get_ComponentSettings_As_String(System.String,System.String,System.String)">
            <summary>
            Return _Setting as string from ComponentSettings with name _ComponentSettings_Name.
            </summary>
            <param name="_ComponentSettings_Name"></param>
            <param name="_Setting"></param>
            <param name="_Default"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Get_ComponentSettings_As_Array(System.String,System.String)">
            <summary>
            Return _Setting as array from ComponentSettings with name _ComponentSettings_Name.
            </summary>
            <param name="_ComponentSettings_Name"></param>
            <param name="_Setting"></param>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.GetSettingsFilePath">
            <summary>
            Returns the file path of the setting file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Save">
            <summary>
            Stores the settings to a file.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Settings.ObfuscatorSettings.Load">
            <summary>
            Loads the settings from a file.
            If the files does not exists, returns an empty default setting.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings">
            <summary>
            Obfuscator unity build settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.IsDevelopmentBuild">
            <summary>
            The build is a development build.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.IsStandaloneBuildTarget">
            <summary>
            Returns if is a standalone build target (Windows, Linux, OSX).
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.IsMobileBuildTarget">
            <summary>
            Returns if is a mobile build target (Android, iOS).
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.IsIOSBuildTarget">
            <summary>
            Returns if is an iOS build target.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.BuildPlatform">
            <summary>
            The platform built to.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.AssemblyDependencyDirectoryPathList">
            <summary>
            Additional dependencies. Enter the full path of the directory of the dependency.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings.AssemblyLoadInfoList">
            <summary>
            Assemblies used in the obfuscation process.
            Either you can add all the assemblies you want to obfuscate here,
            or the obfuscator adds them based on the obfuscation settings.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings">
            <summary>
            Obfuscator Editor Settings.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings.EditorPlatform">
            <summary>
            Active editor platform.
            </summary>
        </member>
        <member name="T:OPS.Obfuscator.Editor.Obfuscator">
            <summary>
            The main entry point and controller for the Unity code obfuscation process.
            Manages the complete obfuscation workflow including pre-build, assembly processing, 
            asset updates, and post-build operations.
            Implements the AProject base class to utilize the project's step-based execution model.
            </summary>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Obfuscator.Singleton">
            <summary>
            Gets or sets the singleton instance of the Obfuscator.
            A new instance should be initialized for each build to ensure a clean state.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.#cctor">
            <summary>
            Static constructor that initializes the Obfuscator singleton instance.
            Called automatically when the Obfuscator class is first accessed.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.Init">
            <summary>
            Initializes the Obfuscator by creating a new singleton instance.
            Can be called explicitly to reset the obfuscator state.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.LoadEditorPlatform">
            <summary>
            Creates and configures the appropriate editor platform implementation based on the current operating system.
            Supports Windows, Mac, and Linux platforms with specialized implementations.
            </summary>
            <returns>A platform-specific editor platform implementation.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.LoadBuildPlatform(UnityEditor.BuildTarget)">
            <summary>
            Creates and configures the appropriate build platform implementation based on the Unity build target.
            Provides specialized handling for specific platforms like Windows Store Apps.
            </summary>
            <param name="_BuildTarget">The Unity build target to create a platform implementation for.</param>
            <returns>A build target-specific platform implementation.</returns>
        </member>
        <member name="P:OPS.Obfuscator.Editor.Obfuscator.Report">
            <summary>
            Gets or sets the active report for the obfuscation process.
            Provides a centralized logging mechanism accessible throughout the obfuscation process.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.GetReportDirectoryPath">
            <summary>
            Gets the default directory path where obfuscation log files are stored.
            </summary>
            <returns>The full path to the obfuscator log directory.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.GetReportFilePath">
            <summary>
            Determines the appropriate file path for the obfuscation log file.
            Attempts to use a custom path from settings if configured, falling back to default or temporary paths if needed.
            </summary>
            <returns>The full path where the obfuscation log file should be saved.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.RemoveReportFile">
            <summary>
            Removes any existing report file and its associated meta file.
            Ensures that each obfuscation run creates a fresh log file.
            </summary>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.ValidateReportPath(System.String)">
            <summary>
            Validates whether a file path is valid on the current system.
            Checks if the path can be used to create a FileInfo object without exceptions.
            </summary>
            <param name="_FilePath">The file path to validate.</param>
            <returns>True if the path is valid; otherwise, false.</returns>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.PreBuild(OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Executes the pre-build phase of the obfuscation process.
            Prepares the environment for obfuscation by setting up necessary configurations and validating conditions.
            </summary>
            <param name="_EditorSettings">The editor settings to use for the obfuscation process.</param>
            <param name="_BuildSettings">The build settings to use for the obfuscation process.</param>
            <returns>True if the pre-build phase completed successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _EditorSettings or _BuildSettings is null.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.PostAssemblyBuild(OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Executes the post-assembly build phase of the obfuscation process.
            Performs the actual obfuscation of assemblies after they have been built by Unity.
            </summary>
            <param name="_EditorSettings">The editor settings to use for the obfuscation process.</param>
            <param name="_BuildSettings">The build settings to use for the obfuscation process.</param>
            <returns>True if the post-assembly build phase completed successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _EditorSettings or _BuildSettings is null.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.PostBuild(OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Executes the post-build phase of the obfuscation process.
            Performs final processing after the Unity build has completed.
            </summary>
            <param name="_EditorSettings">The editor settings to use for the obfuscation process.</param>
            <param name="_BuildSettings">The build settings to use for the obfuscation process.</param>
            <returns>True if the post-build phase completed successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _EditorSettings or _BuildSettings is null.</exception>
        </member>
        <member name="M:OPS.Obfuscator.Editor.Obfuscator.PostAssetsBuild(OPS.Obfuscator.Editor.Settings.Unity.Editor.EditorSettings,OPS.Obfuscator.Editor.Settings.Unity.Build.BuildSettings)">
            <summary>
            Executes the post-assets build phase of the obfuscation process.
            Updates Unity asset files to maintain compatibility with obfuscated code.
            </summary>
            <param name="_EditorSettings">The editor settings to use for the obfuscation process.</param>
            <param name="_BuildSettings">The build settings to use for the obfuscation process.</param>
            <returns>True if the post-assets build phase completed successfully; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when _EditorSettings or _BuildSettings is null.</exception>
        </member>
    </members>
</doc>
